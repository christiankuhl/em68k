00000000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 15.04.2021 13:30:13

00000000                             1  ;
00000000                             2  ;
00000000                             3  ;  File Name   :  MCL68 Opcode Tests
00000000                             4  ;  Used on     :  
00000000                             5  ;  Author      :  Ted Fried,MicroCore Labs
00000000                             6  ;  Creation    :  7/14/2020
00000000                             7  ;
00000000                             8  ;   Description:
00000000                             9  ;   ============
00000000                            10  ;   
00000000                            11  ;  Program to test all of the Motorola 68000's opcodes.
00000000                            12  ;
00000000                            13  ;  If failures are detected,the code will immediately loop on itself.
00000000                            14  ;  All addressing modes,data sizes,and opcode combinations are tested.
00000000                            15  ;
00000000                            16  ;  This code was developed using the Easy68K simulator where all tests passed!
00000000                            17  ;
00000000                            18  ;------------------------------------------------------------------------
00000000                            19  ;
00000000                            20  ; Modification History:
00000000                            21  ; =====================
00000000                            22  ;
00000000                            23  ; Revision 1 7/14/2020 
00000000                            24  ; Initial revision
00000000                            25  ;
00000000                            26  ;
00000000                            27  ;------------------------------------------------------------------------
00000000                            28  ;
00000000                            29  ; Copyright (c) 2020 Ted Fried
00000000                            30  ; 
00000000                            31  ; Permission is hereby granted,free of charge,to any person obtaining a copy
00000000                            32  ; of this software and associated documentation files (the "Software"),to deal
00000000                            33  ; in the Software without restriction,including without limitation the rights
00000000                            34  ; to use,copy,modify,merge,publish,distribute,sublicense,and/or sell
00000000                            35  ; copies of the Software,and to permit persons to whom the Software is
00000000                            36  ; furnished to do so,subject to the following conditions:
00000000                            37  ; 
00000000                            38  ; The above copyright notice and this permission notice shall be included in all
00000000                            39  ; copies or substantial portions of the Software.
00000000                            40  ; 
00000000                            41  ; THE SOFTWARE IS PROVIDED "AS IS",WITHOUT WARRANTY OF ANY KIND,EXPRESS OR
00000000                            42  ; IMPLIED,INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
00000000                            43  ; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
00000000                            44  ; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,DAMAGES OR OTHER
00000000                            45  ; LIABILITY,WHETHER IN AN ACTION OF CONTRACT,TORT OR OTHERWISE,ARISING FROM,
00000000                            46  ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
00000000                            47  ; SOFTWARE.
00000000                            48  ;
00000000                            49  
00000000                            50  
00000000  =FFFFFF00                 51  TESTSTATUS equ $ffffff00
00000000                            52  
00000000                            53  ; Populate Exception Vectors
00000000                            54  ;
00000000                            55      org $00000   
00000000= 000003F0                  56    dc.l    $000003F0  ; Vector = 0   Reset Supervisor Stack Pointer
00000004= 00000400                  57    dc.l    $00000400  ; Vector = 1   Reset Initial PC
00000008= 22222222                  58    dc.l    $22222222  ; Vector = 2   Bus Error
0000000C= 30303033                  59    dc.l    $30303033  ; Vector = 3   Address Error
00000010= 44444444                  60    dc.l    $44444444  ; Vector = 4   Illegal Instruction
00000014= 55555555                  61    dc.l    $55555555  ; Vector = 5   Zero Divide
00000018= 0000F010                  62    dc.l    $0000F010  ; Vector = 6   CHK Instruction
0000001C= 0000F020                  63    dc.l    $0000F020  ; Vector = 7   TRAPV Instruction
00000020= 88888888                  64    dc.l    $88888888  ; Vector = 8   Privilege Violation 
00000024= 99999999                  65    dc.l    $99999999  ; Vector = 9   Trace
00000028= AAAAAAAA                  66    dc.l    $aaaaaaaa  ; Vector = 10  Line A Emulator
0000002C= BBBBBBBB                  67    dc.l    $bbbbbbbb  ; Vector = 11  Line F Emulator
00000030                            68    
00000060                            69      org $00060   
00000060= 12121212                  70    dc.l    $12121212  ; Vector = 24  Spurrious Interrupt
00000064= 11111111                  71    dc.l    $11111111  ; Vector = 25  Level 1 Interrupt Autovector
00000068= 22222222                  72    dc.l    $22222222  ; Vector = 26  Level 2 Interrupt Autovector
0000006C= 33333333                  73    dc.l    $33333333  ; Vector = 27  Level 3 Interrupt Autovector
00000070= 44444444                  74    dc.l    $44444444  ; Vector = 28  Level 4 Interrupt Autovector
00000074= 55555555                  75    dc.l    $55555555  ; Vector = 29  Level 5 Interrupt Autovector
00000078= 66666666                  76    dc.l    $66666666  ; Vector = 30  Level 6 Interrupt Autovector
0000007C= 77777777                  77    dc.l    $77777777  ; Vector = 31  Level 7 Interrupt Autovector
00000080                            78    
00000080                            79  
00000080                            80  ; Loop here when all tests pass
00000080                            81  ;
0000F000                            82      org $00F000 
0000F000                            83  
0000F000                            84  ALL_DONE:
0000F000  46FC 2700                 85      move #$2700,sr
0000F004  4E72 2700                 86      stop #$2700
0000F008                            87  
0000F008                            88   
0000F008                            89  ; Exception Vector = 6   CHK Instruction
0000F008                            90  ;
0000F010                            91      org $00F010 
0000F010                            92    
0000F010                            93  EXCEPTION_6:
0000F010  2C3C EEEE0006             94              move.l #$EEEE0006,d6      ; Set d6 to the exception vector 
0000F016  4E73                      95              rte
0000F018                            96            
0000F018                            97  
0000F018                            98   
0000F018                            99  ; Exception Vector = 7   TRAPV Instruction
0000F018                           100  ;
0000F020                           101      org $00F020 
0000F020                           102    
0000F020                           103  EXCEPTION_7:
0000F020  203C 12345678            104              move.l #$12345678,d0      ; Set d6 to the exception vector 
0000F026  4E73                     105              rte
0000F028                           106            
0000F028                           107  
0000F028                           108  
0000F028                           109  ; Beginning of opcode tests
0000F028                           110  ;
00000400                           111      org $000400 
00000400                           112  
00000400  2E7C 000003F0            113     move.l #$000003F0,a7      ; populate stack pointer
00000406                           114  
00000406                           115  
00000406  4EB9 00000570            116     jsr op_ORI_TO_CCR
0000040C  4EB9 000005B8            117     jsr op_ORI_TO_SR
00000412  4EB9 00000600            118     jsr op_EORI_TO_CCR
00000418  4EB9 0000064C            119     jsr op_EORI_TO_SR
0000041E  4EB9 00000698            120     jsr op_ANDI_TO_CCR
00000424  4EB9 000006E4            121     jsr op_ANDI_TO_SR
0000042A  4EB9 00000730            122     jsr op_BTST
00000430  4EB9 00000BF6            123     jsr op_BCHG
00000436  4EB9 0000109C            124     jsr op_BCLR
0000043C  4EB9 000013B2            125     jsr op_BSET
00000442  4EB9 0000185A            126     jsr op_MOVEP
00000448  4EB9 000018F8            127     jsr op_BOOL_I
0000044E  4EB9 00001A8C            128     jsr op_BSR
00000454  4EB9 00001AD0            129     jsr op_CMP_I
0000045A  4EB9 00001C28            130     jsr op_ADD_I
00000460  4EB9 00001D24            131     jsr op_SUB_I
00000466  4EB9 00001E20            132     jsr op_MOVE
0000046C  4EB9 00001FDE            133     jsr op_MOVE_xxx_FLAGS
00000472  4EB9 0000214A            134     jsr op_EXT
00000478  4EB9 0000217E            135     jsr op_SWAP
0000047E  4EB9 000021A4            136     jsr op_LEAPEA 
00000484  4EB9 0000224E            137     jsr op_TAS 
0000048A  4EB9 00002286            138     jsr op_TST 
00000490  4EB9 000022CC            139     jsr op_LINKS 
00000496  4EB9 000022FE            140     jsr op_MOVE_USP
0000049C  4EB9 00002326            141     jsr op_CHK
000004A2  4EB9 00002372            142     jsr op_NEGS
000004A8  4EB9 0000257A            143     jsr op_CLR
000004AE  4EB9 000025C4            144     jsr op_MOVEM
000004B4                           145     ;jsr op_ABCD
000004B4                           146     ;jsr op_SBCD
000004B4                           147     ;jsr op_NBCD
000004B4  4EB9 00002BAE            148     jsr op_TRAPV
000004BA  4EB9 00002BE0            149     jsr op_RTR
000004C0  4EB9 00002C18            150     jsr op_BCC
000004C6  4EB9 00002C92            151     jsr op_DBCC
000004CC  4EB9 00002CCA            152     jsr op_SCC
000004D2  4EB9 00002D06            153     jsr op_ADDQ
000004D8  4EB9 00002DCA            154     jsr op_SUBQ
000004DE  4EB9 00002E8E            155     jsr op_MOVEQ
000004E4  4EB9 00002EBA            156     jsr op_DIVU ;#FIXME: Flags
000004EA  4EB9 00002F1E            157     jsr op_DIVS ;#FIXME: Flags
000004F0  4EB9 00002F82            158     jsr op_OR
000004F6  4EB9 0000307E            159     jsr op_AND
000004FC  4EB9 0000317A            160     jsr op_EOR
00000502  4EB9 00003204            161     jsr op_CMP
00000508  4EB9 0000328E            162     jsr op_CMPA
0000050E  4EB9 00003308            163     jsr op_CMPM
00000514  4EB9 000033CE            164     jsr op_ADD ;#FIXME: Flags
0000051A  4EB9 000034CA            165     jsr op_SUB ;#FIXME: Flags
00000520  4EB9 000035C6            166     jsr op_ADDA
00000526  4EB9 0000362E            167     jsr op_SUBA
0000052C  4EB9 00003696            168     jsr op_ADDX
00000532  4EB9 000037C0            169     jsr op_SUBX
00000538  4EB9 000038EC            170     jsr op_MULU
0000053E  4EB9 0000394A            171     jsr op_MULS
00000544  4EB9 000039A8            172     jsr op_EXG
0000054A  4EB9 00003A20            173     jsr op_ROx
00000550  4EB9 00003C3E            174     jsr op_ROXx
00000556  4EB9 00004086            175     jsr op_SHIFTS2
0000055C  4EB9 00003E5C            176     jsr op_SHIFTS
00000562                           177  
00000562  4EF9 0000F000            178     jmp ALL_DONE
00000568                           179  
00000568                           180     
00000568                           181  
00000568  263C 33333333            182  BSR_FAR1:       move.l #$33333333,d3
0000056E  4E75                     183                  rts
00000570                           184  
00000570                           185  ;-----------------------------------------------------------
00000570                           186  ;-----------------------------------------------------------
00000570                           187  ; OPCODE : ORI_TO_CCR
00000570                           188  ;-----------------------------------------------------------
00000570                           189  ;-----------------------------------------------------------
00000570                           190  op_ORI_TO_CCR: 
00000570                           191  
00000570  003C 00FF                192      ori.b #$FF,CCR
00000574  6A00 0036                193      bpl ORI_TO_CCR_FAIL     ; branch if Z clear  
00000578  6600 0032                194      bne ORI_TO_CCR_FAIL     ; branch if N clear
0000057C  6800 002E                195      bvc ORI_TO_CCR_FAIL     ; branch if V clear 
00000580  6400 002A                196      bcc ORI_TO_CCR_FAIL     ; branch if C clear 
00000584                           197      
00000584  44FC 0000                198      move #$00,CCR
00000588  003C 0000                199      ori.b #$00,CCR
0000058C  6700 001E                200      beq ORI_TO_CCR_FAIL     ; branch if Z set  
00000590  6B00 001A                201      bmi ORI_TO_CCR_FAIL     ; branch if N set  
00000594  6900 0016                202      bvs ORI_TO_CCR_FAIL     ; branch if V set  
00000598  6500 0012                203      bcs ORI_TO_CCR_FAIL     ; branch if C set  
0000059C                           204     
0000059C  46FC 2700                205      move #$2700,SR         ; Put flags back to initial value
000005A0                           206  
000005A0  307C FF00                207      movea #TESTSTATUS,a0
000005A4  117C 0001 0000           208      move.b #$1,$00(a0)
000005AA  4E75                     209      rts
000005AC                           210      
000005AC                           211  ORI_TO_CCR_FAIL: 
000005AC  307C FF00                212      movea #TESTSTATUS,a0
000005B0  117C 0002 0000           213      move.b #$2,$00(a0)
000005B6  4E75                     214      rts
000005B8                           215     
000005B8                           216  ;-----------------------------------------------------------
000005B8                           217  ;-----------------------------------------------------------
000005B8                           218  ; OPCODE : ORI_TO_SR
000005B8                           219  ;-----------------------------------------------------------
000005B8                           220  ;-----------------------------------------------------------
000005B8                           221  op_ORI_TO_SR: 
000005B8                           222  
000005B8  007C 2FFF                223      ori.w #$2FFF,SR
000005BC  6A00 0036                224      bpl ORI_TO_SR_FAIL     ; branch if Z clear  
000005C0  6600 0032                225      bne ORI_TO_SR_FAIL     ; branch if N clear
000005C4  6800 002E                226      bvc ORI_TO_SR_FAIL     ; branch if V clear 
000005C8  6400 002A                227      bcc ORI_TO_SR_FAIL     ; branch if C clear 
000005CC                           228      
000005CC  46FC 2000                229      move #$2000,SR
000005D0  007C 0000                230      ori.w #$0000,SR
000005D4  6700 001E                231      beq ORI_TO_SR_FAIL     ; branch if Z set  
000005D8  6B00 001A                232      bmi ORI_TO_SR_FAIL     ; branch if N set  
000005DC  6900 0016                233      bvs ORI_TO_SR_FAIL     ; branch if V set  
000005E0  6500 0012                234      bcs ORI_TO_SR_FAIL     ; branch if C set  
000005E4                           235     
000005E4  46FC 2700                236      move #$2700,SR        ; Put flags back to initial value
000005E8                           237  
000005E8  307C FF00                238      movea #TESTSTATUS,a0
000005EC  117C 0001 0001           239      move.b #$1,$01(a0)
000005F2  4E75                     240      rts
000005F4                           241      
000005F4                           242  ORI_TO_SR_FAIL:
000005F4  307C FF00                243      movea #TESTSTATUS,a0
000005F8  117C 0002 0001           244      move.b #$2,$01(a0)
000005FE  4E75                     245      rts
00000600                           246  
00000600                           247  ;-----------------------------------------------------------
00000600                           248  ;-----------------------------------------------------------
00000600                           249  ; OPCODE : EORI_TO_CCR
00000600                           250  ;-----------------------------------------------------------
00000600                           251  ;-----------------------------------------------------------
00000600                           252  op_EORI_TO_CCR: 
00000600                           253  
00000600  44FC 0000                254      move #$00,CCR
00000604  0A3C 00FF                255      eori.b #$FF,CCR
00000608  6A00 0036                256      bpl EORI_TO_CCR_FAIL     ; branch if Z clear  
0000060C  6600 0032                257      bne EORI_TO_CCR_FAIL     ; branch if N clear
00000610  6800 002E                258      bvc EORI_TO_CCR_FAIL     ; branch if V clear 
00000614  6400 002A                259      bcc EORI_TO_CCR_FAIL     ; branch if C clear 
00000618                           260      
00000618  44FC 0000                261      move #$00,CCR
0000061C  0A3C 0000                262      eori.b #$00,CCR
00000620  6700 001E                263      beq EORI_TO_CCR_FAIL     ; branch if Z set  
00000624  6B00 001A                264      bmi EORI_TO_CCR_FAIL     ; branch if N set  
00000628  6900 0016                265      bvs EORI_TO_CCR_FAIL     ; branch if V set  
0000062C  6500 0012                266      bcs EORI_TO_CCR_FAIL     ; branch if C set  
00000630                           267     
00000630  46FC 2700                268      move #$2700,SR         ; Put flags back to initial value
00000634                           269  
00000634  307C FF00                270      movea #TESTSTATUS,a0
00000638  117C 0001 0002           271      move.b #$1,$02(a0)
0000063E  4E75                     272      rts
00000640                           273      
00000640                           274  EORI_TO_CCR_FAIL:
00000640  307C FF00                275      movea #TESTSTATUS,a0
00000644  117C 0002 0002           276      move.b #$2,$02(a0)
0000064A  4E75                     277      rts
0000064C                           278  
0000064C                           279  ;-----------------------------------------------------------
0000064C                           280  ;-----------------------------------------------------------
0000064C                           281  ; OPCODE : EORI_TO_SR
0000064C                           282  ;-----------------------------------------------------------
0000064C                           283  ;-----------------------------------------------------------
0000064C                           284  op_EORI_TO_SR: 
0000064C                           285  
0000064C  46FC 2000                286      move #$2000,SR
00000650  0A7C 0FFF                287      eori.w #$0FFF,SR
00000654  6A00 0036                288      bpl EORI_TO_SR_FAIL     ; branch if Z clear  
00000658  6600 0032                289      bne EORI_TO_SR_FAIL     ; branch if N clear
0000065C  6800 002E                290      bvc EORI_TO_SR_FAIL     ; branch if V clear 
00000660  6400 002A                291      bcc EORI_TO_SR_FAIL     ; branch if C clear 
00000664                           292      
00000664  46FC 2000                293      move #$2000,SR
00000668  0A7C 0000                294      eori.w #$0000,SR
0000066C  6700 001E                295      beq EORI_TO_SR_FAIL     ; branch if Z set  
00000670  6B00 001A                296      bmi EORI_TO_SR_FAIL     ; branch if N set  
00000674  6900 0016                297      bvs EORI_TO_SR_FAIL     ; branch if V set  
00000678  6500 0012                298      bcs EORI_TO_SR_FAIL     ; branch if C set  
0000067C                           299     
0000067C  46FC 2700                300      move #$2700,SR        ; Put flags back to initial value
00000680                           301  
00000680  307C FF00                302      movea #TESTSTATUS,a0
00000684  117C 0001 0003           303      move.b #$1,$03(a0)
0000068A  4E75                     304      rts
0000068C                           305      
0000068C                           306  EORI_TO_SR_FAIL:
0000068C  307C FF00                307      movea #TESTSTATUS,a0
00000690  117C 0002 0003           308      move.b #$2,$03(a0)
00000696  4E75                     309      rts
00000698                           310  
00000698                           311  ;-----------------------------------------------------------
00000698                           312  ;-----------------------------------------------------------
00000698                           313  ; OPCODE : ANDI_TO_CCR
00000698                           314  ;-----------------------------------------------------------
00000698                           315  ;-----------------------------------------------------------
00000698                           316  op_ANDI_TO_CCR: 
00000698                           317  
00000698  44FC 00FF                318      move #$FF,CCR
0000069C  023C 00FF                319      andi.b #$FF,CCR
000006A0  6A00 0036                320      bpl ANDI_TO_CCR_FAIL     ; branch if Z clear  
000006A4  6600 0032                321      bne ANDI_TO_CCR_FAIL     ; branch if N clear
000006A8  6800 002E                322      bvc ANDI_TO_CCR_FAIL     ; branch if V clear 
000006AC  6400 002A                323      bcc ANDI_TO_CCR_FAIL     ; branch if C clear 
000006B0                           324      
000006B0  44FC 00FF                325      move #$FF,CCR
000006B4  023C 0000                326      andi.b #$00,CCR
000006B8  6700 001E                327      beq ANDI_TO_CCR_FAIL     ; branch if Z set  
000006BC  6B00 001A                328      bmi ANDI_TO_CCR_FAIL     ; branch if N set  
000006C0  6900 0016                329      bvs ANDI_TO_CCR_FAIL     ; branch if V set  
000006C4  6500 0012                330      bcs ANDI_TO_CCR_FAIL     ; branch if C set  
000006C8                           331     
000006C8  46FC 2700                332      move #$2700,SR         ; Put flags back to initial value
000006CC                           333  
000006CC  307C FF00                334      movea #TESTSTATUS,a0
000006D0  117C 0001 0004           335      move.b #$1,$04(a0)
000006D6  4E75                     336      rts
000006D8                           337      
000006D8                           338  ANDI_TO_CCR_FAIL:
000006D8  307C FF00                339      movea #TESTSTATUS,a0
000006DC  117C 0002 0004           340      move.b #$2,$04(a0)
000006E2  4E75                     341      rts
000006E4                           342  
000006E4                           343  ;-----------------------------------------------------------
000006E4                           344  ;-----------------------------------------------------------
000006E4                           345  ; OPCODE : ANDI_TO_SR
000006E4                           346  ;-----------------------------------------------------------
000006E4                           347  ;-----------------------------------------------------------
000006E4                           348  op_ANDI_TO_SR: 
000006E4  46FC 20FF                349      move #$20FF,SR
000006E8  027C FFFF                350      andi.w #$FFFF,SR
000006EC  6A00 0036                351      bpl ANDI_TO_SR_FAIL     ; branch if Z clear  
000006F0  6600 0032                352      bne ANDI_TO_SR_FAIL     ; branch if N clear
000006F4  6800 002E                353      bvc ANDI_TO_SR_FAIL     ; branch if V clear 
000006F8  6400 002A                354      bcc ANDI_TO_SR_FAIL     ; branch if C clear 
000006FC                           355      
000006FC  46FC 20FF                356      move #$20FF,SR
00000700  027C FF00                357      andi.w #$FF00,SR
00000704  6700 001E                358      beq ANDI_TO_SR_FAIL     ; branch if Z set  
00000708  6B00 001A                359      bmi ANDI_TO_SR_FAIL     ; branch if N set  
0000070C  6900 0016                360      bvs ANDI_TO_SR_FAIL     ; branch if V set  
00000710  6500 0012                361      bcs ANDI_TO_SR_FAIL     ; branch if C set  
00000714                           362     
00000714  46FC 2700                363      move #$2700,SR         ; Put flags back to initial value
00000718                           364  
00000718  307C FF00                365      movea #TESTSTATUS,a0
0000071C  117C 0001 0005           366      move.b #$1,$05(a0)
00000722  4E75                     367      rts
00000724                           368      
00000724                           369  ANDI_TO_SR_FAIL:
00000724  307C FF00                370      movea #TESTSTATUS,a0
00000728  117C 0002 0005           371      move.b #$2,$05(a0)
0000072E  4E75                     372      rts
00000730                           373    
00000730                           374  ;-----------------------------------------------------------
00000730                           375  ;-----------------------------------------------------------
00000730                           376  ; OPCODE : BTST
00000730                           377  ;-----------------------------------------------------------
00000730                           378  ;-----------------------------------------------------------
00000730                           379  op_BTST: 
00000730                           380  
00000730                           381  ;  Bit Number Static 
00000730                           382      
00000730                           383              ; EA = Dn  - LONG only
00000730  203C 80000001            384              move.l #$80000001,d0      ; populate test data
00000736  0800 0000                385              btst.l #0,d0              
0000073A  6700 04AE                386              beq BTST_FAIL               ; branch if Z set
0000073E  0800 0001                387              btst.l #1,d0              ; 
00000742  6600 04A6                388              bne BTST_FAIL               ; branch if Z clear  
00000746  0800 001F                389              btst.l #31,d0             ; 
0000074A  6700 049E                390              beq BTST_FAIL               ; branch if Z set
0000074E                           391              
0000074E                           392              
0000074E                           393              ; EA = (An)  - BYTE only
0000074E  207C 00000100            394              move.l #$00000100,a0      ; point to memory to address 0x100
00000754  10BC 0081                395              move.b #$81,(a0)          ; populate test data
00000758  1210                     396              move.b (a0),d1            ; Check to see if data in memory is 0x81
0000075A  0810 0000                397              btst.b #0,(a0)            
0000075E  6700 048A                398              beq BTST_FAIL               ; branch if Z set
00000762  0810 0001                399              btst.b #1,(a0)            ; 
00000766  6600 0482                400              bne BTST_FAIL               ; branch if Z clear  
0000076A  0810 0007                401              btst.b #7,(a0)            ; 
0000076E  6700 047A                402              beq BTST_FAIL               ; branch if Z set
00000772                           403              
00000772                           404              
00000772                           405              ; EA = (An)+  - BYTE only
00000772  207C 00000100            406              move.l #$00000100,a0      ; point to memory to address 0x100 
00000778  10FC 0001                407              move.b #$01,(a0)+         ; populate test data
0000077C  10FC 00FC                408              move.b #$FC,(a0)+         ; populate test data
00000780  10FC 0080                409              move.b #$80,(a0)+         ; populate test data
00000784  207C 00000100            410              move.l #$00000100,a0      ; point to memory to address 0x100 
0000078A  0818 0000                411              btst.b #0,(a0)+            
0000078E  6700 045A                412              beq BTST_FAIL               ; branch if Z set
00000792  0818 0001                413              btst.b #1,(a0)+           ; 
00000796  6600 0452                414              bne BTST_FAIL               ; branch if Z clear  
0000079A  0818 0007                415              btst.b #7,(a0)+           ; 
0000079E  6700 044A                416              beq BTST_FAIL               ; branch if Z set
000007A2                           417          
000007A2                           418          
000007A2                           419              ; EA = -(An)  - BYTE only
000007A2  207C 00000100            420              move.l #$00000100,a0      ; point to memory to address
000007A8  10FC 0080                421              move.b #$80,(a0)+         ; populate test data
000007AC  10FC 00FC                422              move.b #$FC,(a0)+         ; populate test data
000007B0  10FC 0001                423              move.b #$01,(a0)+         ; populate test data
000007B4  207C 00000103            424              move.l #$00000103,a0      ; point to memory to address 
000007BA  0820 0000                425              btst.b #0,-(a0)            
000007BE  6700 042A                426              beq BTST_FAIL               ; branch if Z set
000007C2  0820 0001                427              btst.b #1,-(a0)           ; 
000007C6  6600 0422                428              bne BTST_FAIL               ; branch if Z clear  
000007CA  0820 0007                429              btst.b #7,-(a0)           ; 
000007CE  6700 041A                430              beq BTST_FAIL               ; branch if Z set
000007D2                           431          
000007D2                           432          
000007D2                           433              ; EA = n(An)  - BYTE only
000007D2  207C 00000100            434              move.l #$00000100,a0      ; point to memory to address
000007D8  10FC 0001                435              move.b #$01,(a0)+         ; populate test data
000007DC  10FC 00FC                436              move.b #$FC,(a0)+         ; populate test data
000007E0  10FC 0080                437              move.b #$80,(a0)+         ; populate test data
000007E4  207C 00000100            438              move.l #$00000100,a0      ; point to memory to address
000007EA  0828 0000 0000           439              btst.b #0,0(a0)            
000007F0  6700 03F8                440              beq BTST_FAIL               ; branch if Z set
000007F4  0828 0001 0001           441              btst.b #1,1(a0)           ; 
000007FA  6600 03EE                442              bne BTST_FAIL               ; branch if Z clear  
000007FE  0828 0007 0002           443              btst.b #7,2(a0)           ; 
00000804  6700 03E4                444              beq BTST_FAIL               ; branch if Z set
00000808                           445          
00000808                           446          
00000808                           447              ; EA = n(An,R.W)  - BYTE only
00000808  207C 00000100            448              move.l #$00000100,a0      ; point to memory to address
0000080E  227C 00000000            449              move.l #$00000000,a1      ; point to memory to address
00000814  247C 00000001            450              move.l #$00000001,a2      ; point to memory to address
0000081A  7000                     451              move.l #$00000000,d0      ; point to memory to address
0000081C  7201                     452              move.l #$00000001,d1      ; point to memory to address
0000081E  0830 0000 0000           453              btst.b #0,0(a0,d0.w)            
00000824  6700 03C4                454              beq BTST_FAIL               ; branch if Z set
00000828  0830 0001 1000           455              btst.b #1,0(a0,d1.w)      ; 
0000082E  6600 03BA                456              bne BTST_FAIL               ; branch if Z clear  
00000832  0830 0007 1001           457              btst.b #7,1(a0,d1.w)      ; 
00000838  6700 03B0                458              beq BTST_FAIL               ; branch if Z set
0000083C                           459              ; EA = n(An,R.L)  - BYTE only
0000083C  0830 0000 0800           460              btst.b #0,0(a0,d0.l)  
00000842  6700 03A6                461              beq BTST_FAIL               ; branch if Z set
00000846  0830 0001 1800           462              btst.b #1,0(a0,d1.l)      ; 
0000084C  6600 039C                463              bne BTST_FAIL               ; branch if Z clear  
00000850  0830 0007 1801           464              btst.b #7,1(a0,d1.l)      ; 
00000856  6700 0392                465              beq BTST_FAIL               ; branch if Z set
0000085A                           466              ; EA = n(An,A.W)  - BYTE only
0000085A  0830 0000 9000           467              btst.b #0,0(a0,a1.w)            
00000860  6700 0388                468              beq BTST_FAIL               ; branch if Z set
00000864  0830 0001 A000           469              btst.b #1,0(a0,a2.w)      ; 
0000086A  6600 037E                470              bne BTST_FAIL               ; branch if Z clear  
0000086E  0830 0007 A001           471              btst.b #7,1(a0,a2.w)      ; 
00000874  6700 0374                472              beq BTST_FAIL               ; branch if Z set
00000878                           473              ; EA = n(An,A.L)  - BYTE only
00000878  0830 0000 9800           474              btst.b #0,0(a0,a1.l)  
0000087E  6700 036A                475              beq BTST_FAIL               ; branch if Z set
00000882  0830 0001 A800           476              btst.b #1,0(a0,a2.l)      ; 
00000888  6600 0360                477              bne BTST_FAIL               ; branch if Z clear  
0000088C  0830 0007 A801           478              btst.b #7,1(a0,a2.l)      ; 
00000892  6700 0356                479              beq BTST_FAIL               ; branch if Z set
00000896                           480          
00000896                           481          
00000896                           482              ; EA = x.W  - BYTE only
00000896  0838 0000 0100           483              btst.b #0,$0100            
0000089C  6700 034C                484              beq BTST_FAIL               ; branch if Z set
000008A0  0838 0001 0101           485              btst.b #1,$0101           ; 
000008A6  6600 0342                486              bne BTST_FAIL               ; branch if Z clear  
000008AA  0838 0007 0102           487              btst.b #7,$0102           ; 
000008B0  6700 0338                488              beq BTST_FAIL               ; branch if Z set
000008B4                           489          
000008B4                           490          
000008B4                           491              ; EA = x.L  - BYTE only
000008B4  207C 000F0100            492              move.l #$000F0100,a0      ; point to memory to address 0x100 
000008BA  10FC 0001                493              move.b #$01,(a0)+         ; populate test data
000008BE  10FC 00FC                494              move.b #$FC,(a0)+         ; populate test data
000008C2  10FC 0080                495              move.b #$80,(a0)+         ; populate test data
000008C6  0839 0000 000F0100       496              btst.b #0,$000F0100 
000008CE  6700 031A                497              beq BTST_FAIL               ; branch if Z set
000008D2  0839 0001 000F0101       498              btst.b #1,$000F0101       ; 
000008DA  6600 030E                499              bne BTST_FAIL               ; branch if Z clear  
000008DE  0839 0007 000F0102       500              btst.b #7,$000F0102       ; 
000008E6  6700 0302                501              beq BTST_FAIL               ; branch if Z set
000008EA                           502          
000008EA                           503  
000008EA                           504  
000008EA                           505              ; EA = x(PC)  - BYTE only
000008EA  4BFA FE44                506              lea op_BTST(pc),a5
000008EE  083A 0000 FE3E           507              btst.b #0,op_BTST(pc) 
000008F4  6600 02F4                508              bne BTST_FAIL               ; branch if Z clear  
000008F8  083A 0003 0026           509              btst.b #3,op_BTST0(pc)     ; 
000008FE  6700 02EA                510              beq BTST_FAIL               ; branch if Z set
00000902  083A 0006 0094           511              btst.b #6,op_BTST12(pc)    ; 
00000908  6700 02E0                512              beq BTST_FAIL               ; branch if Z set
0000090C                           513      
0000090C                           514              ; EA = n(PC,R.W)  - BYTE only
0000090C  207C 00000100            515              move.l #$00000100,a0      ; point to memory to address
00000912  227C 00000000            516              move.l #$00000000,a1      ; point to memory to address
00000918  247C 00000001            517              move.l #$00000001,a2      ; point to memory to address
0000091E  7000                     518              move.l #$00000000,d0      ; point to memory to address
00000920  7201                     519              move.l #$00000001,d1      ; point to memory to address
00000922                           520      
00000922  083B 0000 00FC           521  op_BTST0:   btst.b #0,op_BTST0(pc,d0.w)            
00000928  6600 02C0                522              bne BTST_FAIL               ; branch if Z clear  
0000092C                           523              
0000092C  4BFB 1002                524              lea op_BTST1(pc,d1.w),a5
00000930  083B 0001 10FC           525  op_BTST1:   btst.b #1,op_BTST1(pc,d1.w)      ; 
00000936  6700 02B2                526              beq BTST_FAIL               ; branch if Z set
0000093A  083B 0007 10FC           527  op_BTST2:   btst.b #7,op_BTST2(pc,d1.w)      ; 
00000940  6600 02A8                528              bne BTST_FAIL               ; branch if Z clear  
00000944                           529              ; EA = n(PC,R.L)  - BYTE only
00000944  083B 0000 08FC           530  op_BTST3:   btst.b #0,op_BTST3(pc,d0.l)  
0000094A  6600 029E                531              bne BTST_FAIL               ; branch if Z clear  
0000094E  083B 0001 18FC           532  op_BTST4:   btst.b #1,op_BTST4(pc,d1.l)      ; 
00000954  6700 0294                533              beq BTST_FAIL               ; branch if Z set
00000958  083B 0007 18FC           534  op_BTST5:   btst.b #7,op_BTST5(pc,d1.l)      ; 
0000095E  6600 028A                535              bne BTST_FAIL               ; branch if Z clear  
00000962                           536              ; EA = n(PC,A.W)  - BYTE only
00000962  083B 0000 90FC           537  op_BTST6    btst.b #0,op_BTST6(pc,a1.w)            
00000968  6600 0280                538              bne BTST_FAIL               ; branch if Z clear  
0000096C  083B 0001 A0FC           539  op_BTST7:   btst.b #1,op_BTST7(pc,a2.w)      ; 
00000972  6700 0276                540              beq BTST_FAIL               ; branch if Z set
00000976  083B 0007 A0FC           541  op_BTST8:   btst.b #7,op_BTST8(pc,a2.w)      ; 
0000097C  6600 026C                542              bne BTST_FAIL               ; branch if Z clear  
00000980                           543              ; EA = n(PC,A.L)  - BYTE only
00000980  083B 0000 98FC           544  op_BTST9:   btst.b #0,op_BTST9(pc,a1.l)  
00000986  6600 0262                545              bne BTST_FAIL               ; branch if Z clear  
0000098A  083B 0001 A8FC           546  op_BTST10:  btst.b #1,op_BTST10(pc,a2.l)      ; 
00000990  6700 0258                547              beq BTST_FAIL               ; branch if Z set
00000994  083B 0007 A8FC           548  op_BTST11:  btst.b #7,op_BTST11(pc,a2.l)      ; 
0000099A  6600 024E                549  op_BTST12:  bne BTST_FAIL               ; branch if Z clear  
0000099E                           550   
0000099E                           551  
0000099E                           552  
0000099E                           553  ; Bit Number Dynamic
0000099E                           554      
0000099E                           555              ; EA = Dn  - LONG only
0000099E  203C 80000001            556              move.l #$80000001,d0      ; populate test data
000009A4  7A00                     557              move.l #0,d5              ; populate bit number to test
000009A6  7C01                     558              move.l #1,d6              ; populate bit number to test
000009A8  7E1F                     559              move.l #31,d7              ; populate bit number to test
000009AA                           560              
000009AA  0B00                     561              btst.l d5,d0              
000009AC  6700 023C                562              beq BTST_FAIL               ; branch if Z set
000009B0  0D00                     563              btst.l d6,d0              ; 
000009B2  6600 0236                564              bne BTST_FAIL               ; branch if Z clear  
000009B6  0F00                     565              btst.l d7,d0             ; 
000009B8  6700 0230                566              beq BTST_FAIL               ; branch if Z set
000009BC                           567              
000009BC                           568              
000009BC                           569              ; EA = (An)  - BYTE only
000009BC  7A00                     570              move.l #0,d5              ; populate bit number to test
000009BE  7C01                     571              move.l #1,d6              ; populate bit number to test
000009C0  7E07                     572              move.l #7,d7              ; populate bit number to test           
000009C2  207C 00000100            573              move.l #$00000100,a0      ; point to memory to address 0x100
000009C8  10BC 0081                574              move.b #$81,(a0)          ; populate test data
000009CC  1210                     575              move.b (a0),d1            ; Check to see if data in memory is 0x81
000009CE  0B10                     576              btst.b d5,(a0)            
000009D0  6700 0218                577              beq BTST_FAIL               ; branch if Z set
000009D4  0D10                     578              btst.b d6,(a0)            ; 
000009D6  6600 0212                579              bne BTST_FAIL               ; branch if Z clear  
000009DA  0F10                     580              btst.b d7,(a0)            ; 
000009DC  6700 020C                581              beq BTST_FAIL               ; branch if Z set
000009E0                           582              
000009E0                           583  ; ---
000009E0                           584  
000009E0                           585      
000009E0                           586              ; EA = (An)+  - BYTE only
000009E0  207C 00000100            587              move.l #$00000100,a0      ; point to memory to address 0x100 
000009E6  10FC 0001                588              move.b #$01,(a0)+         ; populate test data
000009EA  10FC 00FC                589              move.b #$FC,(a0)+         ; populate test data
000009EE  10FC 0080                590              move.b #$80,(a0)+         ; populate test data
000009F2  207C 00000100            591              move.l #$00000100,a0      ; point to memory to address 0x100 
000009F8  0B18                     592              btst.b d5,(a0)+            
000009FA  6700 01EE                593              beq BTST_FAIL               ; branch if Z set
000009FE  0D18                     594              btst.b d6,(a0)+           ; 
00000A00  6600 01E8                595              bne BTST_FAIL               ; branch if Z clear  
00000A04  0F18                     596              btst.b d7,(a0)+           ; 
00000A06  6700 01E2                597              beq BTST_FAIL               ; branch if Z set
00000A0A                           598          
00000A0A                           599          
00000A0A                           600              ; EA = -(An)  - BYTE only
00000A0A  207C 00000100            601              move.l #$00000100,a0      ; point to memory to address
00000A10  10FC 0080                602              move.b #$80,(a0)+         ; populate test data
00000A14  10FC 00FC                603              move.b #$FC,(a0)+         ; populate test data
00000A18  10FC 0001                604              move.b #$01,(a0)+         ; populate test data
00000A1C  207C 00000103            605              move.l #$00000103,a0      ; point to memory to address 
00000A22  0B20                     606              btst.b d5,-(a0)            
00000A24  6700 01C4                607              beq BTST_FAIL               ; branch if Z set
00000A28  0D20                     608              btst.b d6,-(a0)           ; 
00000A2A  6600 01BE                609              bne BTST_FAIL               ; branch if Z clear  
00000A2E  0F20                     610              btst.b d7,-(a0)           ; 
00000A30  6700 01B8                611              beq BTST_FAIL               ; branch if Z set
00000A34                           612          
00000A34                           613          
00000A34                           614              ; EA = n(An)  - BYTE only
00000A34  207C 00000100            615              move.l #$00000100,a0      ; point to memory to address
00000A3A  10FC 0001                616              move.b #$01,(a0)+         ; populate test data
00000A3E  10FC 00FC                617              move.b #$FC,(a0)+         ; populate test data
00000A42  10FC 0080                618              move.b #$80,(a0)+         ; populate test data
00000A46  207C 00000100            619              move.l #$00000100,a0      ; point to memory to address
00000A4C  0B28 0000                620              btst.b d5,0(a0)            
00000A50  6700 0198                621              beq BTST_FAIL               ; branch if Z set
00000A54  0D28 0001                622              btst.b d6,1(a0)           ; 
00000A58  6600 0190                623              bne BTST_FAIL               ; branch if Z clear  
00000A5C  0F28 0002                624              btst.b d7,2(a0)           ; 
00000A60  6700 0188                625              beq BTST_FAIL               ; branch if Z set
00000A64                           626          
00000A64                           627          
00000A64                           628              ; EA = n(An,R.W)  - BYTE only
00000A64  207C 00000100            629              move.l #$00000100,a0      ; point to memory to address
00000A6A  227C 00000000            630              move.l #$00000000,a1      ; point to memory to address
00000A70  247C 00000001            631              move.l #$00000001,a2      ; point to memory to address
00000A76  7000                     632              move.l #$00000000,d0      ; point to memory to address
00000A78  7201                     633              move.l #$00000001,d1      ; point to memory to address
00000A7A  0B30 0000                634              btst.b d5,0(a0,d0.w)            
00000A7E  6700 016A                635              beq BTST_FAIL               ; branch if Z set
00000A82  0D30 1000                636              btst.b d6,0(a0,d1.w)      ; 
00000A86  6600 0162                637              bne BTST_FAIL               ; branch if Z clear  
00000A8A  0F30 1001                638              btst.b d7,1(a0,d1.w)      ; 
00000A8E  6700 015A                639              beq BTST_FAIL               ; branch if Z set
00000A92                           640              ; EA = n(An,R.L)  - BYTE only
00000A92  0B30 0800                641              btst.b d5,0(a0,d0.l)  
00000A96  6700 0152                642              beq BTST_FAIL               ; branch if Z set
00000A9A  0D30 1800                643              btst.b d6,0(a0,d1.l)      ; 
00000A9E  6600 014A                644              bne BTST_FAIL               ; branch if Z clear  
00000AA2  0F30 1801                645              btst.b d7,1(a0,d1.l)      ; 
00000AA6  6700 0142                646              beq BTST_FAIL               ; branch if Z set
00000AAA                           647              ; EA = n(An,A.W)  - BYTE only
00000AAA  0B30 9000                648              btst.b d5,0(a0,a1.w)            
00000AAE  6700 013A                649              beq BTST_FAIL               ; branch if Z set
00000AB2  0D30 A000                650              btst.b d6,0(a0,a2.w)      ; 
00000AB6  6600 0132                651              bne BTST_FAIL               ; branch if Z clear  
00000ABA  0F30 A001                652              btst.b d7,1(a0,a2.w)      ; 
00000ABE  6700 012A                653              beq BTST_FAIL               ; branch if Z set
00000AC2                           654              ; EA = n(An,A.L)  - BYTE only
00000AC2  0B30 9800                655              btst.b d5,0(a0,a1.l)  
00000AC6  6700 0122                656              beq BTST_FAIL               ; branch if Z set
00000ACA  0D30 A800                657              btst.b d6,0(a0,a2.l)      ; 
00000ACE  6600 011A                658              bne BTST_FAIL               ; branch if Z clear  
00000AD2  0F30 A801                659              btst.b d7,1(a0,a2.l)      ; 
00000AD6  6700 0112                660              beq BTST_FAIL               ; branch if Z set
00000ADA                           661          
00000ADA                           662          
00000ADA                           663              ; EA = x.W  - BYTE only
00000ADA  0B38 0100                664              btst.b d5,$0100            
00000ADE  6700 010A                665              beq BTST_FAIL               ; branch if Z set
00000AE2  0D38 0101                666              btst.b d6,$0101           ; 
00000AE6  6600 0102                667              bne BTST_FAIL               ; branch if Z clear  
00000AEA  0F38 0102                668              btst.b d7,$0102           ; 
00000AEE  6700 00FA                669              beq BTST_FAIL               ; branch if Z set
00000AF2                           670          
00000AF2                           671          
00000AF2                           672              ; EA = x.L  - BYTE only
00000AF2  207C 000F0100            673              move.l #$000F0100,a0      ; point to memory to address 0x100 
00000AF8  10FC 0001                674              move.b #$01,(a0)+         ; populate test data
00000AFC  10FC 00FC                675              move.b #$FC,(a0)+         ; populate test data
00000B00  10FC 0080                676              move.b #$80,(a0)+         ; populate test data
00000B04  0B39 000F0100            677              btst.b d5,$000F0100 
00000B0A  6700 00DE                678              beq BTST_FAIL               ; branch if Z set
00000B0E  0D39 000F0101            679              btst.b d6,$000F0101       ; 
00000B14  6600 00D4                680              bne BTST_FAIL               ; branch if Z clear  
00000B18  0F39 000F0102            681              btst.b d7,$000F0102       ; 
00000B1E  6700 00CA                682              beq BTST_FAIL               ; branch if Z set
00000B22                           683          
00000B22                           684          
00000B22                           685              ; EA = x(PC)  - BYTE only
00000B22  7C03                     686              move.l #3,d6              ; populate bit number to test
00000B24  7E06                     687              move.l #6,d7              ; populate bit number to test
00000B26  4BFA FC08                688              lea op_BTST(pc),a5
00000B2A  0B3A FC04                689              btst.b d5,op_BTST(pc) 
00000B2E  6600 00BA                690              bne BTST_FAIL               ; branch if Z clear  
00000B32  0D3A FDEE                691              btst.b d6,op_BTST0(pc)     ; 
00000B36  6700 00B2                692              beq BTST_FAIL               ; branch if Z set
00000B3A  0F3A FE5E                693              btst.b d7,op_BTST12(pc)    ; 
00000B3E  6700 00AA                694              beq BTST_FAIL               ; branch if Z set
00000B42                           695    
00000B42                           696    
00000B42                           697              ; EA = n(PC,R.W)  - BYTE only
00000B42  207C 00000100            698              move.l #$00000100,a0      ; point to memory to address
00000B48  227C 00000000            699              move.l #$00000000,a1      ; point to memory to address
00000B4E  247C 00000001            700              move.l #$00000001,a2      ; point to memory to address
00000B54  7000                     701              move.l #$00000000,d0      ; point to memory to address
00000B56  7201                     702              move.l #$00000001,d1      ; point to memory to address
00000B58  7C01                     703              move.l #1,d6              ; populate bit number to test
00000B5A  7E07                     704              move.l #7,d7              ; populate bit number to test
00000B5C                           705      
00000B5C  0B3B 00FE                706  op_BTST20:  btst.b d5,op_BTST20(pc,d0.w)            
00000B60  6700 0088                707              beq BTST_FAIL               ; branch if Z set            
00000B64  4BFB 1002                708              lea op_BTST21(pc,d1.w),a5
00000B68  0D3B 10FE                709  op_BTST21:  btst.b d6,op_BTST21(pc,d1.w)      ; 
00000B6C  6700 007C                710              beq BTST_FAIL               ; branch if Z set
00000B70  0F3B 10FE                711  op_BTST22:  btst.b d7,op_BTST22(pc,d1.w)      ; 
00000B74  6600 0074                712              bne BTST_FAIL               ; branch if Z clear  
00000B78                           713              ; EA = n(PC,R.L)  - BYTE only
00000B78  0B3B 08FE                714  op_BTST23:  btst.b d5,op_BTST23(pc,d0.l)  
00000B7C  6700 006C                715              beq BTST_FAIL               ; branch if Z set
00000B80  0D3B 18FE                716  op_BTST24: btst.b d6,op_BTST24(pc,d1.l)      ; 
00000B84  6700 0064                717              beq BTST_FAIL               ; branch if Z set
00000B88  0F3B 18FE                718  op_BTST25  btst.b d7,op_BTST25(pc,d1.l)      ; 
00000B8C  6600 005C                719              bne BTST_FAIL               ; branch if Z clear  
00000B90                           720              ; EA = n(PC,A.W)  - BYTE only
00000B90  0B3B 90FE                721  op_BTST26   btst.b d5,op_BTST26(pc,a1.w)            
00000B94  6700 0054                722              beq BTST_FAIL               ; branch if Z set
00000B98  0D3B A0FE                723  op_BTST27:  btst.b d6,op_BTST27(pc,a2.w)      ; 
00000B9C  6700 004C                724              beq BTST_FAIL               ; branch if Z set
00000BA0  0F3B A0FE                725  op_BTST28:  btst.b d7,op_BTST28(pc,a2.w)      ; 
00000BA4  6600 0044                726              bne BTST_FAIL               ; branch if Z clear  
00000BA8                           727              ; EA = n(PC,A.L)  - BYTE only
00000BA8  0B3B 98FE                728  op_BTST29:  btst.b d5,op_BTST29(pc,a1.l)  
00000BAC  6700 003C                729              beq BTST_FAIL               ; branch if Z set
00000BB0  0D3B A8FE                730  op_BTST30:  btst.b d6,op_BTST30(pc,a2.l)      ; 
00000BB4  6700 0034                731              beq BTST_FAIL               ; branch if Z set
00000BB8  0F3B A8FE                732  op_BTST31:  btst.b d7,op_BTST31(pc,a2.l)      ; 
00000BBC  6600 002C                733  op_BTST32:  bne BTST_FAIL               ; branch if Z clear  
00000BC0                           734   
00000BC0                           735              ; EA = #x  - BYTE only
00000BC0                           736  
00000BC0  7A00                     737              move.l #0,d5              ; populate bit number to test
00000BC2  7C03                     738              move.l #3,d6              ; populate bit number to test
00000BC4  7E07                     739              move.l #7,d7              ; populate bit number to test
00000BC6                           740              
00000BC6  0B3C 0088                741              btst.b d5,#$88
00000BCA  6600 001E                742              bne BTST_FAIL               ; branch if Z clear  
00000BCE  0D3C 0088                743              btst.b d6,#$88
00000BD2  6700 0016                744              beq BTST_FAIL               ; branch if Z set
00000BD6  0F3C 0088                745              btst.b d7,#$88
00000BDA  6700 000E                746              beq BTST_FAIL               ; branch if Z set
00000BDE                           747              
00000BDE  307C FF00                748      movea #TESTSTATUS,a0
00000BE2  117C 0001 0006           749      move.b #$1,$06(a0)
00000BE8  4E75                     750      rts
00000BEA                           751      
00000BEA                           752  BTST_FAIL: 
00000BEA  307C FF00                753     movea #TESTSTATUS,a0
00000BEE  117C 0002 0006           754     move.b #$2,$06(a0)
00000BF4  4E75                     755     rts
00000BF6                           756   
00000BF6                           757    
00000BF6                           758  ;-----------------------------------------------------------
00000BF6                           759  ;-----------------------------------------------------------
00000BF6                           760  ; OPCODE : BCHG
00000BF6                           761  ;-----------------------------------------------------------
00000BF6                           762  ;-----------------------------------------------------------
00000BF6                           763  op_BCHG: 
00000BF6                           764  
00000BF6                           765  
00000BF6                           766  ;  Bit Number Static 
00000BF6                           767      
00000BF6                           768              ; EA = Dn  - LONG only
00000BF6  203C 80000001            769              move.l #$80000001,d0      ; populate test data
00000BFC  0840 0000                770              bchg.l #0,d0              
00000C00  6700 048E                771              beq BCHG_FAIL               ; branch if Z set
00000C04  0840 0001                772              bchg.l #1,d0              ; 
00000C08  6600 0486                773              bne BCHG_FAIL               ; branch if Z clear  
00000C0C  0840 001F                774              bchg.l #31,d0             ; 
00000C10  6700 047E                775              beq BCHG_FAIL               ; branch if Z set
00000C14  0C80 00000002            776              cmpi.l #$00000002,d0
00000C1A  6600 0474                777              bne BCHG_FAIL               ; branch if Z clear  
00000C1E                           778  
00000C1E                           779              
00000C1E                           780              ; EA = (An)  - BYTE only
00000C1E  207C 00000100            781              move.l #$00000100,a0      ; point to memory to address 0x100
00000C24  10BC 0081                782              move.b #$81,(a0)          ; populate test data
00000C28  1210                     783              move.b (a0),d1            ; Check to see if data in memory is 0x81
00000C2A  0850 0000                784              bchg.b #0,(a0)            
00000C2E  6700 0460                785              beq BCHG_FAIL               ; branch if Z set
00000C32  0850 0001                786              bchg.b #1,(a0)            ; 
00000C36  6600 0458                787              bne BCHG_FAIL               ; branch if Z clear  
00000C3A  0850 0007                788              bchg.b #7,(a0)            ; 
00000C3E  6700 0450                789              beq BCHG_FAIL               ; branch if Z set
00000C42  0C10 0002                790              cmpi.b #$02,(a0)
00000C46  6600 0448                791              bne BCHG_FAIL               ; branch if Z clear  
00000C4A                           792              
00000C4A                           793              ; EA = (An)+  - BYTE only
00000C4A  207C 00000100            794              move.l #$00000100,a0      ; point to memory to address 0x100 
00000C50  10FC 0001                795              move.b #$01,(a0)+         ; populate test data
00000C54  10FC 00FC                796              move.b #$FC,(a0)+         ; populate test data
00000C58  10FC 0080                797              move.b #$80,(a0)+         ; populate test data
00000C5C  207C 00000100            798              move.l #$00000100,a0      ; point to memory to address 0x100 
00000C62  0858 0000                799              bchg.b #0,(a0)+            
00000C66  6700 0428                800              beq BCHG_FAIL               ; branch if Z set
00000C6A  0858 0001                801              bchg.b #1,(a0)+           ; 
00000C6E  6600 0420                802              bne BCHG_FAIL               ; branch if Z clear  
00000C72  0858 0007                803              bchg.b #7,(a0)+           ; 
00000C76  6700 0418                804              beq BCHG_FAIL               ; branch if Z set
00000C7A  207C 00000100            805              move.l #$00000100,a0      ; point to memory to address 0x100 
00000C80  0C18 0000                806              cmpi.b #$00,(a0)+
00000C84  6600 040A                807              bne BCHG_FAIL               ; branch if Z clear  
00000C88  0C18 00FE                808              cmpi.b #$FE,(a0)+
00000C8C  6600 0402                809              bne BCHG_FAIL               ; branch if Z clear  
00000C90  0C18 0000                810              cmpi.b #$00,(a0)+
00000C94  6600 03FA                811              bne BCHG_FAIL               ; branch if Z clear  
00000C98                           812          
00000C98                           813              ; EA = -(An)  - BYTE only
00000C98  207C 00000100            814              move.l #$00000100,a0      ; point to memory to address
00000C9E  10FC 0080                815              move.b #$80,(a0)+         ; populate test data
00000CA2  10FC 00FC                816              move.b #$FC,(a0)+         ; populate test data
00000CA6  10FC 0001                817              move.b #$01,(a0)+         ; populate test data
00000CAA  207C 00000103            818              move.l #$00000103,a0      ; point to memory to address 
00000CB0  0860 0000                819              bchg.b #0,-(a0)            
00000CB4  6700 03DA                820              beq BCHG_FAIL               ; branch if Z set
00000CB8  0860 0001                821              bchg.b #1,-(a0)           ; 
00000CBC  6600 03D2                822              bne BCHG_FAIL               ; branch if Z clear  
00000CC0  0860 0007                823              bchg.b #7,-(a0)           ; 
00000CC4  6700 03CA                824              beq BCHG_FAIL               ; branch if Z set
00000CC8  207C 00000103            825              move.l #$00000103,a0      ; point to memory to address 0x100 
00000CCE  0C20 0000                826              cmpi.b #$00,-(a0)
00000CD2  6600 03BC                827              bne BCHG_FAIL               ; branch if Z clear  
00000CD6  0C20 00FE                828              cmpi.b #$FE,-(a0)
00000CDA  6600 03B4                829              bne BCHG_FAIL               ; branch if Z clear  
00000CDE  0C20 0000                830              cmpi.b #$00,-(a0)
00000CE2  6600 03AC                831              bne BCHG_FAIL               ; branch if Z clear  
00000CE6                           832          
00000CE6                           833          
00000CE6                           834              ; EA = n(An)  - BYTE only
00000CE6  207C 00000100            835              move.l #$00000100,a0      ; point to memory to address
00000CEC  10FC 0001                836              move.b #$01,(a0)+         ; populate test data
00000CF0  10FC 00FC                837              move.b #$FC,(a0)+         ; populate test data
00000CF4  10FC 0080                838              move.b #$80,(a0)+         ; populate test data
00000CF8  207C 00000100            839              move.l #$00000100,a0      ; point to memory to address
00000CFE  0868 0000 0000           840              bchg.b #0,0(a0)            
00000D04  6700 038A                841              beq BCHG_FAIL               ; branch if Z set
00000D08  0868 0001 0001           842              bchg.b #1,1(a0)           ; 
00000D0E  6600 0380                843              bne BCHG_FAIL               ; branch if Z clear  
00000D12  0868 0007 0002           844              bchg.b #7,2(a0)           ; 
00000D18  6700 0376                845              beq BCHG_FAIL               ; branch if Z set
00000D1C  207C 00000100            846              move.l #$00000100,a0      ; point to memory to address 0x100 
00000D22  0C18 0000                847              cmpi.b #$00,(a0)+
00000D26  6600 0368                848              bne BCHG_FAIL               ; branch if Z clear  
00000D2A  0C18 00FE                849              cmpi.b #$FE,(a0)+
00000D2E  6600 0360                850              bne BCHG_FAIL               ; branch if Z clear  
00000D32  0C18 0000                851              cmpi.b #$00,(a0)+
00000D36  6600 0358                852              bne BCHG_FAIL               ; branch if Z clear  
00000D3A                           853                  
00000D3A                           854                  
00000D3A                           855              ; EA = n(An,D.W)  - BYTE only
00000D3A  207C 00000100            856              move.l #$00000100,a0      ; point to memory to address
00000D40  227C 00000000            857              move.l #$00000000,a1      ; point to memory to address
00000D46  247C 00000001            858              move.l #$00000001,a2      ; point to memory to address
00000D4C  7000                     859              move.l #$00000000,d0      ; point to memory to address
00000D4E  7201                     860              move.l #$00000001,d1      ; point to memory to address
00000D50  0870 0000 0000           861              bchg.b #0,0(a0,d0.w)            
00000D56  6600 0338                862              bne BCHG_FAIL               ; branch if Z clear  
00000D5A  0870 0001 1000           863              bchg.b #1,0(a0,d1.w)      ; 
00000D60  6700 032E                864              beq BCHG_FAIL               ; branch if Z set
00000D64  0870 0007 1001           865              bchg.b #7,1(a0,d1.w)      ; 
00000D6A  6600 0324                866              bne BCHG_FAIL               ; branch if Z clear  
00000D6E                           867              ; EA = n(An,D.L)  - BYTE only
00000D6E  0870 0000 0800           868              bchg.b #0,0(a0,d0.l)  
00000D74  6700 031A                869              beq BCHG_FAIL               ; branch if Z set
00000D78  0870 0001 1800           870              bchg.b #1,0(a0,d1.l)      ; 
00000D7E  6600 0310                871              bne BCHG_FAIL               ; branch if Z clear  
00000D82  0870 0007 1801           872              bchg.b #7,1(a0,d1.l)      ; 
00000D88  6700 0306                873              beq BCHG_FAIL               ; branch if Z set
00000D8C                           874              ; EA = n(An,A.W)  - BYTE only
00000D8C  0870 0000 9000           875              bchg.b #0,0(a0,a1.w)            
00000D92  6600 02FC                876              bne BCHG_FAIL               ; branch if Z clear  
00000D96  0870 0001 A000           877              bchg.b #1,0(a0,a2.w)      ; 
00000D9C  6700 02F2                878              beq BCHG_FAIL               ; branch if Z set
00000DA0  0870 0007 A001           879              bchg.b #7,1(a0,a2.w)      ; 
00000DA6  6600 02E8                880              bne BCHG_FAIL               ; branch if Z clear  
00000DAA                           881              ; EA = n(An,A.L)  - BYTE only
00000DAA  0870 0000 9800           882              bchg.b #0,0(a0,a1.l)  
00000DB0  6700 02DE                883              beq BCHG_FAIL               ; branch if Z set
00000DB4  0870 0001 A800           884              bchg.b #1,0(a0,a2.l)      ; 
00000DBA  6600 02D4                885              bne BCHG_FAIL               ; branch if Z clear  
00000DBE  0870 0007 A801           886              bchg.b #7,1(a0,a2.l)      ; 
00000DC4  6700 02CA                887              beq BCHG_FAIL               ; branch if Z set
00000DC8  207C 00000100            888              move.l #$00000100,a0      ; point to memory to address 0x100 
00000DCE  0C18 0000                889              cmpi.b #$00,(a0)+
00000DD2  6600 02BC                890              bne BCHG_FAIL               ; branch if Z clear  
00000DD6  0C18 00FE                891              cmpi.b #$FE,(a0)+
00000DDA  6600 02B4                892              bne BCHG_FAIL               ; branch if Z clear  
00000DDE  0C18 0000                893              cmpi.b #$00,(a0)+
00000DE2  6600 02AC                894              bne BCHG_FAIL               ; branch if Z clear  
00000DE6                           895      
00000DE6                           896          
00000DE6                           897              ; EA = x.W  - BYTE only
00000DE6  0878 0000 0100           898              bchg.b #0,$0100            
00000DEC  6600 02A2                899              bne BCHG_FAIL               ; branch if Z clear  
00000DF0  0878 0001 0101           900              bchg.b #1,$0101           ; 
00000DF6  6700 0298                901              beq BCHG_FAIL               ; branch if Z set
00000DFA  0878 0007 0102           902              bchg.b #7,$0102           ; 
00000E00  6600 028E                903              bne BCHG_FAIL               ; branch if Z clear  
00000E04  207C 00000100            904              move.l #$00000100,a0      ; point to memory to address 0x100 
00000E0A  0C18 0001                905              cmpi.b #$01,(a0)+
00000E0E  6600 0280                906              bne BCHG_FAIL               ; branch if Z clear  
00000E12  0C18 00FC                907              cmpi.b #$FC,(a0)+
00000E16  6600 0278                908              bne BCHG_FAIL               ; branch if Z clear  
00000E1A  0C18 0080                909              cmpi.b #$80,(a0)+
00000E1E  6600 0270                910              bne BCHG_FAIL               ; branch if Z clear  
00000E22                           911              
00000E22                           912              ; EA = x.L  - BYTE only
00000E22  207C 000F0100            913              move.l #$000F0100,a0      ; point to memory to address 0x100 
00000E28  10FC 0001                914              move.b #$01,(a0)+         ; populate test data
00000E2C  10FC 00FC                915              move.b #$FC,(a0)+         ; populate test data
00000E30  10FC 0080                916              move.b #$80,(a0)+         ; populate test data
00000E34  0879 0000 000F0100       917              bchg.b #0,$000F0100 
00000E3C  6700 0252                918              beq BCHG_FAIL               ; branch if Z set
00000E40  0879 0001 000F0101       919              bchg.b #1,$000F0101       ; 
00000E48  6600 0246                920              bne BCHG_FAIL               ; branch if Z clear  
00000E4C  0879 0007 000F0102       921              bchg.b #7,$000F0102       ; 
00000E54  6700 023A                922              beq BCHG_FAIL               ; branch if Z set
00000E58  207C 00000100            923              move.l #$00000100,a0      ; point to memory to address 0x100 
00000E5E  0C18 0001                924              cmpi.b #$01,(a0)+
00000E62  6600 022C                925              bne BCHG_FAIL               ; branch if Z clear  
00000E66  0C18 00FC                926              cmpi.b #$FC,(a0)+
00000E6A  6600 0224                927              bne BCHG_FAIL               ; branch if Z clear  
00000E6E  0C18 0080                928              cmpi.b #$80,(a0)+
00000E72  6600 021C                929              bne BCHG_FAIL               ; branch if Z clear  
00000E76                           930              
00000E76                           931  
00000E76                           932  ; Bit Number Dynamic
00000E76                           933      
00000E76                           934              ; EA = Dn  - LONG only
00000E76  203C 80000001            935              move.l #$80000001,d0      ; populate test data
00000E7C  7A00                     936              move.l #0,d5              ; populate bit number to test
00000E7E  7C01                     937              move.l #1,d6              ; populate bit number to test
00000E80  7E1F                     938              move.l #31,d7              ; populate bit number to test
00000E82                           939              
00000E82  0B40                     940              bchg.l d5,d0              
00000E84  6700 020A                941              beq BCHG_FAIL               ; branch if Z set
00000E88  0D40                     942              bchg.l d6,d0              ; 
00000E8A  6600 0204                943              bne BCHG_FAIL               ; branch if Z clear  
00000E8E  0F40                     944              bchg.l d7,d0             ; 
00000E90  6700 01FE                945              beq BCHG_FAIL               ; branch if Z set
00000E94  0C80 00000002            946              cmpi.l #$00000002,d0
00000E9A  6600 01F4                947              bne BCHG_FAIL               ; branch if Z clear  
00000E9E                           948  
00000E9E                           949              
00000E9E                           950              ; EA = (An)  - BYTE only
00000E9E  7A00                     951              move.l #0,d5              ; populate bit number to test
00000EA0  7C01                     952              move.l #1,d6              ; populate bit number to test
00000EA2  7E07                     953              move.l #7,d7              ; populate bit number to test           
00000EA4  207C 00000100            954              move.l #$00000100,a0      ; point to memory to address 0x100
00000EAA  10BC 0081                955              move.b #$81,(a0)          ; populate test data
00000EAE  1210                     956              move.b (a0),d1            ; Check to see if data in memory is 0x81
00000EB0  0B50                     957              bchg.b d5,(a0)            
00000EB2  6700 01DC                958              beq BCHG_FAIL               ; branch if Z set
00000EB6  0D50                     959              bchg.b d6,(a0)            ; 
00000EB8  6600 01D6                960              bne BCHG_FAIL               ; branch if Z clear  
00000EBC  0F50                     961              bchg.b d7,(a0)            ; 
00000EBE  6700 01D0                962              beq BCHG_FAIL               ; branch if Z set
00000EC2  0C10 0002                963              cmpi.b #$02,(a0)
00000EC6  6600 01C8                964              bne BCHG_FAIL               ; branch if Z clear  
00000ECA                           965              
00000ECA                           966      
00000ECA                           967              ; EA = (An)+  - BYTE only
00000ECA  207C 00000100            968              move.l #$00000100,a0      ; point to memory to address 0x100 
00000ED0  10FC 0001                969              move.b #$01,(a0)+         ; populate test data
00000ED4  10FC 00FC                970              move.b #$FC,(a0)+         ; populate test data
00000ED8  10FC 0080                971              move.b #$80,(a0)+         ; populate test data
00000EDC  207C 00000100            972              move.l #$00000100,a0      ; point to memory to address 0x100 
00000EE2  0B58                     973              bchg.b d5,(a0)+            
00000EE4  6700 01AA                974              beq BCHG_FAIL               ; branch if Z set
00000EE8  0D58                     975              bchg.b d6,(a0)+           ; 
00000EEA  6600 01A4                976              bne BCHG_FAIL               ; branch if Z clear  
00000EEE  0F58                     977              bchg.b d7,(a0)+           ; 
00000EF0  6700 019E                978              beq BCHG_FAIL               ; branch if Z set
00000EF4  207C 00000100            979              move.l #$00000100,a0      ; point to memory to address 0x100 
00000EFA  0C18 0000                980              cmpi.b #$00,(a0)+
00000EFE  6600 0190                981              bne BCHG_FAIL               ; branch if Z clear  
00000F02  0C18 00FE                982              cmpi.b #$FE,(a0)+
00000F06  6600 0188                983              bne BCHG_FAIL               ; branch if Z clear  
00000F0A  0C18 0000                984              cmpi.b #$00,(a0)+
00000F0E  6600 0180                985              bne BCHG_FAIL               ; branch if Z clear  
00000F12                           986                  
00000F12                           987              ; EA = -(An)  - BYTE only
00000F12  207C 00000100            988              move.l #$00000100,a0      ; point to memory to address
00000F18  10FC 0080                989              move.b #$80,(a0)+         ; populate test data
00000F1C  10FC 00FC                990              move.b #$FC,(a0)+         ; populate test data
00000F20  10FC 0001                991              move.b #$01,(a0)+         ; populate test data
00000F24  207C 00000103            992              move.l #$00000103,a0      ; point to memory to address 
00000F2A  0B60                     993              bchg.b d5,-(a0)            
00000F2C  6700 0162                994              beq BCHG_FAIL               ; branch if Z set
00000F30  0D60                     995              bchg.b d6,-(a0)           ; 
00000F32  6600 015C                996              bne BCHG_FAIL               ; branch if Z clear  
00000F36  0F60                     997              bchg.b d7,-(a0)           ; 
00000F38  6700 0156                998              beq BCHG_FAIL               ; branch if Z set
00000F3C  207C 00000103            999              move.l #$00000103,a0      ; point to memory to address 0x100 
00000F42  0C20 0000               1000              cmpi.b #$00,-(a0)
00000F46  6600 0148               1001              bne BCHG_FAIL               ; branch if Z clear  
00000F4A  0C20 00FE               1002              cmpi.b #$FE,-(a0)
00000F4E  6600 0140               1003              bne BCHG_FAIL               ; branch if Z clear  
00000F52  0C20 0000               1004              cmpi.b #$00,-(a0)
00000F56  6600 0138               1005              bne BCHG_FAIL               ; branch if Z clear  
00000F5A                          1006                  
00000F5A                          1007              ; EA = n(An)  - BYTE only
00000F5A  207C 00000100           1008              move.l #$00000100,a0      ; point to memory to address
00000F60  10FC 0001               1009              move.b #$01,(a0)+         ; populate test data
00000F64  10FC 00FC               1010              move.b #$FC,(a0)+         ; populate test data
00000F68  10FC 0080               1011              move.b #$80,(a0)+         ; populate test data
00000F6C  207C 00000100           1012              move.l #$00000100,a0      ; point to memory to address
00000F72  0B68 0000               1013              bchg.b d5,0(a0)            
00000F76  6700 0118               1014              beq BCHG_FAIL               ; branch if Z set
00000F7A  0D68 0001               1015              bchg.b d6,1(a0)           ; 
00000F7E  6600 0110               1016              bne BCHG_FAIL               ; branch if Z clear  
00000F82  0F68 0002               1017              bchg.b d7,2(a0)           ; 
00000F86  6700 0108               1018              beq BCHG_FAIL               ; branch if Z set
00000F8A  207C 00000100           1019              move.l #$00000100,a0      ; point to memory to address 0x100 
00000F90  0C18 0000               1020              cmpi.b #$00,(a0)+
00000F94  6600 00FA               1021              bne BCHG_FAIL               ; branch if Z clear  
00000F98  0C18 00FE               1022              cmpi.b #$FE,(a0)+
00000F9C  6600 00F2               1023              bne BCHG_FAIL               ; branch if Z clear  
00000FA0  0C18 0000               1024              cmpi.b #$00,(a0)+
00000FA4  6600 00EA               1025              bne BCHG_FAIL               ; branch if Z clear  
00000FA8                          1026                  
00000FA8                          1027              ; EA = n(An,R.W)  - BYTE only
00000FA8  207C 00000100           1028              move.l #$00000100,a0      ; point to memory to address
00000FAE  227C 00000000           1029              move.l #$00000000,a1      ; point to memory to address
00000FB4  247C 00000001           1030              move.l #$00000001,a2      ; point to memory to address
00000FBA  7000                    1031              move.l #$00000000,d0      ; point to memory to address
00000FBC  7201                    1032              move.l #$00000001,d1      ; point to memory to address
00000FBE  0B70 0000               1033              bchg.b d5,0(a0,d0.w)            
00000FC2  6600 00CC               1034              bne BCHG_FAIL               ; branch if Z clear  
00000FC6  0D70 1000               1035              bchg.b d6,0(a0,d1.w)      ; 
00000FCA  6700 00C4               1036              beq BCHG_FAIL               ; branch if Z set
00000FCE  0F70 1001               1037              bchg.b d7,1(a0,d1.w)      ; 
00000FD2  6600 00BC               1038              bne BCHG_FAIL               ; branch if Z clear  
00000FD6                          1039              ; EA = n(An,R.L)  - BYTE only
00000FD6  0B70 0800               1040              bchg.b d5,0(a0,d0.l)  
00000FDA  6700 00B4               1041              beq BCHG_FAIL               ; branch if Z set
00000FDE  0D70 1800               1042              bchg.b d6,0(a0,d1.l)      ; 
00000FE2  6600 00AC               1043              bne BCHG_FAIL               ; branch if Z clear  
00000FE6  0F70 1801               1044              bchg.b d7,1(a0,d1.l)      ; 
00000FEA  6700 00A4               1045              beq BCHG_FAIL               ; branch if Z set
00000FEE                          1046              ; EA = n(An,A.W)  - BYTE only
00000FEE  0B70 9000               1047              bchg.b d5,0(a0,a1.w)            
00000FF2  6600 009C               1048              bne BCHG_FAIL               ; branch if Z clear  
00000FF6  0D70 A000               1049              bchg.b d6,0(a0,a2.w)      ; 
00000FFA  6700 0094               1050              beq BCHG_FAIL               ; branch if Z set
00000FFE  0F70 A001               1051              bchg.b d7,1(a0,a2.w)      ; 
00001002  6600 008C               1052              bne BCHG_FAIL               ; branch if Z clear  
00001006                          1053              ; EA = n(An,A.L)  - BYTE only
00001006  0B70 9800               1054              bchg.b d5,0(a0,a1.l)  
0000100A  6700 0084               1055              beq BCHG_FAIL               ; branch if Z set
0000100E  0D70 A800               1056              bchg.b d6,0(a0,a2.l)      ; 
00001012  6600 007C               1057              bne BCHG_FAIL               ; branch if Z clear  
00001016  0F70 A801               1058              bchg.b d7,1(a0,a2.l)      ; 
0000101A  6700 0074               1059              beq BCHG_FAIL               ; branch if Z set
0000101E  0C18 0000               1060              cmpi.b #$00,(a0)+
00001022  6600 006C               1061              bne BCHG_FAIL               ; branch if Z clear  
00001026                          1062              
00001026                          1063              ; EA = x.W  - BYTE only
00001026  0B78 0100               1064              bchg.b d5,$0100            
0000102A  6600 0064               1065              bne BCHG_FAIL               ; branch if Z clear  
0000102E  0D78 0101               1066              bchg.b d6,$0101           ; 
00001032  6700 005C               1067              beq BCHG_FAIL               ; branch if Z set
00001036  0F78 0102               1068              bchg.b d7,$0102           ; 
0000103A  6600 0054               1069              bne BCHG_FAIL               ; branch if Z clear  
0000103E  0C18 00FC               1070              cmpi.b #$FC,(a0)+
00001042  6600 004C               1071              bne BCHG_FAIL               ; branch if Z clear  
00001046                          1072                      
00001046                          1073              ; EA = x.L  - BYTE only
00001046  207C 000F0100           1074              move.l #$000F0100,a0      ; point to memory to address 0x100 
0000104C  10FC 0001               1075              move.b #$01,(a0)+         ; populate test data
00001050  10FC 00FC               1076              move.b #$FC,(a0)+         ; populate test data
00001054  10FC 0080               1077              move.b #$80,(a0)+         ; populate test data
00001058  0B79 000F0100           1078              bchg.b d5,$000F0100 
0000105E  6700 0030               1079              beq BCHG_FAIL               ; branch if Z set
00001062  0D79 000F0101           1080              bchg.b d6,$000F0101       ; 
00001068  6600 0026               1081              bne BCHG_FAIL               ; branch if Z clear  
0000106C  0F79 000F0102           1082              bchg.b d7,$000F0102       ; 
00001072  6700 001C               1083              beq BCHG_FAIL               ; branch if Z set
00001076  207C 000F0101           1084              move.l #$000F0101,a0      ; point to memory to address 0x100 
0000107C  0C10 00FE               1085              cmpi.b #$FE,(a0)
00001080  6600 000E               1086              bne BCHG_FAIL               ; branch if Z clear  
00001084                          1087                      
00001084                          1088  
00001084  307C FF00               1089      movea #TESTSTATUS,a0
00001088  117C 0001 0007          1090      move.b #$1,$07(a0)
0000108E  4E75                    1091      rts
00001090                          1092      
00001090                          1093  BCHG_FAIL:
00001090  307C FF00               1094      movea #TESTSTATUS,a0
00001094  117C 0002 0007          1095      move.b #$2,$07(a0)
0000109A  4E75                    1096      rts
0000109C                          1097  
0000109C                          1098    
0000109C                          1099  ;-----------------------------------------------------------
0000109C                          1100  ;-----------------------------------------------------------
0000109C                          1101  ; OPCODE : BCLR
0000109C                          1102  ;-----------------------------------------------------------
0000109C                          1103  ;-----------------------------------------------------------
0000109C                          1104  op_BCLR: 
0000109C                          1105  
0000109C                          1106  
0000109C                          1107  ;  Bit Number Static 
0000109C                          1108      
0000109C                          1109              ; EA = Dn  - LONG only
0000109C  203C FF0000FF           1110              move.l #$FF0000FF,d0      ; populate test data
000010A2  0880 0000               1111              bclr.l #0,d0              
Line 1112 ERROR: Invalid syntax
000010A6                          1112              beq BCLR_FAIL;               ; branch if Z set
000010A6  0880 0001               1113              bclr.l #1,d0              ; 
Line 1114 ERROR: Invalid syntax
000010AA                          1114              beq BCLR_FAIL;               ; branch if Z set
000010AA  0880 000F               1115              bclr.l #15,d0             ; 
Line 1116 ERROR: Invalid syntax
000010AE                          1116              bne BCLR_FAIL;               ; branch if Z clear  
000010AE  0880 001F               1117              bclr.l #31,d0             ; 
Line 1118 ERROR: Invalid syntax
000010B2                          1118              beq BCLR_FAIL;               ; branch if Z set
000010B2  0C80 7F0000FC           1119              cmpi.l #$7F0000FC,d0
Line 1120 ERROR: Invalid syntax
000010B8                          1120              bne BCLR_FAIL;               ; branch if Z clear  
000010B8                          1121  
000010B8                          1122              
000010B8                          1123              ; EA = (An)  - BYTE only
000010B8  207C 00000100           1124              move.l #$00000100,a0      ; point to memory to address 0x100
000010BE  10BC 000F               1125              move.b #$0F,(a0)          ; populate test data
000010C2  0890 0000               1126              bclr.b #0,(a0)            
Line 1127 ERROR: Invalid syntax
000010C6                          1127              beq BCLR_FAIL;               ; branch if Z set
000010C6  0890 0007               1128              bclr.b #7,(a0)            ; 
Line 1129 ERROR: Invalid syntax
000010CA                          1129              bne BCLR_FAIL;               ; branch if Z clear  
000010CA  0C10 000E               1130              cmpi.b #$0E,(a0)
Line 1131 ERROR: Invalid syntax
000010CE                          1131              bne BCLR_FAIL;               ; branch if Z clear  
000010CE                          1132              
000010CE                          1133              ; EA = (An)+  - BYTE only
000010CE  207C 00000100           1134              move.l #$00000100,a0      ; point to memory to address 0x100 
000010D4  10FC 0001               1135              move.b #$01,(a0)+         ; populate test data
000010D8  10FC 0000               1136              move.b #$00,(a0)+         ; populate test data
000010DC  207C 00000100           1137              move.l #$00000100,a0      ; point to memory to address 0x100 
000010E2  0898 0000               1138              bclr.b #0,(a0)+            
Line 1139 ERROR: Invalid syntax
000010E6                          1139              beq BCLR_FAIL;               ; branch if Z set
000010E6  0898 0001               1140              bclr.b #1,(a0)+           ; 
Line 1141 ERROR: Invalid syntax
000010EA                          1141              bne BCLR_FAIL;               ; branch if Z clear  
000010EA  207C 00000100           1142              move.l #$00000100,a0      ; point to memory to address 0x100 
000010F0  0C18 0000               1143              cmpi.b #$00,(a0)+
Line 1144 ERROR: Invalid syntax
000010F4                          1144              bne BCLR_FAIL;               ; branch if Z clear  
000010F4  0C18 0000               1145              cmpi.b #$00,(a0)+
Line 1146 ERROR: Invalid syntax
000010F8                          1146              bne BCLR_FAIL;               ; branch if Z clear  
000010F8                          1147   
000010F8                          1148          
000010F8                          1149              ; EA = -(An)  - BYTE only
000010F8  207C 00000100           1150              move.l #$00000100,a0      ; point to memory to address
000010FE  10FC 0001               1151              move.b #$01,(a0)+         ; populate test data
00001102  10FC 0080               1152              move.b #$80,(a0)+         ; populate test data
00001106  08A0 0007               1153              bclr.b #7,-(a0)            
Line 1154 ERROR: Invalid syntax
0000110A                          1154              beq BCLR_FAIL;               ; branch if Z set
0000110A  08A0 0000               1155              bclr.b #0,-(a0)           ; 
Line 1156 ERROR: Invalid syntax
0000110E                          1156              beq BCLR_FAIL;               ; branch if Z set
0000110E  207C 00000102           1157              move.l #$00000102,a0      ; point to memory to address 0x100 
00001114  0C20 0000               1158              cmpi.b #$00,-(a0)
Line 1159 ERROR: Invalid syntax
00001118                          1159              bne BCLR_FAIL;               ; branch if Z clear  
00001118  0C20 0000               1160              cmpi.b #$00,-(a0)
Line 1161 ERROR: Invalid syntax
0000111C                          1161              bne BCLR_FAIL;               ; branch if Z clear  
0000111C                          1162  
0000111C                          1163          
0000111C                          1164              ; EA = n(An)  - BYTE only
0000111C  207C 00000100           1165              move.l #$00000100,a0      ; point to memory to address
00001122  10FC 00FF               1166              move.b #$FF,(a0)+         ; populate test data
00001126  10FC 00FF               1167              move.b #$FF,(a0)+         ; populate test data
0000112A  207C 00000100           1168              move.l #$00000100,a0      ; point to memory to address
00001130  08A8 0000 0000          1169              bclr.b #0,0(a0)            
Line 1170 ERROR: Invalid syntax
00001136                          1170              beq BCLR_FAIL;               ; branch if Z set
00001136  08A8 0004 0001          1171              bclr.b #4,1(a0)           ; 
Line 1172 ERROR: Invalid syntax
0000113C                          1172              beq BCLR_FAIL;               ; branch if Z set
0000113C  207C 00000100           1173              move.l #$00000100,a0      ; point to memory to address 0x100 
00001142  0C18 00FE               1174              cmpi.b #$FE,(a0)+
Line 1175 ERROR: Invalid syntax
00001146                          1175              bne BCLR_FAIL;               ; branch if Z clear  
00001146  0C18 00EF               1176              cmpi.b #$EF,(a0)+
Line 1177 ERROR: Invalid syntax
0000114A                          1177              bne BCLR_FAIL;               ; branch if Z clear  
0000114A                          1178  
0000114A                          1179                  
0000114A                          1180              ; EA = n(An,D.W)  - BYTE only
0000114A  207C 00000100           1181              move.l #$00000100,a0      ; point to memory to address
00001150  227C 00000000           1182              move.l #$00000000,a1      ; point to memory to address
00001156  247C 00000001           1183              move.l #$00000001,a2      ; point to memory to address
0000115C  7000                    1184              move.l #$00000000,d0      ; point to memory to address
0000115E  7201                    1185              move.l #$00000001,d1      ; point to memory to address
00001160  10FC 00FF               1186              move.b #$FF,(a0)+         ; populate test data
00001164  10FC 00FF               1187              move.b #$FF,(a0)+         ; populate test data
00001168  207C 00000100           1188              move.l #$00000100,a0      ; point to memory to address
0000116E  08B0 0000 0000          1189              bclr.b #0,0(a0,d0.w)            
Line 1190 ERROR: Invalid syntax
00001174                          1190              beq BCLR_FAIL;               ; branch if Z set
00001174  08B0 0001 1000          1191              bclr.b #1,0(a0,d1.w)      ; 
Line 1192 ERROR: Invalid syntax
0000117A                          1192              beq BCLR_FAIL;               ; branch if Z set
0000117A  08B0 0002 1001          1193              bclr.b #2,1(a0,d1.w)      ; 
Line 1194 ERROR: Invalid syntax
00001180                          1194              bne BCLR_FAIL;               ; branch if Z clear  
00001180                          1195              ; EA = n(An,D.L)  - BYTE only
00001180  08B0 0003 0800          1196              bclr.b #3,0(a0,d0.l)  
Line 1197 ERROR: Invalid syntax
00001186                          1197              beq BCLR_FAIL;               ; branch if Z set
00001186  08B0 0004 1800          1198              bclr.b #4,0(a0,d1.l)      ; 
Line 1199 ERROR: Invalid syntax
0000118C                          1199              beq BCLR_FAIL;               ; branch if Z set
0000118C  08B0 0005 1801          1200              bclr.b #5,1(a0,d1.l)      ; 
Line 1201 ERROR: Invalid syntax
00001192                          1201              bne BCLR_FAIL;               ; branch if Z clear  
00001192                          1202              ; EA = n(An,A.W)  - BYTE only
00001192  08B0 0006 9000          1203              bclr.b #6,0(a0,a1.w)            
Line 1204 ERROR: Invalid syntax
00001198                          1204              beq BCLR_FAIL;               ; branch if Z set
00001198  08B0 0001 A000          1205              bclr.b #1,0(a0,a2.w)      ; 
Line 1206 ERROR: Invalid syntax
0000119E                          1206              bne BCLR_FAIL;               ; branch if Z clear  
0000119E  08B0 0007 A001          1207              bclr.b #7,1(a0,a2.w)      ; 
Line 1208 ERROR: Invalid syntax
000011A4                          1208              beq BCLR_FAIL;               ; branch if Z set
000011A4                          1209              ; EA = n(An,A.L)  - BYTE only
000011A4  08B0 0000 9800          1210              bclr.b #0,0(a0,a1.l)  
Line 1211 ERROR: Invalid syntax
000011AA                          1211              bne BCLR_FAIL;               ; branch if Z clear  
000011AA  08B0 0000 A800          1212              bclr.b #0,0(a0,a2.l)      ; 
Line 1213 ERROR: Invalid syntax
000011B0                          1213              beq BCLR_FAIL;               ; branch if Z set
000011B0  08B0 0001 A801          1214              bclr.b #1,1(a0,a2.l)      ; 
Line 1215 ERROR: Invalid syntax
000011B6                          1215              bne BCLR_FAIL;               ; branch if Z clear  
000011B6  207C 00000100           1216              move.l #$00000100,a0      ; point to memory to address 0x100 
000011BC  0C18 00B6               1217              cmpi.b #$B6,(a0)+
Line 1218 ERROR: Invalid syntax
000011C0                          1218              bne BCLR_FAIL;               ; branch if Z clear  
000011C0  0C18 00EC               1219              cmpi.b #$EC,(a0)+
Line 1220 ERROR: Invalid syntax
000011C4                          1220              bne BCLR_FAIL;               ; branch if Z clear  
000011C4  0C18 0059               1221              cmpi.b #$59,(a0)+
Line 1222 ERROR: Invalid syntax
000011C8                          1222              beq BCLR_FAIL;               ; branch if Z set
000011C8                          1223      
000011C8                          1224          
000011C8                          1225              ; EA = x.W  - BYTE only
000011C8  207C 00000100           1226              move.l #$00000100,a0      ; point to memory to address
000011CE  10FC 00FF               1227              move.b #$FF,(a0)+         ; populate test data
000011D2  08B8 0000 0100          1228              bclr.b #0,$0100            
Line 1229 ERROR: Invalid syntax
000011D8                          1229              beq BCLR_FAIL;               ; branch if Z set
000011D8  08B8 0001 0100          1230              bclr.b #1,$0100           ; 
Line 1231 ERROR: Invalid syntax
000011DE                          1231              beq BCLR_FAIL;               ; branch if Z set
000011DE  207C 00000100           1232              move.l #$00000100,a0      ; point to memory to address 0x100 
000011E4  0C18 00FC               1233              cmpi.b #$FC,(a0)+
Line 1234 ERROR: Invalid syntax
000011E8                          1234              bne BCLR_FAIL;               ; branch if Z clear  
000011E8                          1235  
000011E8                          1236              
000011E8                          1237              ; EA = x.L  - BYTE only
000011E8  207C 000F0100           1238              move.l #$000F0100,a0      ; point to memory to address 0x100 
000011EE  10BC 00FF               1239              move.b #$FF,(a0)          ; populate test data
000011F2  08B9 0000 000F0100      1240              bclr.b #0,$000F0100 
Line 1241 ERROR: Invalid syntax
000011FA                          1241              beq BCLR_FAIL;               ; branch if Z set
000011FA  08B9 0001 000F0100      1242              bclr.b #1,$000F0100       ; 
Line 1243 ERROR: Invalid syntax
00001202                          1243              beq BCLR_FAIL;               ; branch if Z set
00001202  08B9 0002 000F0100      1244              bclr.b #2,$000F0100       ; 
Line 1245 ERROR: Invalid syntax
0000120A                          1245              beq BCLR_FAIL;               ; branch if Z set
0000120A  207C 000F0100           1246              move.l #$000F0100,a0      ; point to memory to address 0x100 
00001210  0C18 00F8               1247              cmpi.b #$F8,(a0)+
Line 1248 ERROR: Invalid syntax
00001214                          1248              bne BCLR_FAIL;               ; branch if Z clear  
00001214                          1249  
00001214                          1250  
00001214                          1251  ; Bit Number Dynamic
00001214                          1252      
00001214                          1253              ; EA = Dn  - LONG only
00001214  203C FF00FF00           1254              move.l #$FF00FF00,d0      ; populate test data
0000121A  7A00                    1255              move.l #0,d5              ; populate bit number to test
0000121C  7C01                    1256              move.l #1,d6              ; populate bit number to test
0000121E  7E1F                    1257              move.l #31,d7              ; populate bit number to test
00001220                          1258              
00001220  0B80                    1259              bclr.l d5,d0              
Line 1260 ERROR: Invalid syntax
00001222                          1260              bne BCLR_FAIL;               ; branch if Z clear  
00001222  0D80                    1261              bclr.l d6,d0              ; 
Line 1262 ERROR: Invalid syntax
00001224                          1262              bne BCLR_FAIL;               ; branch if Z clear  
00001224  0F80                    1263              bclr.l d7,d0             ; 
Line 1264 ERROR: Invalid syntax
00001226                          1264              beq BCLR_FAIL;               ; branch if Z set
00001226  0C80 7F00FF00           1265              cmpi.l #$7F00FF00,d0
Line 1266 ERROR: Invalid syntax
0000122C                          1266              bne BCLR_FAIL;               ; branch if Z clear  
0000122C                          1267  
0000122C                          1268              
0000122C                          1269              ; EA = (An)  - BYTE only
0000122C  7A00                    1270              move.l #0,d5              ; populate bit number to test
0000122E  7C01                    1271              move.l #1,d6              ; populate bit number to test
00001230  7E07                    1272              move.l #7,d7              ; populate bit number to test           
00001232  207C 00000100           1273              move.l #$00000100,a0      ; point to memory to address 0x100
00001238  10BC 0081               1274              move.b #$81,(a0)          ; populate test data
0000123C  0B90                    1275              bclr.b d5,(a0)            
Line 1276 ERROR: Invalid syntax
0000123E                          1276              beq BCLR_FAIL;               ; branch if Z set
0000123E  0D90                    1277              bclr.b d6,(a0)            ; 
Line 1278 ERROR: Invalid syntax
00001240                          1278              bne BCLR_FAIL;               ; branch if Z clear  
00001240  0F90                    1279              bclr.b d7,(a0)            ; 
Line 1280 ERROR: Invalid syntax
00001242                          1280              beq BCLR_FAIL;               ; branch if Z set
00001242  0C10 0000               1281              cmpi.b #$00,(a0)
Line 1282 ERROR: Invalid syntax
00001246                          1282              bne BCLR_FAIL;               ; branch if Z clear  
00001246                          1283              
00001246                          1284      
00001246                          1285              ; EA = (An)+  - BYTE only
00001246  207C 00000100           1286              move.l #$00000100,a0      ; point to memory to address 0x100 
0000124C  10FC 0001               1287              move.b #$01,(a0)+         ; populate test data
00001250  10FC 00FC               1288              move.b #$FC,(a0)+         ; populate test data
00001254  10FC 0080               1289              move.b #$80,(a0)+         ; populate test data
00001258  207C 00000100           1290              move.l #$00000100,a0      ; point to memory to address 0x100 
0000125E  0B98                    1291              bclr.b d5,(a0)+            
Line 1292 ERROR: Invalid syntax
00001260                          1292              beq BCLR_FAIL;               ; branch if Z set
00001260  0D98                    1293              bclr.b d6,(a0)+           ; 
Line 1294 ERROR: Invalid syntax
00001262                          1294              bne BCLR_FAIL;               ; branch if Z clear  
00001262  0F98                    1295              bclr.b d7,(a0)+           ; 
Line 1296 ERROR: Invalid syntax
00001264                          1296              beq BCLR_FAIL;               ; branch if Z set
00001264  207C 00000100           1297              move.l #$00000100,a0      ; point to memory to address 0x100 
0000126A  0C18 0000               1298              cmpi.b #$00,(a0)+
Line 1299 ERROR: Invalid syntax
0000126E                          1299              bne BCLR_FAIL;               ; branch if Z clear  
0000126E  0C18 00FC               1300              cmpi.b #$FC,(a0)+
Line 1301 ERROR: Invalid syntax
00001272                          1301              bne BCLR_FAIL;               ; branch if Z clear  
00001272  0C18 0000               1302              cmpi.b #$00,(a0)+
Line 1303 ERROR: Invalid syntax
00001276                          1303              bne BCLR_FAIL;               ; branch if Z clear  
00001276                          1304                  
00001276                          1305              ; EA = -(An)  - BYTE only
00001276  207C 00000100           1306              move.l #$00000100,a0      ; point to memory to address
0000127C  10FC 0080               1307              move.b #$80,(a0)+         ; populate test data
00001280  10FC 00FC               1308              move.b #$FC,(a0)+         ; populate test data
00001284  10FC 0001               1309              move.b #$01,(a0)+         ; populate test data
00001288  207C 00000103           1310              move.l #$00000103,a0      ; point to memory to address 
0000128E  0BA0                    1311              bclr.b d5,-(a0)            
Line 1312 ERROR: Invalid syntax
00001290                          1312              beq BCLR_FAIL;               ; branch if Z set
00001290  0DA0                    1313              bclr.b d6,-(a0)           ; 
Line 1314 ERROR: Invalid syntax
00001292                          1314              bne BCLR_FAIL;               ; branch if Z clear  
00001292  0FA0                    1315              bclr.b d7,-(a0)           ; 
Line 1316 ERROR: Invalid syntax
00001294                          1316              beq BCLR_FAIL;               ; branch if Z set
00001294  207C 00000103           1317              move.l #$00000103,a0      ; point to memory to address 0x100 
0000129A  0C20 0000               1318              cmpi.b #$00,-(a0)
Line 1319 ERROR: Invalid syntax
0000129E                          1319              bne BCLR_FAIL;               ; branch if Z clear  
0000129E  0C20 00FC               1320              cmpi.b #$FC,-(a0)
Line 1321 ERROR: Invalid syntax
000012A2                          1321              bne BCLR_FAIL;               ; branch if Z clear  
000012A2  0C20 0000               1322              cmpi.b #$00,-(a0)
Line 1323 ERROR: Invalid syntax
000012A6                          1323              bne BCLR_FAIL;               ; branch if Z clear  
000012A6                          1324                  
000012A6                          1325              ; EA = n(An)  - BYTE only
000012A6  207C 00000100           1326              move.l #$00000100,a0      ; point to memory to address
000012AC  10FC 0001               1327              move.b #$01,(a0)+         ; populate test data
000012B0  10FC 00FC               1328              move.b #$FC,(a0)+         ; populate test data
000012B4  10FC 0080               1329              move.b #$80,(a0)+         ; populate test data
000012B8  207C 00000100           1330              move.l #$00000100,a0      ; point to memory to address
000012BE  0BA8 0000               1331              bclr.b d5,0(a0)            
Line 1332 ERROR: Invalid syntax
000012C2                          1332              beq BCLR_FAIL;               ; branch if Z set
000012C2  0DA8 0001               1333              bclr.b d6,1(a0)           ; 
Line 1334 ERROR: Invalid syntax
000012C6                          1334              bne BCLR_FAIL;               ; branch if Z clear  
000012C6  0FA8 0002               1335              bclr.b d7,2(a0)           ; 
Line 1336 ERROR: Invalid syntax
000012CA                          1336              beq BCLR_FAIL;               ; branch if Z set
000012CA  207C 00000100           1337              move.l #$00000100,a0      ; point to memory to address 0x100 
000012D0  0C18 0000               1338              cmpi.b #$00,(a0)+
Line 1339 ERROR: Invalid syntax
000012D4                          1339              bne BCLR_FAIL;               ; branch if Z clear  
000012D4  0C18 00FC               1340              cmpi.b #$FC,(a0)+
Line 1341 ERROR: Invalid syntax
000012D8                          1341              bne BCLR_FAIL;               ; branch if Z clear  
000012D8  0C18 0000               1342              cmpi.b #$00,(a0)+
Line 1343 ERROR: Invalid syntax
000012DC                          1343              bne BCLR_FAIL;               ; branch if Z clear  
000012DC                          1344                  
000012DC                          1345              ; EA = n(An,R.W)  - BYTE only
000012DC  207C 00000100           1346              move.l #$00000100,a0      ; point to memory to address
000012E2  10FC 00FF               1347              move.b #$FF,(a0)+         ; populate test data
000012E6  10FC 00FF               1348              move.b #$FF,(a0)+         ; populate test data
000012EA  10FC 00FF               1349              move.b #$FF,(a0)+         ; populate test data
000012EE  207C 00000103           1350              move.l #$00000103,a0      ; point to memory to address 
000012F4  207C 00000100           1351              move.l #$00000100,a0      ; point to memory to address
000012FA  227C 00000000           1352              move.l #$00000000,a1      ; point to memory to address
00001300  247C 00000001           1353              move.l #$00000001,a2      ; point to memory to address
00001306  7000                    1354              move.l #$00000000,d0      ; point to memory to address
00001308  7201                    1355              move.l #$00000001,d1      ; point to memory to address
0000130A  0BB0 0000               1356              bclr.b d5,0(a0,d0.w)            
Line 1357 ERROR: Invalid syntax
0000130E                          1357              beq BCLR_FAIL;               ; branch if Z set
0000130E  0DB0 1000               1358              bclr.b d6,0(a0,d1.w)      ; 
Line 1359 ERROR: Invalid syntax
00001312                          1359              beq BCLR_FAIL;               ; branch if Z set
00001312  0FB0 1001               1360              bclr.b d7,1(a0,d1.w)      ; 
Line 1361 ERROR: Invalid syntax
00001316                          1361              beq BCLR_FAIL;               ; branch if Z set
00001316                          1362              ; EA = n(An,R.L)  - BYTE only
00001316  0BB0 0800               1363              bclr.b d5,0(a0,d0.l)  
Line 1364 ERROR: Invalid syntax
0000131A                          1364              bne BCLR_FAIL;               ; branch if Z clear  
0000131A  0DB0 1800               1365              bclr.b d6,0(a0,d1.l)      ; 
Line 1366 ERROR: Invalid syntax
0000131E                          1366              bne BCLR_FAIL;               ; branch if Z clear  
0000131E  0FB0 1801               1367              bclr.b d7,1(a0,d1.l)      ; 
Line 1368 ERROR: Invalid syntax
00001322                          1368              bne BCLR_FAIL;               ; branch if Z clear  
00001322                          1369              ; EA = n(An,A.W)  - BYTE only
00001322  0BB0 9000               1370              bclr.b d5,0(a0,a1.w)            
Line 1371 ERROR: Invalid syntax
00001326                          1371              bne BCLR_FAIL;               ; branch if Z clear  
00001326  0DB0 A000               1372              bclr.b d6,0(a0,a2.w)      ; 
Line 1373 ERROR: Invalid syntax
0000132A                          1373              bne BCLR_FAIL;               ; branch if Z clear  
0000132A  0FB0 A001               1374              bclr.b d7,1(a0,a2.w)      ; 
Line 1375 ERROR: Invalid syntax
0000132E                          1375              bne BCLR_FAIL;               ; branch if Z clear  
0000132E                          1376              ; EA = n(An,A.L)  - BYTE only
0000132E  0BB0 9800               1377              bclr.b d5,0(a0,a1.l)  
Line 1378 ERROR: Invalid syntax
00001332                          1378              bne BCLR_FAIL;               ; branch if Z clear  
00001332  0DB0 A800               1379              bclr.b d6,0(a0,a2.l)      ; 
Line 1380 ERROR: Invalid syntax
00001336                          1380              bne BCLR_FAIL;               ; branch if Z clear  
00001336  0FB0 A801               1381              bclr.b d7,1(a0,a2.l)      ; 
Line 1382 ERROR: Invalid syntax
0000133A                          1382              bne BCLR_FAIL;               ; branch if Z clear  
0000133A  207C 00000100           1383              move.l #$00000100,a0      ; point to memory to address 
00001340  0C10 00FE               1384              cmpi.b #$FE,(a0)
Line 1385 ERROR: Invalid syntax
00001344                          1385              bne BCLR_FAIL;               ; branch if Z clear  
00001344                          1386              
00001344                          1387              ; EA = x.W  - BYTE only
00001344  207C 00000100           1388              move.l #$00000100,a0      ; point to memory to address
0000134A  10FC 00FF               1389              move.b #$FF,(a0)+         ; populate test data
0000134E  10FC 00FF               1390              move.b #$FF,(a0)+         ; populate test data
00001352  10FC 00FF               1391              move.b #$FF,(a0)+         ; populate test data
00001356  0BB8 0100               1392              bclr.b d5,$0100            
Line 1393 ERROR: Invalid syntax
0000135A                          1393              beq BCLR_FAIL;               ; branch if Z set
0000135A  0DB8 0101               1394              bclr.b d6,$0101           ; 
Line 1395 ERROR: Invalid syntax
0000135E                          1395              beq BCLR_FAIL;               ; branch if Z set
0000135E  0FB8 0102               1396              bclr.b d7,$0102           ; 
Line 1397 ERROR: Invalid syntax
00001362                          1397              beq BCLR_FAIL;               ; branch if Z set
00001362  207C 00000100           1398              move.l #$00000100,a0      ; point to memory to address
00001368  0C18 00FE               1399              cmpi.b #$FE,(a0)+
Line 1400 ERROR: Invalid syntax
0000136C                          1400              bne BCLR_FAIL;               ; branch if Z clear  
0000136C                          1401                      
0000136C                          1402              ; EA = x.L  - BYTE only
0000136C  207C 000F0100           1403              move.l #$000F0100,a0      ; point to memory to address 0x100 
00001372  10FC 0001               1404              move.b #$01,(a0)+         ; populate test data
00001376  10FC 00FC               1405              move.b #$FC,(a0)+         ; populate test data
0000137A  10FC 0080               1406              move.b #$80,(a0)+         ; populate test data
0000137E  0BB9 000F0100           1407              bclr.b d5,$000F0100 
Line 1408 ERROR: Invalid syntax
00001384                          1408              beq BCLR_FAIL;               ; branch if Z set
00001384  0DB9 000F0101           1409              bclr.b d6,$000F0101       ; 
Line 1410 ERROR: Invalid syntax
0000138A                          1410              bne BCLR_FAIL;               ; branch if Z clear  
0000138A  0FB9 000F0102           1411              bclr.b d7,$000F0102       ; 
Line 1412 ERROR: Invalid syntax
00001390                          1412              beq BCLR_FAIL;               ; branch if Z set
00001390  207C 000F0101           1413              move.l #$000F0101,a0      ; point to memory to address 0x100 
00001396  0C10 00FC               1414              cmpi.b #$FC,(a0)
Line 1415 ERROR: Invalid syntax
0000139A                          1415              bne BCLR_FAIL;               ; branch if Z clear  
0000139A                          1416                      
0000139A                          1417  
0000139A  307C FF00               1418      movea #TESTSTATUS,a0
0000139E  117C 0001 0008          1419      move.b #$1,$08(a0)
000013A4  4E75                    1420      rts
000013A6                          1421      
000013A6                          1422  BCLR_FAIL:
000013A6  307C FF00               1423      movea #TESTSTATUS,a0
000013AA  117C 0002 0008          1424      move.b #$2,$08(a0)
000013B0  4E75                    1425      rts
000013B2                          1426  
000013B2                          1427    
000013B2                          1428  ;-----------------------------------------------------------
000013B2                          1429  ;-----------------------------------------------------------
000013B2                          1430  ; OPCODE : BSET
000013B2                          1431  ;-----------------------------------------------------------
000013B2                          1432  ;-----------------------------------------------------------
000013B2                          1433  op_BSET: 
000013B2                          1434  
000013B2                          1435  
000013B2                          1436  ;  Bit Number Static 
000013B2                          1437      
000013B2                          1438              ; EA = Dn  - LONG only
000013B2  7000                    1439              move.l #$00000000,d0      ; populate test data
000013B4  08C0 0000               1440              bset.l #0,d0              
000013B8  6600 0494               1441              bne BSET_FAIL               ; branch if Z clear  
000013BC  08C0 0001               1442              bset.l #1,d0              ; 
000013C0  6600 048C               1443              bne BSET_FAIL               ; branch if Z clear  
000013C4  08C0 000F               1444              bset.l #15,d0             ; 
000013C8  6600 0484               1445              bne BSET_FAIL               ; branch if Z clear  
000013CC  08C0 001F               1446              bset.l #31,d0             ; 
000013D0  6600 047C               1447              bne BSET_FAIL               ; branch if Z clear  
000013D4  0C80 80008003           1448              cmpi.l #$80008003,d0
000013DA  6600 0472               1449              bne BSET_FAIL               ; branch if Z clear  
000013DE                          1450  
000013DE                          1451              
000013DE                          1452              ; EA = (An)  - BYTE only
000013DE  207C 00000100           1453              move.l #$00000100,a0      ; point to memory to address 0x100
000013E4  10BC 0000               1454              move.b #$00,(a0)          ; populate test data
000013E8  08D0 0000               1455              bset.b #0,(a0)            
000013EC  6600 0460               1456              bne BSET_FAIL               ; branch if Z clear  
000013F0  08D0 0007               1457              bset.b #7,(a0)            ; 
000013F4  6600 0458               1458              bne BSET_FAIL               ; branch if Z clear  
000013F8  0C10 0081               1459              cmpi.b #$81,(a0)
000013FC  6600 0450               1460              bne BSET_FAIL               ; branch if Z clear  
00001400                          1461              
00001400                          1462              ; EA = (An)+  - BYTE only
00001400  207C 00000100           1463              move.l #$00000100,a0      ; point to memory to address 0x100 
00001406  10FC 0000               1464              move.b #$00,(a0)+         ; populate test data
0000140A  10FC 0000               1465              move.b #$00,(a0)+         ; populate test data
0000140E  207C 00000100           1466              move.l #$00000100,a0      ; point to memory to address 0x100 
00001414  08D8 0000               1467              bset.b #0,(a0)+            
00001418  6600 0434               1468              bne BSET_FAIL               ; branch if Z clear  
0000141C  08D8 0001               1469              bset.b #1,(a0)+           ; 
00001420  6600 042C               1470              bne BSET_FAIL               ; branch if Z clear  
00001424  207C 00000100           1471              move.l #$00000100,a0      ; point to memory to address 0x100 
0000142A  0C18 0001               1472              cmpi.b #$01,(a0)+
0000142E  6600 041E               1473              bne BSET_FAIL               ; branch if Z clear  
00001432  0C18 0002               1474              cmpi.b #$02,(a0)+
00001436  6600 0416               1475              bne BSET_FAIL               ; branch if Z clear  
0000143A                          1476   
0000143A                          1477          
0000143A                          1478              ; EA = -(An)  - BYTE only
0000143A  207C 00000100           1479              move.l #$00000100,a0      ; point to memory to address
00001440  10FC 0000               1480              move.b #$00,(a0)+         ; populate test data
00001444  10FC 0000               1481              move.b #$00,(a0)+         ; populate test data
00001448  08E0 0007               1482              bset.b #7,-(a0)            
0000144C  6600 0400               1483              bne BSET_FAIL               ; branch if Z clear  
00001450  08E0 0000               1484              bset.b #0,-(a0)           ; 
00001454  6600 03F8               1485              bne BSET_FAIL               ; branch if Z clear  
00001458  207C 00000102           1486              move.l #$00000102,a0      ; point to memory to address 0x100 
0000145E  0C20 0080               1487              cmpi.b #$80,-(a0)
00001462  6600 03EA               1488              bne BSET_FAIL               ; branch if Z clear  
00001466  0C20 0001               1489              cmpi.b #$01,-(a0)
0000146A  6600 03E2               1490              bne BSET_FAIL               ; branch if Z clear  
0000146E                          1491  
0000146E                          1492          
0000146E                          1493              ; EA = n(An)  - BYTE only
0000146E  207C 00000100           1494              move.l #$00000100,a0      ; point to memory to address
00001474  10FC 0000               1495              move.b #$00,(a0)+         ; populate test data
00001478  10FC 0000               1496              move.b #$00,(a0)+         ; populate test data
0000147C  207C 00000100           1497              move.l #$00000100,a0      ; point to memory to address
00001482  08E8 0000 0000          1498              bset.b #0,0(a0)            
00001488  6600 03C4               1499              bne BSET_FAIL               ; branch if Z clear  
0000148C  08E8 0004 0001          1500              bset.b #4,1(a0)           ; 
00001492  6600 03BA               1501              bne BSET_FAIL               ; branch if Z clear  
00001496  207C 00000100           1502              move.l #$00000100,a0      ; point to memory to address 0x100 
0000149C  0C18 0001               1503              cmpi.b #$01,(a0)+
000014A0  6600 03AC               1504              bne BSET_FAIL               ; branch if Z clear  
000014A4  0C18 0010               1505              cmpi.b #$10,(a0)+
000014A8  6600 03A4               1506              bne BSET_FAIL               ; branch if Z clear  
000014AC                          1507  
000014AC                          1508                  
000014AC                          1509              ; EA = n(An,D.W)  - BYTE only
000014AC  207C 00000100           1510              move.l #$00000100,a0      ; point to memory to address
000014B2  227C 00000000           1511              move.l #$00000000,a1      ; point to memory to address
000014B8  247C 00000004           1512              move.l #$00000004,a2      ; point to memory to address
000014BE  7000                    1513              move.l #$00000000,d0      ; point to memory to address
000014C0  7201                    1514              move.l #$00000001,d1      ; point to memory to address
000014C2  10FC 0000               1515              move.b #$00,(a0)+         ; populate test data
000014C6  10FC 0000               1516              move.b #$00,(a0)+         ; populate test data
000014CA  10FC 0000               1517              move.b #$00,(a0)+         ; populate test data
000014CE  10FC 0000               1518              move.b #$00,(a0)+         ; populate test data
000014D2  10FC 0000               1519              move.b #$00,(a0)+         ; populate test data
000014D6  10FC 0000               1520              move.b #$00,(a0)+         ; populate test data
000014DA  10FC 0000               1521              move.b #$00,(a0)+         ; populate test data
000014DE  10FC 0000               1522              move.b #$00,(a0)+         ; populate test data
000014E2  10FC 0000               1523              move.b #$00,(a0)+         ; populate test data
000014E6  10FC 0000               1524              move.b #$00,(a0)+         ; populate test data
000014EA  207C 00000100           1525              move.l #$00000100,a0      ; point to memory to address
000014F0  08F0 0000 0000          1526              bset.b #0,0(a0,d0.w)            
000014F6  6600 0356               1527              bne BSET_FAIL               ; branch if Z clear  
000014FA  08F0 0001 1000          1528              bset.b #1,0(a0,d1.w)      ; 
00001500  6600 034C               1529              bne BSET_FAIL               ; branch if Z clear  
00001504  08F0 0002 1001          1530              bset.b #2,1(a0,d1.w)      ; 
0000150A  6600 0342               1531              bne BSET_FAIL               ; branch if Z clear  
0000150E                          1532              ; EA = n(An,D.L)  - BYTE only
0000150E  08F0 0003 0802          1533              bset.b #3,2(a0,d0.l)  
00001514  6600 0338               1534              bne BSET_FAIL               ; branch if Z clear  
00001518  08F0 0004 1800          1535              bset.b #4,0(a0,d1.l)      ; 
0000151E  6600 032E               1536              bne BSET_FAIL               ; branch if Z clear  
00001522  08F0 0005 1801          1537              bset.b #5,1(a0,d1.l)      ; 
00001528  6600 0324               1538              bne BSET_FAIL               ; branch if Z clear  
0000152C                          1539              ; EA = n(An,A.W)  - BYTE only
0000152C  08F0 0006 9000          1540              bset.b #6,0(a0,a1.w)            
00001532  6600 031A               1541              bne BSET_FAIL               ; branch if Z clear  
00001536  08F0 0001 A000          1542              bset.b #1,0(a0,a2.w)      ; 
0000153C  6600 0310               1543              bne BSET_FAIL               ; branch if Z clear  
00001540  08F0 0007 A001          1544              bset.b #7,1(a0,a2.w)      ; 
00001546  6600 0306               1545              bne BSET_FAIL               ; branch if Z clear  
0000154A                          1546              ; EA = n(An,A.L)  - BYTE only
0000154A  08F0 0000 A802          1547              bset.b #0,2(a0,a2.l)  
00001550  6600 02FC               1548              bne BSET_FAIL               ; branch if Z clear  
00001554  08F0 0000 A803          1549              bset.b #0,3(a0,a2.l)      ; 
0000155A  6600 02F2               1550              bne BSET_FAIL               ; branch if Z clear  
0000155E  08F0 0001 A804          1551              bset.b #1,4(a0,a2.l)      ; 
00001564  6600 02E8               1552              bne BSET_FAIL               ; branch if Z clear  
00001568  207C 00000100           1553              move.l #$00000100,a0      ; point to memory to address 0x100 
0000156E  0C98 41122C00           1554              cmpi.l #$41122C00,(a0)+
00001574  6600 02D8               1555              bne BSET_FAIL               ; branch if Z clear  
00001578  0C98 02800101           1556              cmpi.l #$02800101,(a0)+
Line 1557 ERROR: Invalid syntax
0000157E                          1557              bne BSET_FAIL;
0000157E                          1558   
0000157E                          1559  
0000157E                          1560          
0000157E                          1561              ; EA = x.W  - BYTE only
0000157E  207C 00000100           1562              move.l #$00000100,a0      ; point to memory to address
00001584  10FC 0000               1563              move.b #$00,(a0)+         ; populate test data
00001588  08F8 0000 0100          1564              bset.b #0,$0100            
0000158E  6600 02BE               1565              bne BSET_FAIL               ; branch if Z clear  
00001592  08F8 0001 0100          1566              bset.b #1,$0100           ; 
00001598  6600 02B4               1567              bne BSET_FAIL               ; branch if Z clear  
0000159C  207C 00000100           1568              move.l #$00000100,a0      ; point to memory to address 0x100 
000015A2  0C18 0003               1569              cmpi.b #$03,(a0)+
Line 1570 ERROR: Invalid syntax
000015A6                          1570              bne BSET_FAIL;
000015A6                          1571  
000015A6                          1572              
000015A6                          1573              ; EA = x.L  - BYTE only
000015A6  207C 000F0100           1574              move.l #$000F0100,a0      ; point to memory to address 0x100 
000015AC  10BC 0000               1575              move.b #$00,(a0)          ; populate test data
000015B0  08F9 0000 000F0100      1576              bset.b #0,$000F0100 
000015B8  6600 0294               1577              bne BSET_FAIL               ; branch if Z clear  
000015BC  08F9 0001 000F0100      1578              bset.b #1,$000F0100       ; 
000015C4  6600 0288               1579              bne BSET_FAIL               ; branch if Z clear  
000015C8  08F9 0002 000F0100      1580              bset.b #2,$000F0100       ; 
000015D0  6600 027C               1581              bne BSET_FAIL               ; branch if Z clear  
000015D4  207C 000F0100           1582              move.l #$000F0100,a0      ; point to memory to address 0x100 
000015DA  0C18 0007               1583              cmpi.b #$07,(a0)+
Line 1584 ERROR: Invalid syntax
000015DE                          1584              bne BSET_FAIL;
000015DE                          1585  
000015DE                          1586  
000015DE                          1587  ; Bit Number Dynamic
000015DE                          1588      
000015DE                          1589              ; EA = Dn  - LONG only
000015DE  7000                    1590              move.l #$00000000,d0      ; populate test data
000015E0  7A00                    1591              move.l #0,d5              ; populate bit number to test
000015E2  7C01                    1592              move.l #1,d6              ; populate bit number to test
000015E4  7E1F                    1593              move.l #31,d7              ; populate bit number to test
000015E6                          1594              
000015E6  0BC0                    1595              bset.l d5,d0              
000015E8  6600 0264               1596              bne BSET_FAIL               ; branch if Z clear  
000015EC  0DC0                    1597              bset.l d6,d0              ; 
000015EE  6600 025E               1598              bne BSET_FAIL               ; branch if Z clear  
000015F2  0FC0                    1599              bset.l d7,d0             ; 
000015F4  6600 0258               1600              bne BSET_FAIL               ; branch if Z clear  
000015F8  0C80 80000003           1601              cmpi.l #$80000003,d0
000015FE  6600 024E               1602              bne BSET_FAIL               ; branch if Z clear  
00001602                          1603  
00001602                          1604              
00001602                          1605              ; EA = (An)  - BYTE only
00001602  7A00                    1606              move.l #0,d5              ; populate bit number to test
00001604  7C01                    1607              move.l #1,d6              ; populate bit number to test
00001606  7E07                    1608              move.l #7,d7              ; populate bit number to test           
00001608  207C 00000100           1609              move.l #$00000100,a0      ; point to memory to address 0x100
0000160E  10BC 0000               1610              move.b #$00,(a0)          ; populate test data
00001612  0BD0                    1611              bset.b d5,(a0)            
00001614  6600 0238               1612              bne BSET_FAIL               ; branch if Z clear  
00001618  0DD0                    1613              bset.b d6,(a0)            ; 
0000161A  6600 0232               1614              bne BSET_FAIL               ; branch if Z clear  
0000161E  0FD0                    1615              bset.b d7,(a0)            ; 
00001620  6600 022C               1616              bne BSET_FAIL               ; branch if Z clear  
00001624  0C10 0083               1617              cmpi.b #$83,(a0)
00001628  6600 0224               1618              bne BSET_FAIL               ; branch if Z clear  
0000162C                          1619              
0000162C                          1620      
0000162C                          1621              ; EA = (An)+  - BYTE only
0000162C  207C 00000100           1622              move.l #$00000100,a0      ; point to memory to address 0x100 
00001632  10FC 0000               1623              move.b #$00,(a0)+         ; populate test data
00001636  10FC 0000               1624              move.b #$00,(a0)+         ; populate test data
0000163A  10FC 0000               1625              move.b #$00,(a0)+         ; populate test data
0000163E  207C 00000100           1626              move.l #$00000100,a0      ; point to memory to address 0x100 
00001644  0BD8                    1627              bset.b d5,(a0)+            
00001646  6600 0206               1628              bne BSET_FAIL               ; branch if Z clear  
0000164A  0DD8                    1629              bset.b d6,(a0)+           ; 
0000164C  6600 0200               1630              bne BSET_FAIL               ; branch if Z clear  
00001650  0FD8                    1631              bset.b d7,(a0)+           ; 
00001652  6600 01FA               1632              bne BSET_FAIL               ; branch if Z clear  
00001656  207C 00000100           1633              move.l #$00000100,a0      ; point to memory to address 0x100 
0000165C  0C18 0001               1634              cmpi.b #$01,(a0)+
00001660  6600 01EC               1635              bne BSET_FAIL               ; branch if Z clear  
00001664  0C18 0002               1636              cmpi.b #$02,(a0)+
00001668  6600 01E4               1637              bne BSET_FAIL               ; branch if Z clear  
0000166C  0C18 0080               1638              cmpi.b #$80,(a0)+
00001670  6600 01DC               1639              bne BSET_FAIL               ; branch if Z clear  
00001674                          1640                  
00001674                          1641              ; EA = -(An)  - BYTE only
00001674  207C 00000100           1642              move.l #$00000100,a0      ; point to memory to address
0000167A  10FC 0000               1643              move.b #$00,(a0)+         ; populate test data
0000167E  10FC 0000               1644              move.b #$00,(a0)+         ; populate test data
00001682  10FC 0000               1645              move.b #$00,(a0)+         ; populate test data
00001686  207C 00000103           1646              move.l #$00000103,a0      ; point to memory to address 
0000168C  0BE0                    1647              bset.b d5,-(a0)            
0000168E  6600 01BE               1648              bne BSET_FAIL               ; branch if Z clear  
00001692  0DE0                    1649              bset.b d6,-(a0)           ; 
00001694  6600 01B8               1650              bne BSET_FAIL               ; branch if Z clear  
00001698  0FE0                    1651              bset.b d7,-(a0)           ; 
0000169A  6600 01B2               1652              bne BSET_FAIL               ; branch if Z clear  
0000169E  207C 00000103           1653              move.l #$00000103,a0      ; point to memory to address 0x100 
000016A4  0C20 0001               1654              cmpi.b #$01,-(a0)
000016A8  6600 01A4               1655              bne BSET_FAIL               ; branch if Z clear  
000016AC  0C20 0002               1656              cmpi.b #$02,-(a0)
000016B0  6600 019C               1657              bne BSET_FAIL               ; branch if Z clear  
000016B4  0C20 0080               1658              cmpi.b #$80,-(a0)
000016B8  6600 0194               1659              bne BSET_FAIL               ; branch if Z clear  
000016BC                          1660                  
000016BC                          1661              ; EA = n(An)  - BYTE only
000016BC  207C 00000100           1662              move.l #$00000100,a0      ; point to memory to address
000016C2  10FC 0000               1663              move.b #$00,(a0)+         ; populate test data
000016C6  10FC 0000               1664              move.b #$00,(a0)+         ; populate test data
000016CA  10FC 0000               1665              move.b #$00,(a0)+         ; populate test data
000016CE  207C 00000100           1666              move.l #$00000100,a0      ; point to memory to address
000016D4  0BE8 0000               1667              bset.b d5,0(a0)            
000016D8  6600 0174               1668              bne BSET_FAIL               ; branch if Z clear  
000016DC  0DE8 0001               1669              bset.b d6,1(a0)           ; 
000016E0  6600 016C               1670              bne BSET_FAIL               ; branch if Z clear  
000016E4  0FE8 0002               1671              bset.b d7,2(a0)           ; 
000016E8  6600 0164               1672              bne BSET_FAIL               ; branch if Z clear  
000016EC  207C 00000100           1673              move.l #$00000100,a0      ; point to memory to address 0x100 
000016F2  0C18 0001               1674              cmpi.b #$01,(a0)+
000016F6  6600 0156               1675              bne BSET_FAIL               ; branch if Z clear  
000016FA  0C18 0002               1676              cmpi.b #$02,(a0)+
000016FE  6600 014E               1677              bne BSET_FAIL               ; branch if Z clear  
00001702  0C18 0080               1678              cmpi.b #$80,(a0)+
00001706  6600 0146               1679              bne BSET_FAIL               ; branch if Z clear  
0000170A                          1680                  
0000170A                          1681              ; EA = n(An,R.W)  - BYTE only
0000170A  207C 00000100           1682              move.l #$00000100,a0      ; point to memory to address
00001710  10FC 0000               1683              move.b #$00,(a0)+         ; populate test data
00001714  10FC 0000               1684              move.b #$00,(a0)+         ; populate test data
00001718  10FC 0000               1685              move.b #$00,(a0)+         ; populate test data
0000171C  10FC 0000               1686              move.b #$00,(a0)+         ; populate test data
00001720  10FC 0000               1687              move.b #$00,(a0)+         ; populate test data
00001724  10FC 0000               1688              move.b #$00,(a0)+         ; populate test data
00001728  10FC 0000               1689              move.b #$00,(a0)+         ; populate test data
0000172C  10FC 0000               1690              move.b #$00,(a0)+         ; populate test data
00001730  10FC 0000               1691              move.b #$00,(a0)+         ; populate test data
00001734  10FC 0000               1692              move.b #$00,(a0)+         ; populate test data
00001738  10FC 0000               1693              move.b #$00,(a0)+         ; populate test data
0000173C  10FC 0000               1694              move.b #$00,(a0)+         ; populate test data
00001740  207C 00000100           1695              move.l #$00000100,a0      ; point to memory to address
00001746  227C 00000000           1696              move.l #$00000000,a1      ; point to memory to address
0000174C  247C 00000001           1697              move.l #$00000001,a2      ; point to memory to address
00001752  7000                    1698              move.l #$00000000,d0      ; point to memory to address
00001754  7201                    1699              move.l #$00000001,d1      ; point to memory to address
00001756  0BF0 0000               1700              bset.b d5,0(a0,d0.w)            
0000175A  6600 00F2               1701              bne BSET_FAIL               ; branch if Z clear  
0000175E  0DF0 1000               1702              bset.b d6,0(a0,d1.w)      ; 
00001762  6600 00EA               1703              bne BSET_FAIL               ; branch if Z clear  
00001766  0FF0 1001               1704              bset.b d7,1(a0,d1.w)      ; 
0000176A  6600 00E2               1705              bne BSET_FAIL               ; branch if Z clear  
0000176E                          1706              ; EA = n(An,R.L)  - BYTE only
0000176E  0BF0 0802               1707              bset.b d5,2(a0,d0.l)  
00001772  6600 00DA               1708              bne BSET_FAIL               ; branch if Z clear  
00001776  0DF0 1803               1709              bset.b d6,3(a0,d1.l)      ; 
0000177A  6600 00D2               1710              bne BSET_FAIL               ; branch if Z clear  
0000177E  0FF0 1804               1711              bset.b d7,4(a0,d1.l)      ; 
00001782  6600 00CA               1712              bne BSET_FAIL               ; branch if Z clear  
00001786                          1713              ; EA = n(An,A.W)  - BYTE only
00001786  0BF0 9005               1714              bset.b d5,5(a0,a1.w)            
0000178A  6600 00C2               1715              bne BSET_FAIL               ; branch if Z clear  
0000178E  0DF0 A006               1716              bset.b d6,6(a0,a2.w)      ; 
00001792  6600 00BA               1717              bne BSET_FAIL               ; branch if Z clear  
00001796  0FF0 A007               1718              bset.b d7,7(a0,a2.w)      ; 
0000179A  6600 00B2               1719              bne BSET_FAIL               ; branch if Z clear  
0000179E                          1720              ; EA = n(An,A.L)  - BYTE only
0000179E  0BF0 9808               1721              bset.b d5,8(a0,a1.l)  
000017A2  6600 00AA               1722              bne BSET_FAIL               ; branch if Z clear  
000017A6  0DF0 A809               1723              bset.b d6,9(a0,a2.l)      ; 
000017AA  6600 00A2               1724              bne BSET_FAIL               ; branch if Z clear  
000017AE  0FF0 A80A               1725              bset.b d7,10(a0,a2.l)      ; 
000017B2  6600 009A               1726              bne BSET_FAIL               ; branch if Z clear  
000017B6  207C 00000100           1727              move.l #$00000100,a0      ; point to memory to address 0x100 
000017BC  0C98 01028100           1728              cmpi.l #$01028100,(a0)+
000017C2  6600 008A               1729              bne BSET_FAIL               ; branch if Z clear  
000017C6  0C98 02810002           1730              cmpi.l #$02810002,(a0)+
Line 1731 ERROR: Invalid syntax
000017CC                          1731              bne BSET_FAIL;
000017CC                          1732   
000017CC                          1733              
000017CC                          1734              ; EA = x.W  - BYTE only
000017CC  207C 00000100           1735              move.l #$00000100,a0      ; point to memory to address
000017D2  10FC 0000               1736              move.b #$00,(a0)+         ; populate test data
000017D6  10FC 0000               1737              move.b #$00,(a0)+         ; populate test data
000017DA  10FC 0000               1738              move.b #$00,(a0)+         ; populate test data
000017DE  0BF8 0100               1739              bset.b d5,$0100            
000017E2  6600 006A               1740              bne BSET_FAIL               ; branch if Z clear  
000017E6  0DF8 0100               1741              bset.b d6,$0100           ; 
000017EA  6600 0062               1742              bne BSET_FAIL               ; branch if Z clear  
000017EE  0FF8 0100               1743              bset.b d7,$0100           ; 
000017F2  6600 005A               1744              bne BSET_FAIL               ; branch if Z clear  
000017F6  207C 00000100           1745              move.l #$00000100,a0      ; point to memory to address
000017FC  0C18 0083               1746              cmpi.b #$83,(a0)+
00001800  6600 004C               1747              bne BSET_FAIL               ; branch if Z clear  
00001804                          1748                      
00001804                          1749              ; EA = x.L  - BYTE only
00001804  207C 000F0100           1750              move.l #$000F0100,a0      ; point to memory to address 0x100 
0000180A  10FC 0000               1751              move.b #$00,(a0)+         ; populate test data
0000180E  10FC 0000               1752              move.b #$00,(a0)+         ; populate test data
00001812  10FC 0000               1753              move.b #$00,(a0)+         ; populate test data
00001816  0BF9 000F0100           1754              bset.b d5,$000F0100 
0000181C  6600 0030               1755              bne BSET_FAIL               ; branch if Z clear  
00001820  0DF9 000F0100           1756              bset.b d6,$000F0100       ; 
00001826  6600 0026               1757              bne BSET_FAIL               ; branch if Z clear  
0000182A  0FF9 000F0100           1758              bset.b d7,$000F0100       ; 
00001830  6600 001C               1759              bne BSET_FAIL               ; branch if Z clear  
00001834  207C 000F0100           1760              move.l #$000F0100,a0      ; point to memory to address 0x100 
0000183A  0C10 0083               1761              cmpi.b #$83,(a0)
0000183E  6600 000E               1762              bne BSET_FAIL               ; branch if Z clear  
00001842                          1763                      
00001842  307C FF00               1764      movea #TESTSTATUS,a0
00001846  117C 0001 0009          1765      move.b #$1,$09(a0)
0000184C  4E75                    1766      rts
0000184E                          1767      
0000184E                          1768  BSET_FAIL:
0000184E  307C FF00               1769      movea #TESTSTATUS,a0
00001852  117C 0001 0009          1770      move.b #$1,$09(a0)
00001858  4E75                    1771      rts
0000185A                          1772  
0000185A                          1773  ;-----------------------------------------------------------
0000185A                          1774  ;-----------------------------------------------------------
0000185A                          1775  ; OPCODE : MOVEP
0000185A                          1776  ;-----------------------------------------------------------
0000185A                          1777  ;-----------------------------------------------------------
0000185A                          1778  op_MOVEP: 
0000185A                          1779  
0000185A                          1780  ; Dn --> x(An)
0000185A  207C 00000100           1781              move.l #$00000100,a0  
00001860  203C 12345678           1782              move.l #$12345678,d0  
00001866  223C AABBCCDD           1783              move.l #$AABBCCDD,d1  
0000186C  20BC 00000000           1784              move.l #0,(a0)
00001872  217C 00000000 0004      1785              move.l #0,4(a0)
0000187A                          1786              
0000187A  0188 0000               1787              movep.w d0,0(a0)      ; even offset   
0000187E  0388 0001               1788              movep.w d1,1(a0)      ; odd offset
00001882                          1789              
00001882  01C8 0004               1790              movep.l d0,4(a0)      ; even offset   
00001886  03C8 0005               1791              movep.l d1,5(a0)      ; odd offset
0000188A                          1792              
0000188A  0C90 56CC78DD           1793              cmpi.l #$56CC78DD,(a0)
Line 1794 ERROR: Invalid syntax
00001890                          1794              bne MOVEP_FAIL;
00001890  0CA8 12AA34BB 0004      1795              cmpi.l #$12AA34BB,4(a0)
Line 1796 ERROR: Invalid syntax
00001898                          1796              bne MOVEP_FAIL;
00001898  0CA8 56CC78DD 0008      1797              cmpi.l #$56CC78DD,8(a0)
Line 1798 ERROR: Invalid syntax
000018A0                          1798              bne MOVEP_FAIL;
000018A0                          1799              
000018A0                          1800              
000018A0                          1801  ; x(An)--> Dn
000018A0  203C 5A5A5A5A           1802              move.l #$5a5a5a5a,d0  
000018A6  223C 5A5A5A5A           1803              move.l #$5a5a5a5a,d1  
000018AC  243C 5A5A5A5A           1804              move.l #$5a5a5a5a,d2  
000018B2  263C 5A5A5A5A           1805              move.l #$5a5a5a5a,d3  
000018B8                          1806              
000018B8  0108 0000               1807              movep.w 0(a0),d0      ; even offset   
000018BC  0308 0001               1808              movep.w 1(a0),d1      ; odd offset
000018C0                          1809              
000018C0  0548 0004               1810              movep.l 4(a0),d2      ; even offset   
000018C4  0748 0005               1811              movep.l 5(a0),d3      ; odd offset
000018C8                          1812              
000018C8  0C80 5A5A5678           1813              cmpi.l #$5a5a5678,d0
Line 1814 ERROR: Invalid syntax
000018CE                          1814              bne MOVEP_FAIL;
000018CE  0C81 5A5ACCDD           1815              cmpi.l #$5a5aCCDD,d1
Line 1816 ERROR: Invalid syntax
000018D4                          1816              bne MOVEP_FAIL;
000018D4  0C82 12345678           1817              cmpi.l #$12345678,d2
Line 1818 ERROR: Invalid syntax
000018DA                          1818              bne MOVEP_FAIL;
000018DA  0C83 AABBCCDD           1819              cmpi.l #$AABBCCDD,d3
Line 1820 ERROR: Invalid syntax
000018E0                          1820              bne MOVEP_FAIL;
000018E0                          1821      
000018E0  307C FF00               1822              movea #TESTSTATUS,a0
000018E4  117C 0001 000A          1823              move.b #$1,$0a(a0)
000018EA  4E75                    1824              rts
000018EC                          1825  
000018EC                          1826  MOVEP_FAIL: 
000018EC  307C FF00               1827      movea #TESTSTATUS,a0
000018F0  117C 0002 000A          1828      move.b #$2,$0a(a0)
000018F6  4E75                    1829      rts
000018F8                          1830  
000018F8                          1831  ;-----------------------------------------------------------
000018F8                          1832  ;-----------------------------------------------------------
000018F8                          1833  ; OPCODE : BOOL_I
000018F8                          1834  ;-----------------------------------------------------------
000018F8                          1835  ;-----------------------------------------------------------
000018F8                          1836  op_BOOL_I: 
000018F8                          1837          
000018F8                          1838      ; Dn -- BYTE
000018F8  203C 12345678           1839              move.l #$12345678,d0  
000018FE  44FC 000F               1840              move.w #$000F,CCR          ; pre-set Flags
00001902  0000 00FF               1841              ori.b  #$FF,d0
00001906  0A00 005A               1842              eori.b #$5A,d0
0000190A  C03C 00F0               1843              and.b  #$F0,d0
Line 1844 ERROR: Invalid syntax
0000190E                          1844              bvs BOOL_I_FAIL;                       ; Check V,C are cleared
Line 1845 ERROR: Invalid syntax
0000190E                          1845              bcs BOOL_I_FAIL;
Line 1846 ERROR: Invalid syntax
0000190E                          1846              bpl BOOL_I_FAIL;                       ; Verify if N flag is set
0000190E  C03C 0000               1847              and.b  #$00,d0
Line 1848 ERROR: Invalid syntax
00001912                          1848              bmi BOOL_I_FAIL;                       ; Verify if N flag is cleared
Line 1849 ERROR: Invalid syntax
00001912                          1849              bne BOOL_I_FAIL;                       ; Verify if Z flag is set
00001912                          1850  
00001912                          1851      ; Dn -- WORD
00001912  223C 12345678           1852              move.l #$12345678,d1  
00001918  44FC 000F               1853              move.w #$000F,CCR          ; pre-set Flags
0000191C  0041 FFFF               1854              ori.w  #$FFFF,d1
00001920  0A41 5A5A               1855              eori.w #$5A5A,d1
00001924  C27C F0F0               1856              and.w  #$F0F0,d1
Line 1857 ERROR: Invalid syntax
00001928                          1857              bvs BOOL_I_FAIL;                       ; Check V,C are cleared
Line 1858 ERROR: Invalid syntax
00001928                          1858              bcs BOOL_I_FAIL;
Line 1859 ERROR: Invalid syntax
00001928                          1859              bpl BOOL_I_FAIL;                       ; Verify if N flag is set
00001928  C27C 0000               1860              and.w  #$0000,d1
Line 1861 ERROR: Invalid syntax
0000192C                          1861              bmi BOOL_I_FAIL;                       ; Verify if N flag is cleared
Line 1862 ERROR: Invalid syntax
0000192C                          1862              bne BOOL_I_FAIL;                       ; Verify if Z flag is set
0000192C                          1863  
0000192C                          1864      ; Dn -- LONG
0000192C  243C 12345678           1865              move.l #$12345678,d2  
00001932  44FC 000F               1866              move.w #$000F,CCR          ; pre-set Flags
00001936  0082 FFFFFFFF           1867              ori.l  #$FFFFFFFF,d2
0000193C  0A82 5A5A5A5A           1868              eori.l #$5A5A5A5A,d2
00001942  C4BC F0F0F0F0           1869              and.l  #$F0F0F0F0,d2
Line 1870 ERROR: Invalid syntax
00001948                          1870              bvs BOOL_I_FAIL;                       ; Check V,C are cleared
Line 1871 ERROR: Invalid syntax
00001948                          1871              bcs BOOL_I_FAIL;
Line 1872 ERROR: Invalid syntax
00001948                          1872              bpl BOOL_I_FAIL;                       ; Verify if N flag is set
00001948  C4BC 00000000           1873              and.l  #$00000000,d2
Line 1874 ERROR: Invalid syntax
0000194E                          1874              bmi BOOL_I_FAIL;                       ; Verify if N flag is cleared
Line 1875 ERROR: Invalid syntax
0000194E                          1875              bne BOOL_I_FAIL;                       ; Verify if Z flag is set
0000194E                          1876  
0000194E                          1877      
0000194E                          1878      ; (An) -- BYTE
0000194E  207C 00000100           1879              move.l #$00000100,a0  
00001954  20BC 12345678           1880              move.l #$12345678,(a0)  
0000195A  44FC 000F               1881              move.w #$000F,CCR          ; pre-set Flags
0000195E  0010 00FF               1882              ori.b  #$FF,(a0)
00001962  0A10 005A               1883              eori.b #$5A,(a0)
00001966  0210 00F0               1884              and.b  #$F0,(a0)
Line 1885 ERROR: Invalid syntax
0000196A                          1885              bvs BOOL_I_FAIL;                       ; Check V,C are cleared
Line 1886 ERROR: Invalid syntax
0000196A                          1886              bcs BOOL_I_FAIL;
Line 1887 ERROR: Invalid syntax
0000196A                          1887              bpl BOOL_I_FAIL;                       ; Verify if N flag is set
0000196A  0210 0000               1888              and.b  #$00,(a0)
Line 1889 ERROR: Invalid syntax
0000196E                          1889              bmi BOOL_I_FAIL;                       ; Verify if N flag is cleared
Line 1890 ERROR: Invalid syntax
0000196E                          1890              bne BOOL_I_FAIL;                       ; Verify if Z flag is set
0000196E  0C10 0000               1891              cmpi.b #$00,(a0)
Line 1892 ERROR: Invalid syntax
00001972                          1892              bne BOOL_I_FAIL;                       ; Verify if Z flag is set
00001972                          1893              
00001972                          1894      ; (An) -- WORD
00001972  20BC 12345678           1895              move.l #$12345678,(a0)  
00001978  44FC 000F               1896              move.w #$000F,CCR          ; pre-set Flags
0000197C  0050 FFFF               1897              ori.w  #$FFFF,(a0)
00001980  0A50 5A5A               1898              eori.w #$5A5A,(a0)
00001984  0250 F0F0               1899              and.w  #$F0F0,(a0)
Line 1900 ERROR: Invalid syntax
00001988                          1900              bvs BOOL_I_FAIL;                       ; Check V,C are cleared
Line 1901 ERROR: Invalid syntax
00001988                          1901              bcs BOOL_I_FAIL;
Line 1902 ERROR: Invalid syntax
00001988                          1902              bpl BOOL_I_FAIL;                       ; Verify if N flag is set
00001988  0250 0000               1903              and.w  #$0000,(a0)
Line 1904 ERROR: Invalid syntax
0000198C                          1904              bmi BOOL_I_FAIL;                       ; Verify if N flag is cleared
Line 1905 ERROR: Invalid syntax
0000198C                          1905              bne BOOL_I_FAIL;                       ; Verify if Z flag is set
0000198C  0C50 0000               1906              cmpi.w #$00,(a0)
Line 1907 ERROR: Invalid syntax
00001990                          1907              bne BOOL_I_FAIL;                       ; Verify if Z flag is set
00001990                          1908              
00001990                          1909      ; (An) -- LONG
00001990  20BC 12345678           1910              move.l #$12345678,(a0)  
00001996  44FC 000F               1911              move.w #$000F,CCR          ; pre-set Flags
0000199A  0090 FFFFFFFF           1912              ori.l  #$FFFFFFFF,(a0)
000019A0  0A90 5A5A5A5A           1913              eori.l #$5A5A5A5A,(a0)
000019A6  0290 F0F0F0F0           1914              and.l  #$F0F0F0F0,(a0)
Line 1915 ERROR: Invalid syntax
000019AC                          1915              bvs BOOL_I_FAIL;                       ; Check V,C are cleared
Line 1916 ERROR: Invalid syntax
000019AC                          1916              bcs BOOL_I_FAIL;
Line 1917 ERROR: Invalid syntax
000019AC                          1917              bpl BOOL_I_FAIL;                       ; Verify if N flag is set
000019AC  0290 00000000           1918              and.l  #$00000000,(a0)
Line 1919 ERROR: Invalid syntax
000019B2                          1919              bmi BOOL_I_FAIL;                       ; Verify if N flag is cleared
Line 1920 ERROR: Invalid syntax
000019B2                          1920              bne BOOL_I_FAIL;                       ; Verify if Z flag is set
000019B2  0C90 00000000           1921              cmpi.l #$00,(a0)
Line 1922 ERROR: Invalid syntax
000019B8                          1922              bne BOOL_I_FAIL;                       ; Verify if Z flag is set
000019B8                          1923              
000019B8                          1924  
000019B8                          1925  
000019B8                          1926      ; (An)+ -- BYTE
000019B8  207C 00000100           1927              move.l #$00000100,a0  
000019BE  20BC 00A5FF88           1928              move.l #$00A5FF88,(a0)  
000019C4  44FC 000F               1929              move.w #$000F,CCR          ; pre-set Flags
000019C8                          1930              
000019C8  0018 00F5               1931              ori.b  #$F5,(a0)+
Line 1932 ERROR: Invalid syntax
000019CC                          1932              bpl BOOL_I_FAIL;                       ; Verify if N flag is set
Line 1933 ERROR: Invalid syntax
000019CC                          1933              beq BOOL_I_FAIL;                       ; Verify if Z flag is cleared
000019CC                          1934              
000019CC  0A18 00FF               1935              eori.b #$FF,(a0)+
Line 1936 ERROR: Invalid syntax
000019D0                          1936              bmi BOOL_I_FAIL;                       ; Verify if N flag is cleared
Line 1937 ERROR: Invalid syntax
000019D0                          1937              beq BOOL_I_FAIL;                       ; Verify if Z flag is cleared
000019D0                          1938              
000019D0  0218 00AA               1939              and.b  #$AA,(a0)+
Line 1940 ERROR: Invalid syntax
000019D4                          1940              bpl BOOL_I_FAIL;                       ; Verify if N flag is set
Line 1941 ERROR: Invalid syntax
000019D4                          1941              beq BOOL_I_FAIL;                       ; Verify if Z flag is cleared
000019D4                          1942              
000019D4  207C 00000100           1943              move.l #$00000100,a0  
000019DA  0C90 F55AAA88           1944              cmpi.l #$F55AAA88,(a0)
Line 1945 ERROR: Invalid syntax
000019E0                          1945              bne BOOL_I_FAIL;                       ; Verify if Z flag is set
000019E0                          1946              
000019E0                          1947              
000019E0                          1948      ; (An)+ -- WORD
000019E0  207C 00000100           1949              move.l #$00000100,a0  
000019E6  227C 00000104           1950              move.l #$00000104,a1  
000019EC  20BC 00005A5A           1951              move.l #$00005a5a,(a0)  
000019F2  22BC 12345678           1952              move.l #$12345678,(a1)  
000019F8  44FC 000F               1953              move.w #$000F,CCR          ; pre-set Flags
000019FC                          1954              
000019FC  0058 5678               1955              ori.w  #$5678,(a0)+
Line 1956 ERROR: Invalid syntax
00001A00                          1956              bmi BOOL_I_FAIL;                       ; Verify if N flag is cleared
Line 1957 ERROR: Invalid syntax
00001A00                          1957              beq BOOL_I_FAIL;                       ; Verify if Z flag is cleared
00001A00                          1958              
00001A00  0A58 FFFF               1959              eori.w #$FFFF,(a0)+
Line 1960 ERROR: Invalid syntax
00001A04                          1960              bpl BOOL_I_FAIL;                       ; Verify if N flag is set
Line 1961 ERROR: Invalid syntax
00001A04                          1961              beq BOOL_I_FAIL;                       ; Verify if Z flag is cleared
00001A04                          1962              
00001A04  0258 A55A               1963              and.w  #$A55A,(a0)+
Line 1964 ERROR: Invalid syntax
00001A08                          1964              bmi BOOL_I_FAIL;                       ; Verify if N flag is cleared
Line 1965 ERROR: Invalid syntax
00001A08                          1965              beq BOOL_I_FAIL;                       ; Verify if Z flag is cleared
00001A08                          1966              
00001A08  207C 00000100           1967              move.l #$00000100,a0  
00001A0E  0C90 5678A5A5           1968              cmpi.l #$5678a5a5,(a0)
00001A14  207C 00000104           1969              move.l #$00000104,a0  
00001A1A  0C90 00105678           1970              cmpi.l #$00105678,(a0)
Line 1971 ERROR: Invalid syntax
00001A20                          1971              bne BOOL_I_FAIL;                       ; Verify if Z flag is set
00001A20                          1972              
00001A20                          1973      ; (An)+ -- LONG
00001A20  207C 00000100           1974              move.l #$00000100,a0  
00001A26  20FC 00000000           1975              move.l #$00000000,(a0)+  
00001A2C  20FC 5A5A5A5A           1976              move.l #$5a5a5a5a,(a0)+  
00001A32  20FC FFFFFFFF           1977              move.l #$FFFFFFFF,(a0)+  
00001A38  207C 00000100           1978              move.l #$00000100,a0  
00001A3E  44FC 000F               1979              move.w #$000F,CCR          ; pre-set Flags
00001A42                          1980              
00001A42  0098 12345678           1981              ori.l  #$12345678,(a0)+
Line 1982 ERROR: Invalid syntax
00001A48                          1982              bmi BOOL_I_FAIL;                       ; Verify if N flag is cleared
Line 1983 ERROR: Invalid syntax
00001A48                          1983              beq BOOL_I_FAIL;                       ; Verify if Z flag is cleared
00001A48                          1984              
00001A48  0A98 FFFFFFFF           1985              eori.l #$FFFFFFFF,(a0)+
Line 1986 ERROR: Invalid syntax
00001A4E                          1986              bpl BOOL_I_FAIL;                       ; Verify if N flag is set
Line 1987 ERROR: Invalid syntax
00001A4E                          1987              beq BOOL_I_FAIL;                       ; Verify if Z flag is cleared
00001A4E                          1988              
00001A4E  0298 A5A5A55A           1989              and.l  #$A5A5A55A,(a0)+
Line 1990 ERROR: Invalid syntax
00001A54                          1990              bpl BOOL_I_FAIL;                       ; Verify if N flag is set
Line 1991 ERROR: Invalid syntax
00001A54                          1991              beq BOOL_I_FAIL;                       ; Verify if Z flag is cleared
00001A54                          1992              
00001A54  207C 00000100           1993              move.l #$00000100,a0  
00001A5A  0C98 12345678           1994              cmpi.l #$12345678,(a0)+
00001A60  0C98 A5A5A5A5           1995              cmpi.l #$a5a5a5a5,(a0)+
00001A66  0C98 A5A5A55A           1996              cmpi.l #$a5a5a55a,(a0)+
Line 1997 ERROR: Invalid syntax
00001A6C                          1997              bne BOOL_I_FAIL;                       ; Verify if Z flag is set
00001A6C                          1998              
00001A6C  307C FF00               1999              movea #TESTSTATUS,a0
00001A70  117C 0001 000B          2000              move.b #$1,$0b(a0)
00001A76  4E75                    2001              rts
00001A78                          2002  
00001A78                          2003  BOOL_I_FAIL: 
00001A78  307C FF00               2004      movea #TESTSTATUS,a0
00001A7C  117C 0002 000B          2005      move.b #$2,$0b(a0)
00001A82  4E75                    2006      rts
00001A84                          2007  
00001A84                          2008  ;-----------------------------------------------------------
00001A84                          2009  ;-----------------------------------------------------------
00001A84                          2010  ; OPCODE : BSR
00001A84                          2011  ;-----------------------------------------------------------
00001A84                          2012  ;-----------------------------------------------------------
00001A84                          2013  
00001A84                          2014       
00001A84  223C 11111111           2015  BSR_CLOSE1:     move.l #$11111111,d1
00001A8A  4E75                    2016                  rts
00001A8C                          2017   
00001A8C                          2018  
00001A8C                          2019  
00001A8C  61F6                    2020  op_BSR:         bsr.s BSR_CLOSE1        ; Negative 8-bit displacement
00001A8E  612C                    2021                  bsr.s BSR_CLOSE2        ; Positive 8-bit displacement
00001A90  6100 EAD6               2022                  bsr.w BSR_FAR1          ; Negative 16-bit displacement
00001A94  6100 116E               2023                  bsr.w BSR_FAR2          ; Positive 16-bit displacement
00001A98                          2024                  
00001A98  0C81 11111111           2025                  cmpi.l #$11111111,d1
Line 2026 ERROR: Invalid syntax
00001A9E                          2026                  bne BSR_FAIL;
00001A9E  0C82 22222222           2027                  cmpi.l #$22222222,d2
Line 2028 ERROR: Invalid syntax
00001AA4                          2028                  bne BSR_FAIL;
00001AA4  0C83 33333333           2029                  cmpi.l #$33333333,d3
Line 2030 ERROR: Invalid syntax
00001AAA                          2030                  bne BSR_FAIL;
00001AAA  0C84 44444444           2031                  cmpi.l #$44444444,d4
Line 2032 ERROR: Invalid syntax
00001AB0                          2032                  bne BSR_FAIL;
00001AB0                          2033                  
00001AB0  307C FF00               2034                  movea #TESTSTATUS,a0
00001AB4  117C 0001 000C          2035                  move.b #$1,$0c(a0)
00001ABA  4E75                    2036                  rts   
00001ABC                          2037                  
00001ABC                          2038                  
00001ABC  243C 22222222           2039  BSR_CLOSE2:     move.l #$22222222,d2
00001AC2  4E75                    2040                  rts
00001AC4                          2041  
00001AC4                          2042  BSR_FAIL:
00001AC4  307C FF00               2043      movea #TESTSTATUS,a0
00001AC8  117C 0002 000C          2044      move.b #$2,$0c(a0)
00001ACE  4E75                    2045      rts
00001AD0                          2046  
00001AD0                          2047  ;-----------------------------------------------------------
00001AD0                          2048  ;-----------------------------------------------------------
00001AD0                          2049  ; OPCODE : op_CMP_I
00001AD0                          2050  ;-----------------------------------------------------------
00001AD0                          2051  ;-----------------------------------------------------------
00001AD0                          2052  op_CMP_I: 
00001AD0                          2053  
00001AD0  207C 00000100           2054              move.l #$00000100,a0 
00001AD6  20BC 00000100           2055              move.l #$00000100,(a0) 
00001ADC                          2056   
00001ADC                          2057      ; REGISTER - BYTE
00001ADC  7080                    2058              move.l #$FFFFFF80,d0  
00001ADE  0C00 0080               2059              cmpi.b #$80,d0
Line 2060 ERROR: Invalid syntax
00001AE2                          2060              bne CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2061 ERROR: Invalid syntax
00001AE2                          2061              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2062 ERROR: Invalid syntax
00001AE2                          2062              bcs CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2063 ERROR: Invalid syntax
00001AE2                          2063              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001AE2                          2064              
00001AE2  223C FFFFF000           2065              move.l #$FFFFF000,d1  
00001AE8  0C01 0000               2066              cmpi.b #$00,d1
Line 2067 ERROR: Invalid syntax
00001AEC                          2067              bne CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2068 ERROR: Invalid syntax
00001AEC                          2068              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2069 ERROR: Invalid syntax
00001AEC                          2069              bcs CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2070 ERROR: Invalid syntax
00001AEC                          2070              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001AEC                          2071              
00001AEC  243C FFFFFF02           2072              move.l #$FFFFFF02,d2  
00001AF2  0C02 00FF               2073              cmpi.b #$FF,d2
Line 2074 ERROR: Invalid syntax
00001AF6                          2074              beq CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2075 ERROR: Invalid syntax
00001AF6                          2075              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2076 ERROR: Invalid syntax
00001AF6                          2076              bcc CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2077 ERROR: Invalid syntax
00001AF6                          2077              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001AF6                          2078                  
00001AF6  263C FFFFFF7F           2079              move.l #$FFFFFF7F,d3  
00001AFC  0C03 00FF               2080              cmpi.b #$FF,d3
Line 2081 ERROR: Invalid syntax
00001B00                          2081              beq CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2082 ERROR: Invalid syntax
00001B00                          2082              bpl CMP_I_FAIL;                       ; Check N Flag  bmi/bpl  #FIXME
Line 2083 ERROR: Invalid syntax
00001B00                          2083              bcc CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2084 ERROR: Invalid syntax
00001B00                          2084              bvc CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001B00                          2085           
00001B00                          2086           
00001B00                          2087      ; REGISTER - WORD
00001B00  203C FFFF8000           2088              move.l #$FFFF8000,d0  
00001B06  0C40 8000               2089              cmpi.w #$8000,d0
Line 2090 ERROR: Invalid syntax
00001B0A                          2090              bne CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2091 ERROR: Invalid syntax
00001B0A                          2091              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2092 ERROR: Invalid syntax
00001B0A                          2092              bcs CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2093 ERROR: Invalid syntax
00001B0A                          2093              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001B0A                          2094              
00001B0A  223C FFF00000           2095              move.l #$FFF00000,d1  
00001B10  0C41 0000               2096              cmpi.w #$0000,d1
Line 2097 ERROR: Invalid syntax
00001B14                          2097              bne CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2098 ERROR: Invalid syntax
00001B14                          2098              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2099 ERROR: Invalid syntax
00001B14                          2099              bcs CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2100 ERROR: Invalid syntax
00001B14                          2100              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001B14                          2101              
00001B14  243C FFFF0002           2102              move.l #$FFFF0002,d2  
00001B1A  0C42 FFFF               2103              cmpi.w #$FFFF,d2
Line 2104 ERROR: Invalid syntax
00001B1E                          2104              beq CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2105 ERROR: Invalid syntax
00001B1E                          2105              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2106 ERROR: Invalid syntax
00001B1E                          2106              bcc CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2107 ERROR: Invalid syntax
00001B1E                          2107              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001B1E                          2108                  
00001B1E  263C FFFF7FFF           2109              move.l #$FFFF7FFF,d3  
00001B24  0C43 FFFF               2110              cmpi.w #$FFFF,d3
Line 2111 ERROR: Invalid syntax
00001B28                          2111              beq CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2112 ERROR: Invalid syntax
00001B28                          2112              bpl CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2113 ERROR: Invalid syntax
00001B28                          2113              bcc CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2114 ERROR: Invalid syntax
00001B28                          2114              bvc CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001B28                          2115              
00001B28                          2116      ; REGISTER - LONG
00001B28  203C 80000000           2117              move.l #$80000000,d0  
00001B2E  0C80 80000000           2118              cmpi.l #$80000000,d0
Line 2119 ERROR: Invalid syntax
00001B34                          2119              bne CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2120 ERROR: Invalid syntax
00001B34                          2120              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2121 ERROR: Invalid syntax
00001B34                          2121              bcs CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2122 ERROR: Invalid syntax
00001B34                          2122              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001B34                          2123              
00001B34  7200                    2124              move.l #$00000000,d1  
00001B36  0C81 00000000           2125              cmpi.l #$00000000,d1
Line 2126 ERROR: Invalid syntax
00001B3C                          2126              bne CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2127 ERROR: Invalid syntax
00001B3C                          2127              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2128 ERROR: Invalid syntax
00001B3C                          2128              bcs CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2129 ERROR: Invalid syntax
00001B3C                          2129              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001B3C                          2130              
00001B3C  7402                    2131              move.l #$00000002,d2  
00001B3E  0C82 FFFFFFFF           2132              cmpi.l #$FFFFFFFF,d2
Line 2133 ERROR: Invalid syntax
00001B44                          2133              beq CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2134 ERROR: Invalid syntax
00001B44                          2134              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2135 ERROR: Invalid syntax
00001B44                          2135              bcc CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2136 ERROR: Invalid syntax
00001B44                          2136              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001B44                          2137                  
00001B44  263C 7FFFFFFF           2138              move.l #$7FFFFFFF,d3  
00001B4A  0C83 FFFFFFFF           2139              cmpi.l #$FFFFFFFF,d3
Line 2140 ERROR: Invalid syntax
00001B50                          2140              beq CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2141 ERROR: Invalid syntax
00001B50                          2141              bpl CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2142 ERROR: Invalid syntax
00001B50                          2142              bcc CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2143 ERROR: Invalid syntax
00001B50                          2143              bvc CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001B50                          2144              
00001B50                          2145              
00001B50                          2146              
00001B50                          2147  
00001B50                          2148      ; EA=x(An,Dn) - BYTE
00001B50  207C 00000100           2149              move.l #$00000100,a0  
00001B56  7E04                    2150              move.l #$00000004,d7  
00001B58                          2151              
00001B58  21BC FFFFFF80 700C      2152              move.l #$FFFFFF80,12(a0,d7)
00001B60  21BC FFFFFF80 700C      2153              move.l #$FFFFFF80,12(a0,d7)
00001B68  0C30 0080 700F          2154              cmpi.b #$80,15(a0,d7)
Line 2155 ERROR: Invalid syntax
00001B6E                          2155              bne CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2156 ERROR: Invalid syntax
00001B6E                          2156              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2157 ERROR: Invalid syntax
00001B6E                          2157              bcs CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2158 ERROR: Invalid syntax
00001B6E                          2158              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001B6E                          2159              
00001B6E  21BC FFFFF000 700C      2160              move.l #$FFFFF000,12(a0,d7)
00001B76  0C30 0000 700F          2161              cmpi.b #$00,15(a0,d7)
Line 2162 ERROR: Invalid syntax
00001B7C                          2162              bne CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2163 ERROR: Invalid syntax
00001B7C                          2163              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2164 ERROR: Invalid syntax
00001B7C                          2164              bcs CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2165 ERROR: Invalid syntax
00001B7C                          2165              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001B7C                          2166              
00001B7C  21BC FFFFFF02 700C      2167              move.l #$FFFFFF02,12(a0,d7)
00001B84  0C30 00FF 700F          2168              cmpi.b #$FF,15(a0,d7)
Line 2169 ERROR: Invalid syntax
00001B8A                          2169              beq CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2170 ERROR: Invalid syntax
00001B8A                          2170              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2171 ERROR: Invalid syntax
00001B8A                          2171              bcc CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2172 ERROR: Invalid syntax
00001B8A                          2172              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001B8A                          2173                  
00001B8A  21BC FFFFFF7F 700C      2174              move.l #$FFFFFF7F,12(a0,d7)
00001B92  0C30 00FF 700F          2175              cmpi.b #$FF,15(a0,d7)
Line 2176 ERROR: Invalid syntax
00001B98                          2176              beq CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2177 ERROR: Invalid syntax
00001B98                          2177              bpl CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2178 ERROR: Invalid syntax
00001B98                          2178              bcc CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2179 ERROR: Invalid syntax
00001B98                          2179              bvc CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001B98                          2180           
00001B98                          2181           
00001B98                          2182      ; EA=x(An,Dn) - WORD
00001B98  21BC FFFF8000 700C      2183              move.l #$FFFF8000,12(a0,d7)
00001BA0  0C70 8000 700E          2184              cmpi.w #$8000,14(a0,d7)
Line 2185 ERROR: Invalid syntax
00001BA6                          2185              bne CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2186 ERROR: Invalid syntax
00001BA6                          2186              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2187 ERROR: Invalid syntax
00001BA6                          2187              bcs CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2188 ERROR: Invalid syntax
00001BA6                          2188              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001BA6                          2189              
00001BA6  21BC FFF00000 700C      2190              move.l #$FFF00000,12(a0,d7)
00001BAE  0C70 0000 700E          2191              cmpi.w #$0000,14(a0,d7)
Line 2192 ERROR: Invalid syntax
00001BB4                          2192              bne CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2193 ERROR: Invalid syntax
00001BB4                          2193              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2194 ERROR: Invalid syntax
00001BB4                          2194              bcs CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2195 ERROR: Invalid syntax
00001BB4                          2195              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001BB4                          2196              
00001BB4  21BC FFFF0002 700C      2197              move.l #$FFFF0002,12(a0,d7)
00001BBC  0C70 FFFF 700E          2198              cmpi.w #$FFFF,14(a0,d7)
Line 2199 ERROR: Invalid syntax
00001BC2                          2199              beq CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2200 ERROR: Invalid syntax
00001BC2                          2200              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2201 ERROR: Invalid syntax
00001BC2                          2201              bcc CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2202 ERROR: Invalid syntax
00001BC2                          2202              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001BC2                          2203                  
00001BC2  21BC FFFF7FFF 700C      2204              move.l #$FFFF7FFF,12(a0,d7)
00001BCA  0C70 FFFF 700E          2205              cmpi.w #$FFFF,14(a0,d7)
Line 2206 ERROR: Invalid syntax
00001BD0                          2206              beq CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2207 ERROR: Invalid syntax
00001BD0                          2207              bpl CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2208 ERROR: Invalid syntax
00001BD0                          2208              bcc CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2209 ERROR: Invalid syntax
00001BD0                          2209              bvc CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001BD0                          2210              
00001BD0                          2211      ; EA=x(An,Dn) - LONG
00001BD0  21BC 80000000 700C      2212              move.l #$80000000,12(a0,d7)
00001BD8  0CB0 80000000 700C      2213              cmpi.l #$80000000,12(a0,d7)
Line 2214 ERROR: Invalid syntax
00001BE0                          2214              bne CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2215 ERROR: Invalid syntax
00001BE0                          2215              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2216 ERROR: Invalid syntax
00001BE0                          2216              bcs CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2217 ERROR: Invalid syntax
00001BE0                          2217              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001BE0                          2218              
00001BE0  21BC 00000000 700C      2219              move.l #$00000000,12(a0,d7)
00001BE8  0CB0 00000000 700C      2220              cmpi.l #$00000000,12(a0,d7)
Line 2221 ERROR: Invalid syntax
00001BF0                          2221              bne CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2222 ERROR: Invalid syntax
00001BF0                          2222              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2223 ERROR: Invalid syntax
00001BF0                          2223              bcs CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2224 ERROR: Invalid syntax
00001BF0                          2224              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001BF0                          2225              
00001BF0  21BC 00000002 700C      2226              move.l #$00000002,12(a0,d7)
00001BF8  0CB0 FFFFFFFF 700C      2227              cmpi.l #$FFFFFFFF,12(a0,d7)
Line 2228 ERROR: Invalid syntax
00001C00                          2228              beq CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2229 ERROR: Invalid syntax
00001C00                          2229              bmi CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2230 ERROR: Invalid syntax
00001C00                          2230              bcc CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2231 ERROR: Invalid syntax
00001C00                          2231              bvs CMP_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C00                          2232                  
00001C00  21BC 7FFFFFFF 700C      2233              move.l #$7FFFFFFF,12(a0,d7)
00001C08  0CB0 FFFFFFFF 700C      2234              cmpi.l #$FFFFFFFF,12(a0,d7)
Line 2235 ERROR: Invalid syntax
00001C10                          2235              beq CMP_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2236 ERROR: Invalid syntax
00001C10                          2236              bpl CMP_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2237 ERROR: Invalid syntax
00001C10                          2237              bcc CMP_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2238 ERROR: Invalid syntax
00001C10                          2238              bvc CMP_I_FAIL;                       ; Check V Flag  bvc/bvs     
00001C10                          2239              
00001C10  307C FF00               2240              movea #TESTSTATUS,a0
00001C14  117C 0001 000D          2241              move.b #$1,$0d(a0)
00001C1A  4E75                    2242              rts
00001C1C                          2243              
00001C1C                          2244  CMP_I_FAIL:
00001C1C  307C FF00               2245      movea #TESTSTATUS,a0
00001C20  117C 0002 000D          2246      move.b #$2,$0d(a0)
00001C26  4E75                    2247      rts
00001C28                          2248    
00001C28                          2249  ;-----------------------------------------------------------
00001C28                          2250  ;-----------------------------------------------------------
00001C28                          2251  ; OPCODE : ADD_I
00001C28                          2252  ;-----------------------------------------------------------
00001C28                          2253  ;-----------------------------------------------------------
00001C28                          2254  op_ADD_I: 
00001C28                          2255      
00001C28                          2256      ; EA = Dn  - Byte
00001C28  203C 12345678           2257              move.l #$12345678,d0      ; populate test data
00001C2E  0600 0000               2258              addi.b #0,d0                          
Line 2259 ERROR: Invalid syntax
00001C32                          2259              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2260 ERROR: Invalid syntax
00001C32                          2260              bmi ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2261 ERROR: Invalid syntax
00001C32                          2261              bcs ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2262 ERROR: Invalid syntax
00001C32                          2262              bvs ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C32  0600 0010               2263              addi.b #$10,d0                            
Line 2264 ERROR: Invalid syntax
00001C36                          2264              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2265 ERROR: Invalid syntax
00001C36                          2265              bpl ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2266 ERROR: Invalid syntax
00001C36                          2266              bcs ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2267 ERROR: Invalid syntax
00001C36                          2267              bvc ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C36  0600 00A5               2268              addi.b #$A5,d0                            
Line 2269 ERROR: Invalid syntax
00001C3A                          2269              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2270 ERROR: Invalid syntax
00001C3A                          2270              bmi ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2271 ERROR: Invalid syntax
00001C3A                          2271              bcc ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2272 ERROR: Invalid syntax
00001C3A                          2272              bvc ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C3A  0C00 002D               2273              cmpi.b #$2D,d0                            
Line 2274 ERROR: Invalid syntax
00001C3E                          2274              bne ADD_I_FAIL;                       ; Check Z Flag  beq/bne
00001C3E                          2275              
00001C3E                          2276      ; EA = Dn  - WORD
00001C3E  203C 12345678           2277              move.l #$12345678,d0      ; populate test data
00001C44  0640 0000               2278              addi.w #0,d0                          
Line 2279 ERROR: Invalid syntax
00001C48                          2279              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2280 ERROR: Invalid syntax
00001C48                          2280              bmi ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2281 ERROR: Invalid syntax
00001C48                          2281              bcs ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2282 ERROR: Invalid syntax
00001C48                          2282              bvs ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C48  0640 7000               2283              addi.w #$7000,d0                          
Line 2284 ERROR: Invalid syntax
00001C4C                          2284              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2285 ERROR: Invalid syntax
00001C4C                          2285              bpl ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2286 ERROR: Invalid syntax
00001C4C                          2286              bcs ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2287 ERROR: Invalid syntax
00001C4C                          2287              bvc ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C4C  0640 A55A               2288              addi.w #$A55A,d0                          
Line 2289 ERROR: Invalid syntax
00001C50                          2289              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2290 ERROR: Invalid syntax
00001C50                          2290              bmi ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2291 ERROR: Invalid syntax
00001C50                          2291              bcc ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2292 ERROR: Invalid syntax
00001C50                          2292              bvc ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C50  0C40 6BD2               2293              cmpi.w #$6BD2,d0                          
Line 2294 ERROR: Invalid syntax
00001C54                          2294              bne ADD_I_FAIL;                       ; Check Z Flag  beq/bne
00001C54                          2295      
00001C54                          2296      ; EA = Dn  - LONG
00001C54  203C 12345678           2297              move.l #$12345678,d0      ; populate test data
00001C5A  0680 00000000           2298              addi.l #0,d0                          
Line 2299 ERROR: Invalid syntax
00001C60                          2299              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2300 ERROR: Invalid syntax
00001C60                          2300              bmi ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2301 ERROR: Invalid syntax
00001C60                          2301              bcs ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2302 ERROR: Invalid syntax
00001C60                          2302              bvs ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C60  0680 F0000000           2303              addi.l #$F0000000,d0                          
Line 2304 ERROR: Invalid syntax
00001C66                          2304              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2305 ERROR: Invalid syntax
00001C66                          2305              bmi ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2306 ERROR: Invalid syntax
00001C66                          2306              bcc ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2307 ERROR: Invalid syntax
00001C66                          2307              bvs ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C66  0680 855AA55A           2308              addi.l #$855AA55A,d0                          
Line 2309 ERROR: Invalid syntax
00001C6C                          2309              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2310 ERROR: Invalid syntax
00001C6C                          2310              bpl ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2311 ERROR: Invalid syntax
00001C6C                          2311              bcs ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2312 ERROR: Invalid syntax
00001C6C                          2312              bvs ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C6C  0680 A0000000           2313              addi.l #$A0000000,d0                          
Line 2314 ERROR: Invalid syntax
00001C72                          2314              bvc ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C72  0C80 278EFBD2           2315              cmpi.l #$278EFBD2,d0                          
Line 2316 ERROR: Invalid syntax
00001C78                          2316              bne ADD_I_FAIL;                       ; Check Z Flag  beq/bne
00001C78                          2317      
00001C78                          2318      
00001C78                          2319  
00001C78                          2320      ; EA = x.L  - Byte
00001C78  207C 000F0100           2321              move.l #$000F0100,a0      ; populate test data
00001C7E  20BC 12345678           2322              move.l #$12345678,(a0)     ; populate test data
00001C84  0639 0000 000F0103      2323              addi.b #0,$000F0103                           
Line 2324 ERROR: Invalid syntax
00001C8C                          2324              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2325 ERROR: Invalid syntax
00001C8C                          2325              bmi ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2326 ERROR: Invalid syntax
00001C8C                          2326              bcs ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2327 ERROR: Invalid syntax
00001C8C                          2327              bvs ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C8C  0639 0010 000F0103      2328              addi.b #$10,$000F0103                         
Line 2329 ERROR: Invalid syntax
00001C94                          2329              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2330 ERROR: Invalid syntax
00001C94                          2330              bpl ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2331 ERROR: Invalid syntax
00001C94                          2331              bcs ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2332 ERROR: Invalid syntax
00001C94                          2332              bvc ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C94  0639 00A5 000F0103      2333              addi.b #$A5,$000F0103                         
Line 2334 ERROR: Invalid syntax
00001C9C                          2334              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2335 ERROR: Invalid syntax
00001C9C                          2335              bmi ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2336 ERROR: Invalid syntax
00001C9C                          2336              bcc ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2337 ERROR: Invalid syntax
00001C9C                          2337              bvc ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001C9C  0C39 002D 000F0103      2338              cmpi.b #$2D,$000F0103                         
Line 2339 ERROR: Invalid syntax
00001CA4                          2339              bne ADD_I_FAIL;                       ; Check Z Flag  beq/bne
00001CA4                          2340              
00001CA4                          2341      ; EA = x.L- WORD
00001CA4  207C 000F0100           2342              move.l #$000F0100,a0      ; populate test data
00001CAA  20BC 12345678           2343              move.l #$12345678,(a0)     ; populate test data
00001CB0  0679 0000 000F0100      2344              addi.w #0,$000F0100                           
Line 2345 ERROR: Invalid syntax
00001CB8                          2345              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2346 ERROR: Invalid syntax
00001CB8                          2346              bmi ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2347 ERROR: Invalid syntax
00001CB8                          2347              bcs ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2348 ERROR: Invalid syntax
00001CB8                          2348              bvs ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001CB8  0679 7000 000F0100      2349              addi.w #$7000,$000F0100                           
Line 2350 ERROR: Invalid syntax
00001CC0                          2350              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2351 ERROR: Invalid syntax
00001CC0                          2351              bpl ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2352 ERROR: Invalid syntax
00001CC0                          2352              bcs ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2353 ERROR: Invalid syntax
00001CC0                          2353              bvc ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001CC0  0679 A55A 000F0100      2354              addi.w #$A55A,$000F0100                           
Line 2355 ERROR: Invalid syntax
00001CC8                          2355              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2356 ERROR: Invalid syntax
00001CC8                          2356              bmi ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2357 ERROR: Invalid syntax
00001CC8                          2357              bcc ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2358 ERROR: Invalid syntax
00001CC8                          2358              bvc ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001CC8  0C79 278E 000F0100      2359              cmpi.w #$278E,$000F0100                           
Line 2360 ERROR: Invalid syntax
00001CD0                          2360              bne ADD_I_FAIL;                       ; Check Z Flag  beq/bne
00001CD0                          2361      
00001CD0                          2362      ; EA = x.L- LONG
00001CD0  23FC 12345678 000F0100  2363              move.l #$12345678,$000F0100  ; populate test data
00001CDA  06B9 00000000 000F0100  2364              addi.l #0,$000F0100                           
Line 2365 ERROR: Invalid syntax
00001CE4                          2365              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2366 ERROR: Invalid syntax
00001CE4                          2366              bmi ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2367 ERROR: Invalid syntax
00001CE4                          2367              bcs ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2368 ERROR: Invalid syntax
00001CE4                          2368              bvs ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001CE4  06B9 F0000000 000F0100  2369              addi.l #$F0000000,$000F0100                           
Line 2370 ERROR: Invalid syntax
00001CEE                          2370              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2371 ERROR: Invalid syntax
00001CEE                          2371              bmi ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2372 ERROR: Invalid syntax
00001CEE                          2372              bcc ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2373 ERROR: Invalid syntax
00001CEE                          2373              bvs ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001CEE  06B9 855AA55A 000F0100  2374              addi.l #$855AA55A,$000F0100                           
Line 2375 ERROR: Invalid syntax
00001CF8                          2375              beq ADD_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2376 ERROR: Invalid syntax
00001CF8                          2376              bpl ADD_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2377 ERROR: Invalid syntax
00001CF8                          2377              bcs ADD_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2378 ERROR: Invalid syntax
00001CF8                          2378              bvs ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001CF8  06B9 A0000000 000F0100  2379              addi.l #$A0000000,$000F0100                           
Line 2380 ERROR: Invalid syntax
00001D02                          2380              bvc ADD_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D02  0CB9 278EFBD2 000F0100  2381              cmpi.l #$278EFBD2,$000F0100                           
Line 2382 ERROR: Invalid syntax
00001D0C                          2382              bne ADD_I_FAIL;                       ; Check Z Flag  beq/bne
00001D0C                          2383      
00001D0C  307C FF00               2384              movea #TESTSTATUS,a0
00001D10  117C 0001 000E          2385              move.b #$1,$0e(a0)
00001D16  4E75                    2386              rts
00001D18                          2387  
00001D18                          2388  ADD_I_FAIL:
00001D18  307C FF00               2389      movea #TESTSTATUS,a0
00001D1C  117C 0002 000E          2390      move.b #$2,$0e(a0)
00001D22  4E75                    2391      rts
00001D24                          2392  
00001D24                          2393  ;-----------------------------------------------------------
00001D24                          2394  ;-----------------------------------------------------------
00001D24                          2395  ; OPCODE : SUB_I
00001D24                          2396  ;-----------------------------------------------------------
00001D24                          2397  ;-----------------------------------------------------------
00001D24                          2398  op_SUB_I: 
00001D24                          2399      
00001D24                          2400      ; EA = Dn  - Byte
00001D24  203C 12345678           2401              move.l #$12345678,d0      ; populate test data
00001D2A  0400 0000               2402              subi.b #0,d0                          
Line 2403 ERROR: Invalid syntax
00001D2E                          2403              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2404 ERROR: Invalid syntax
00001D2E                          2404              bmi SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2405 ERROR: Invalid syntax
00001D2E                          2405              bcs SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2406 ERROR: Invalid syntax
00001D2E                          2406              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D2E  0400 0010               2407              subi.b #$10,d0                            
Line 2408 ERROR: Invalid syntax
00001D32                          2408              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2409 ERROR: Invalid syntax
00001D32                          2409              bmi SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2410 ERROR: Invalid syntax
00001D32                          2410              bcs SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2411 ERROR: Invalid syntax
00001D32                          2411              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D32  0400 00A5               2412              subi.b #$A5,d0                            
Line 2413 ERROR: Invalid syntax
00001D36                          2413              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2414 ERROR: Invalid syntax
00001D36                          2414              bpl SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2415 ERROR: Invalid syntax
00001D36                          2415              bcc SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2416 ERROR: Invalid syntax
00001D36                          2416              bvc SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D36  0C00 00C3               2417              cmpi.b #$C3,d0                            
Line 2418 ERROR: Invalid syntax
00001D3A                          2418              bne SUB_I_FAIL;                       ; Check Z Flag  beq/bne
00001D3A                          2419              
00001D3A                          2420      ; EA = Dn  - WORD
00001D3A  203C 12345678           2421              move.l #$12345678,d0      ; populate test data
00001D40  0440 0000               2422              subi.w #0,d0                          
Line 2423 ERROR: Invalid syntax
00001D44                          2423              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2424 ERROR: Invalid syntax
00001D44                          2424              bmi SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2425 ERROR: Invalid syntax
00001D44                          2425              bcs SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2426 ERROR: Invalid syntax
00001D44                          2426              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D44  0440 7000               2427              subi.w #$7000,d0                          
Line 2428 ERROR: Invalid syntax
00001D48                          2428              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2429 ERROR: Invalid syntax
00001D48                          2429              bpl SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2430 ERROR: Invalid syntax
00001D48                          2430              bcc SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2431 ERROR: Invalid syntax
00001D48                          2431              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D48  0440 A55A               2432              subi.w #$A55A,d0                          
Line 2433 ERROR: Invalid syntax
00001D4C                          2433              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2434 ERROR: Invalid syntax
00001D4C                          2434              bmi SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2435 ERROR: Invalid syntax
00001D4C                          2435              bcs SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2436 ERROR: Invalid syntax
00001D4C                          2436              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D4C  0C40 411E               2437              cmpi.w #$411E,d0                          
Line 2438 ERROR: Invalid syntax
00001D50                          2438              bne SUB_I_FAIL;                       ; Check Z Flag  beq/bne
00001D50                          2439      
00001D50                          2440      ; EA = Dn  - LONG
00001D50  203C 12345678           2441              move.l #$12345678,d0      ; populate test data
00001D56  0480 00000000           2442              subi.l #0,d0                          
Line 2443 ERROR: Invalid syntax
00001D5C                          2443              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2444 ERROR: Invalid syntax
00001D5C                          2444              bmi SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2445 ERROR: Invalid syntax
00001D5C                          2445              bcs SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2446 ERROR: Invalid syntax
00001D5C                          2446              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D5C  0480 F0000000           2447              subi.l #$F0000000,d0                          
Line 2448 ERROR: Invalid syntax
00001D62                          2448              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2449 ERROR: Invalid syntax
00001D62                          2449              bmi SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2450 ERROR: Invalid syntax
00001D62                          2450              bcc SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2451 ERROR: Invalid syntax
00001D62                          2451              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D62  0480 855AA55A           2452              subi.l #$855AA55A,d0                          
Line 2453 ERROR: Invalid syntax
00001D68                          2453              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2454 ERROR: Invalid syntax
00001D68                          2454              bpl SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2455 ERROR: Invalid syntax
00001D68                          2455              bcc SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2456 ERROR: Invalid syntax
00001D68                          2456              bvc SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D68  0480 A0000000           2457              subi.l #$A0000000,d0                          
Line 2458 ERROR: Invalid syntax
00001D6E                          2458              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D6E  0C80 FCD9B11E           2459              cmpi.l #$FCD9B11E,d0                          
Line 2460 ERROR: Invalid syntax
00001D74                          2460              bne SUB_I_FAIL;                       ; Check Z Flag  beq/bne
00001D74                          2461      
00001D74                          2462      
00001D74                          2463  
00001D74                          2464      ; EA = x.L  - Byte
00001D74  207C 000F0100           2465              move.l #$000F0100,a0      ; populate test data
00001D7A  20BC 12345678           2466              move.l #$12345678,(a0)     ; populate test data
00001D80  0439 0000 000F0103      2467              subi.b #0,$000F0103                           
Line 2468 ERROR: Invalid syntax
00001D88                          2468              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2469 ERROR: Invalid syntax
00001D88                          2469              bmi SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2470 ERROR: Invalid syntax
00001D88                          2470              bcs SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2471 ERROR: Invalid syntax
00001D88                          2471              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D88  0439 0010 000F0103      2472              subi.b #$10,$000F0103                         
Line 2473 ERROR: Invalid syntax
00001D90                          2473              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2474 ERROR: Invalid syntax
00001D90                          2474              bmi SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2475 ERROR: Invalid syntax
00001D90                          2475              bcs SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2476 ERROR: Invalid syntax
00001D90                          2476              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D90  0439 00A5 000F0103      2477              subi.b #$A5,$000F0103                         
Line 2478 ERROR: Invalid syntax
00001D98                          2478              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2479 ERROR: Invalid syntax
00001D98                          2479              bpl SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2480 ERROR: Invalid syntax
00001D98                          2480              bcc SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2481 ERROR: Invalid syntax
00001D98                          2481              bvc SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001D98  0C39 00C3 000F0103      2482              cmpi.b #$C3,$000F0103                         
Line 2483 ERROR: Invalid syntax
00001DA0                          2483              bne SUB_I_FAIL;                       ; Check Z Flag  beq/bne
00001DA0                          2484              
00001DA0                          2485      ; EA = x.L- WORD
00001DA0  207C 000F0100           2486              move.l #$000F0100,a0      ; populate test data
00001DA6  20BC 12345678           2487              move.l #$12345678,(a0)     ; populate test data
00001DAC  0479 0000 000F0100      2488              subi.w #0,$000F0100                           
Line 2489 ERROR: Invalid syntax
00001DB4                          2489              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2490 ERROR: Invalid syntax
00001DB4                          2490              bmi SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2491 ERROR: Invalid syntax
00001DB4                          2491              bcs SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2492 ERROR: Invalid syntax
00001DB4                          2492              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001DB4  0479 7000 000F0100      2493              subi.w #$7000,$000F0100                           
Line 2494 ERROR: Invalid syntax
00001DBC                          2494              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2495 ERROR: Invalid syntax
00001DBC                          2495              bpl SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2496 ERROR: Invalid syntax
00001DBC                          2496              bcc SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2497 ERROR: Invalid syntax
00001DBC                          2497              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001DBC  0479 A55A 000F0100      2498              subi.w #$A55A,$000F0100                           
Line 2499 ERROR: Invalid syntax
00001DC4                          2499              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2500 ERROR: Invalid syntax
00001DC4                          2500              bpl SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2501 ERROR: Invalid syntax
00001DC4                          2501              bcc SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2502 ERROR: Invalid syntax
00001DC4                          2502              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001DC4  0C79 FCDA 000F0100      2503              cmpi.w #$FCDA,$000F0100                           
Line 2504 ERROR: Invalid syntax
00001DCC                          2504              bne SUB_I_FAIL;                       ; Check Z Flag  beq/bne
00001DCC                          2505      
00001DCC                          2506      ; EA = x.L- LONG
00001DCC  23FC 12345678 000F0100  2507              move.l #$12345678,$000F0100  ; populate test data
00001DD6  04B9 00000000 000F0100  2508              subi.l #0,$000F0100                           
Line 2509 ERROR: Invalid syntax
00001DE0                          2509              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2510 ERROR: Invalid syntax
00001DE0                          2510              bmi SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2511 ERROR: Invalid syntax
00001DE0                          2511              bcs SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2512 ERROR: Invalid syntax
00001DE0                          2512              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001DE0  04B9 F0000000 000F0100  2513              subi.l #$F0000000,$000F0100                           
Line 2514 ERROR: Invalid syntax
00001DEA                          2514              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2515 ERROR: Invalid syntax
00001DEA                          2515              bmi SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2516 ERROR: Invalid syntax
00001DEA                          2516              bcc SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2517 ERROR: Invalid syntax
00001DEA                          2517              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001DEA  04B9 855AA55A 000F0100  2518              subi.l #$855AA55A,$000F0100                           
Line 2519 ERROR: Invalid syntax
00001DF4                          2519              beq SUB_I_FAIL;                       ; Check Z Flag  beq/bne
Line 2520 ERROR: Invalid syntax
00001DF4                          2520              bpl SUB_I_FAIL;                       ; Check N Flag  bmi/bpl
Line 2521 ERROR: Invalid syntax
00001DF4                          2521              bcc SUB_I_FAIL;                       ; Check C Flag  bcc/bcs
Line 2522 ERROR: Invalid syntax
00001DF4                          2522              bvc SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001DF4  04B9 A0000000 000F0100  2523              subi.l #$A0000000,$000F0100                           
Line 2524 ERROR: Invalid syntax
00001DFE                          2524              bvs SUB_I_FAIL;                       ; Check V Flag  bvc/bvs
00001DFE  0CB9 FCD9B11E 000F0100  2525              cmpi.l #$FCD9B11E,$000F0100                           
Line 2526 ERROR: Invalid syntax
00001E08                          2526              bne SUB_I_FAIL;                       ; Check Z Flag  beq/bne
00001E08                          2527              
00001E08  307C FF00               2528              movea #TESTSTATUS,a0
00001E0C  117C 0001 000F          2529              move.b #$1,$0f(a0)
00001E12  4E75                    2530              rts
00001E14                          2531      
00001E14                          2532  SUB_I_FAIL:
00001E14  307C FF00               2533      movea #TESTSTATUS,a0
00001E18  117C 0002 000F          2534      move.b #$2,$0f(a0) 
00001E1E  4E75                    2535      rts
00001E20                          2536  ;-----------------------------------------------------------
00001E20                          2537  ;-----------------------------------------------------------
00001E20                          2538  ; OPCODE : MOVE
00001E20                          2539  ;-----------------------------------------------------------
00001E20                          2540  ;-----------------------------------------------------------
00001E20                          2541  op_MOVE: 
00001E20  203C 11223344           2542              move.l #$11223344,d0
00001E26  223C 55667788           2543              move.l #$55667788,d1
00001E2C  243C 8899AABB           2544              move.l #$8899aabb,d2
00001E32  263C CCDDEEFF           2545              move.l #$ccddeeff,d3
00001E38  7800                    2546              move.l #$00000000,d4
00001E3A  7A00                    2547              move.l #$00000000,d5
00001E3C  7C00                    2548              move.l #$00000000,d6
00001E3E  7E00                    2549              move.l #$00000000,d7         
00001E40  207C 44332211           2550              move.l #$44332211,a0
00001E46  227C 88776655           2551              move.l #$88776655,a1
00001E4C  247C BBAA9988           2552              move.l #$bbaa9988,a2
00001E52  267C FFEEDDCC           2553              move.l #$ffeeddcc,a3
00001E58                          2554              
00001E58  1800                    2555              move.b d0,d4              ; BYTE - DATA REGISTER
Line 2556 ERROR: Invalid syntax
00001E5A                          2556              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2557 ERROR: Invalid syntax
00001E5A                          2557              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001E5A  0C84 00000044           2558              cmpi.l #$00000044,d4                          
Line 2559 ERROR: Invalid syntax
00001E60                          2559              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001E60                          2560          
00001E60  3A01                    2561              move.w d1,d5              ; WORD - DATA REGISTER
Line 2562 ERROR: Invalid syntax
00001E62                          2562              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2563 ERROR: Invalid syntax
00001E62                          2563              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001E62  0C85 00007788           2564              cmpi.l #$00007788,d5                          
Line 2565 ERROR: Invalid syntax
00001E68                          2565              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001E68                          2566          
00001E68  2C02                    2567              move.l d2,d6              ; LONG - DATA REGISTER
Line 2568 ERROR: Invalid syntax
00001E6A                          2568              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2569 ERROR: Invalid syntax
00001E6A                          2569              bpl MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001E6A  0C86 8899AABB           2570              cmpi.l #$8899aabb,d6                          
Line 2571 ERROR: Invalid syntax
00001E70                          2571              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001E70                          2572  
00001E70  3A09                    2573              move.w a1,d5              ; WORD - ADDRESS REGISTER
Line 2574 ERROR: Invalid syntax
00001E72                          2574              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2575 ERROR: Invalid syntax
00001E72                          2575              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001E72  0C85 00006655           2576              cmpi.l #$00006655,d5                          
Line 2577 ERROR: Invalid syntax
00001E78                          2577              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001E78                          2578          
00001E78  2C0A                    2579              move.l a2,d6              ; LONG - ADDRESS REGISTER
Line 2580 ERROR: Invalid syntax
00001E7A                          2580              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2581 ERROR: Invalid syntax
00001E7A                          2581              bpl MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001E7A  0C86 BBAA9988           2582              cmpi.l #$bbaa9988,d6                         
Line 2583 ERROR: Invalid syntax
00001E80                          2583              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001E80                          2584              
00001E80                          2585      
00001E80  3842                    2586              movea.w d2,a4             ; WORD - ADDRESS REGISTER as SOURCE ## MOVEA
00001E82  B9C2                    2587              cmpa.l d2,a4                          
Line 2588 ERROR: Invalid syntax
00001E84                          2588              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne ## comopare fails because A4 was sign extended
00001E84                          2589          
00001E84  2A41                    2590              movea.l d1,a5             ; LONG - ADDRESS REGISTER as SOURCE ## MOVEA
00001E86  BBC1                    2591              cmpa.l d1,a5                         
Line 2592 ERROR: Invalid syntax
00001E88                          2592              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001E88                          2593          
00001E88                          2594  
00001E88                          2595  
00001E88                          2596    ; Too mamy EA combinations to test,so we focus on a few of the more complicted EA's 
00001E88                          2597    
00001E88  203C 11223344           2598              move.l #$11223344,d0
00001E8E  223C 00010100           2599              move.l #$00010100,d1
00001E94  243C 8899AABB           2600              move.l #$8899aabb,d2
00001E9A  7601                    2601              move.l #$00000001,d3
00001E9C  7800                    2602              move.l #$00000000,d4
00001E9E  7A00                    2603              move.l #$00000000,d5
00001EA0  7C00                    2604              move.l #$00000000,d6
00001EA2  7E00                    2605              move.l #$00000000,d7         
00001EA4  207C 00000000           2606              move.l #$00000000,a0
00001EAA  227C 00010100           2607              move.l #$00010100,a1
00001EB0                          2608  
00001EB0                          2609      ; x(An,AL) --> x.L
00001EB0  11BC 005A 9804          2610              move.b #$5A,4(a0,a1.l)    ; BYTE 
00001EB6  47F0 9804               2611              lea 4(a0,a1.l),a3    
00001EBA  13F0 9804 00010105      2612              move.b 4(a0,a1.l),$00010105    
Line 2613 ERROR: Invalid syntax
00001EC2                          2613              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2614 ERROR: Invalid syntax
00001EC2                          2614              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001EC2  0C30 005A 9805          2615              cmpi.b #$5A,5(a0,a1.l)                            
Line 2616 ERROR: Invalid syntax
00001EC8                          2616              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001EC8                          2617                  
00001EC8                          2618      ; x.L --> n(An,Dw)
00001EC8  11B9 00010105 1007      2619  MOVE2:      move.b  $00010105,7(a0,d1.w)    ; BYTE  
Line 2620 ERROR: Invalid syntax
00001ED0                          2620              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2621 ERROR: Invalid syntax
00001ED0                          2621              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001ED0  0C30 005A 1007          2622              cmpi.b #$5A,7(a0,d1.w)                            
Line 2623 ERROR: Invalid syntax
00001ED6                          2623              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001ED6                          2624                  
00001ED6                          2625      ; x(PC,Ds) --> x.w
00001ED6  11FB 3056 0100          2626              move.b  MOVE1(pc,d3),$0100 ; BYTE  
Line 2627 ERROR: Invalid syntax
00001EDC                          2627              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2628 ERROR: Invalid syntax
00001EDC                          2628              bpl MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001EDC  0C38 00B9 1EC9          2629              cmpi.b #$B9,1+MOVE2                            
Line 2630 ERROR: Invalid syntax
00001EE2                          2630              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001EE2                          2631                      
00001EE2                          2632      ; #x -->    n(An,AL)
00001EE2  11BC 0078 1007          2633              move.b  #$78,7(a0,d1.w)    ; BYTE  
Line 2634 ERROR: Invalid syntax
00001EE8                          2634              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2635 ERROR: Invalid syntax
00001EE8                          2635              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001EE8  0C30 0078 1007          2636              cmpi.b #$78,7(a0,d1.w)                         
Line 2637 ERROR: Invalid syntax
00001EEE                          2637              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001EEE                          2638          
00001EEE  203C 11223344           2639              move.l #$11223344,d0
00001EF4  223C 00010100           2640              move.l #$00010100,d1
00001EFA  243C 8899AABB           2641              move.l #$8899aabb,d2
00001F00  7602                    2642              move.l #$00000002,d3
00001F02  7800                    2643              move.l #$00000000,d4
00001F04  7A00                    2644              move.l #$00000000,d5
00001F06  7C00                    2645              move.l #$00000000,d6
00001F08  7E00                    2646              move.l #$00000000,d7         
00001F0A  207C 00000000           2647              move.l #$00000000,a0
00001F10  227C 00010100           2648              move.l #$00010100,a1
00001F16                          2649              
00001F16                          2650      ; x(An,AL) --> x.L
00001F16  31BC 5A5A 9804          2651              move.w #$5A5A,4(a0,a1.l)    ; WORD  
00001F1C  49F0 9804               2652              lea 4(a0,a1.l),a4    
00001F20  33F0 9804 00010104      2653              move.w 4(a0,a1.l),$00010104    
Line 2654 ERROR: Invalid syntax
00001F28                          2654              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2655 ERROR: Invalid syntax
00001F28                          2655              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001F28  0C70 5A5A 9804          2656              cmpi.w #$5A5A,4(a0,a1.l)                          
Line 2657 ERROR: Invalid syntax
00001F2E                          2657              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001F2E                          2658                  
00001F2E                          2659      ; x.L --> n(An,Dw)
00001F2E  31B9 00010104 1006      2660  MOVE1:      move.w  $00010104,6(a0,d1.w)    ; WORD  
Line 2661 ERROR: Invalid syntax
00001F36                          2661              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2662 ERROR: Invalid syntax
00001F36                          2662              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001F36  0C70 5A5A 1006          2663              cmpi.w #$5A5A,6(a0,d1.w)                          
Line 2664 ERROR: Invalid syntax
00001F3C                          2664              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001F3C                          2665                  
00001F3C                          2666      ; x(PC,Ds) --> x.w
00001F3C  31FB 30F0 0100          2667              move.w  MOVE1(pc,d3),$0100 ; WORD  
Line 2668 ERROR: Invalid syntax
00001F42                          2668              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2669 ERROR: Invalid syntax
00001F42                          2669              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001F42  0C78 6700 1F36          2670              cmpi.w #$6700,8+MOVE1                 
Line 2671 ERROR: Invalid syntax
00001F48                          2671              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001F48                          2672                      
00001F48                          2673      ; #x -->    n(An,AL)
00001F48  31BC 7878 1006          2674              move.w  #$7878,6(a0,d1.w)    ; WORD  
Line 2675 ERROR: Invalid syntax
00001F4E                          2675              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2676 ERROR: Invalid syntax
00001F4E                          2676              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001F4E  0C70 7878 1006          2677              cmpi.w #$7878,6(a0,d1.w)                           
Line 2678 ERROR: Invalid syntax
00001F54                          2678              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001F54                          2679          
00001F54                          2680  ; ---
00001F54                          2681          
00001F54  203C 11223344           2682              move.l #$11223344,d0
00001F5A  223C 00010100           2683              move.l #$00010100,d1
00001F60  243C 8899AABB           2684              move.l #$8899aabb,d2
00001F66  7602                    2685              move.l #$00000002,d3
00001F68  7800                    2686              move.l #$00000000,d4
00001F6A  7A00                    2687              move.l #$00000000,d5
00001F6C  7C00                    2688              move.l #$00000000,d6
00001F6E  7E00                    2689              move.l #$00000000,d7         
00001F70  207C 00000000           2690              move.l #$00000000,a0
00001F76  227C 00010100           2691              move.l #$00010100,a1
00001F7C                          2692              
00001F7C                          2693      ; x(An,AL) --> x.L
00001F7C  21BC 5A5A1234 9804      2694              move.l #$5A5A1234,4(a0,a1.l)    ; LONG  
00001F84  49F0 9804               2695              lea 4(a0,a1.l),a4    
00001F88  23F0 9804 00010104      2696              move.l 4(a0,a1.l),$00010104    
Line 2697 ERROR: Invalid syntax
00001F90                          2697              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2698 ERROR: Invalid syntax
00001F90                          2698              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001F90  0CB0 5A5A1234 9804      2699              cmpi.l #$5A5A1234,4(a0,a1.l)                          
Line 2700 ERROR: Invalid syntax
00001F98                          2700              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001F98                          2701                  
00001F98                          2702      ; x.L --> n(An,Dw)
00001F98  21B9 00010104 1006      2703  MOVE3:      move.l  $00010104,6(a0,d1.w)    ; LONG  
Line 2704 ERROR: Invalid syntax
00001FA0                          2704              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2705 ERROR: Invalid syntax
00001FA0                          2705              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001FA0  0CB0 5A5A1234 1006      2706              cmpi.l #$5A5A1234,6(a0,d1.w)                          
Line 2707 ERROR: Invalid syntax
00001FA8                          2707              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001FA8                          2708                  
00001FA8                          2709      ; x(PC,Ds) --> x.w
00001FA8  21FB 30EE 0100          2710              move.l  MOVE3(pc,d3),$0100 ; LONG  
Line 2711 ERROR: Invalid syntax
00001FAE                          2711              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2712 ERROR: Invalid syntax
00001FAE                          2712              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001FAE  0CB8 67426B40 1FA0      2713              cmpi.l #$67426b40,8+MOVE3           
Line 2714 ERROR: Invalid syntax
00001FB6                          2714              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001FB6                          2715                      
00001FB6                          2716      ; #x -->    n(An,AL)
00001FB6  21BC 78782323 1006      2717              move.l  #$78782323,6(a0,d1.w)    ; LONG  
Line 2718 ERROR: Invalid syntax
00001FBE                          2718              beq MOVE_FAIL;                       ; Check Z Flag  beq/bne
Line 2719 ERROR: Invalid syntax
00001FBE                          2719              bmi MOVE_FAIL;                       ; Check N Flag  bmi/bpl
00001FBE  0CB0 78782323 1006      2720              cmpi.l #$78782323,6(a0,d1.w)                           
Line 2721 ERROR: Invalid syntax
00001FC6                          2721              bne MOVE_FAIL;                       ; Check Z Flag  beq/bne
00001FC6                          2722          
00001FC6                          2723  
00001FC6  307C FF00               2724           movea #TESTSTATUS,a0
00001FCA  117C 0001 0010          2725           move.b #$1,$10(a0)        
00001FD0  4E75                    2726           rts
00001FD2                          2727  
00001FD2                          2728  MOVE_FAIL:
00001FD2  307C FF00               2729      movea #TESTSTATUS,a0
00001FD6  117C 0002 0010          2730      move.b #$2,$10(a0)
00001FDC  4E75                    2731      rts
00001FDE                          2732  
00001FDE                          2733  ;-----------------------------------------------------------
00001FDE                          2734  ;-----------------------------------------------------------
00001FDE                          2735  ; OPCODE : MOVE_xxx_FLAGS
00001FDE                          2736  ;-----------------------------------------------------------
00001FDE                          2737  ;-----------------------------------------------------------
00001FDE                          2738  op_MOVE_xxx_FLAGS: 
00001FDE                          2739  
00001FDE                          2740      ; Move_To_SR
00001FDE                          2741      
00001FDE                          2742      ; Dn
00001FDE                          2743      
00001FDE  303C 2FFF               2744              move.w #$2FFF,d0
00001FE2  46C0                    2745              move d0,SR 
Line 2746 ERROR: Invalid syntax
00001FE4                          2746              bpl MOVE_FLAGS_FAIL;           ; branch if Z clear  
Line 2747 ERROR: Invalid syntax
00001FE4                          2747              bne MOVE_FLAGS_FAIL;           ; branch if N clear
Line 2748 ERROR: Invalid syntax
00001FE4                          2748              bvc MOVE_FLAGS_FAIL;           ; branch if V clear 
Line 2749 ERROR: Invalid syntax
00001FE4                          2749              bcc MOVE_FLAGS_FAIL;           ; branch if C clear 
00001FE4  303C 2F00               2750              move.w #$2F00,d0
00001FE8  44C0                    2751              move d0,CCR 
Line 2752 ERROR: Invalid syntax
00001FEA                          2752              beq MOVE_FLAGS_FAIL;           ; branch if Z set  
Line 2753 ERROR: Invalid syntax
00001FEA                          2753              bmi MOVE_FLAGS_FAIL;           ; branch if N set  
Line 2754 ERROR: Invalid syntax
00001FEA                          2754              bvs MOVE_FLAGS_FAIL;           ; branch if V set  
Line 2755 ERROR: Invalid syntax
00001FEA                          2755              bcs MOVE_FLAGS_FAIL;           ; branch if C set  
00001FEA                          2756      
00001FEA  303C 2000               2757              move.w #$2000,d0
00001FEE  46C0                    2758              move d0,SR 
Line 2759 ERROR: Invalid syntax
00001FF0                          2759              beq MOVE_FLAGS_FAIL;           ; branch if Z set  
Line 2760 ERROR: Invalid syntax
00001FF0                          2760              bmi MOVE_FLAGS_FAIL;           ; branch if N set  
Line 2761 ERROR: Invalid syntax
00001FF0                          2761              bvs MOVE_FLAGS_FAIL;           ; branch if V set  
Line 2762 ERROR: Invalid syntax
00001FF0                          2762              bcs MOVE_FLAGS_FAIL;           ; branch if C set  
00001FF0                          2763         
00001FF0                          2764      ; (An)
00001FF0  207C 00000100           2765              move.l #$00000100,a0
00001FF6  30BC 2FFF               2766              move.w #$2FFF,(a0)
00001FFA  46D0                    2767              move (a0),SR 
Line 2768 ERROR: Invalid syntax
00001FFC                          2768              bpl MOVE_FLAGS_FAIL;           ; branch if Z clear  
Line 2769 ERROR: Invalid syntax
00001FFC                          2769              bne MOVE_FLAGS_FAIL;           ; branch if N clear
Line 2770 ERROR: Invalid syntax
00001FFC                          2770              bvc MOVE_FLAGS_FAIL;           ; branch if V clear 
Line 2771 ERROR: Invalid syntax
00001FFC                          2771              bcc MOVE_FLAGS_FAIL;           ; branch if C clear 
00001FFC                          2772      
00001FFC  30BC 2000               2773              move.w #$2000,(a0)
00002000  46D0                    2774              move (a0),SR 
Line 2775 ERROR: Invalid syntax
00002002                          2775              beq MOVE_FLAGS_FAIL;           ; branch if Z set  
Line 2776 ERROR: Invalid syntax
00002002                          2776              bmi MOVE_FLAGS_FAIL;           ; branch if N set  
Line 2777 ERROR: Invalid syntax
00002002                          2777              bvs MOVE_FLAGS_FAIL;           ; branch if V set  
Line 2778 ERROR: Invalid syntax
00002002                          2778              bcs MOVE_FLAGS_FAIL;           ; branch if C set  
00002002                          2779              
00002002                          2780      ; (An)+
00002002  207C 00000100           2781              move.l #$00000100,a0
00002008  30BC 2FFF               2782              move.w #$2FFF,(a0)
0000200C  46D8                    2783              move (a0)+,SR 
Line 2784 ERROR: Invalid syntax
0000200E                          2784              bpl MOVE_FLAGS_FAIL;           ; branch if Z clear  
Line 2785 ERROR: Invalid syntax
0000200E                          2785              bne MOVE_FLAGS_FAIL;           ; branch if N clear
Line 2786 ERROR: Invalid syntax
0000200E                          2786              bvc MOVE_FLAGS_FAIL;           ; branch if V clear 
Line 2787 ERROR: Invalid syntax
0000200E                          2787              bcc MOVE_FLAGS_FAIL;           ; branch if C clear 
0000200E                          2788      
0000200E  30BC 2000               2789              move.w #$2000,(a0)
00002012  46D8                    2790              move (a0)+,SR 
Line 2791 ERROR: Invalid syntax
00002014                          2791              beq MOVE_FLAGS_FAIL;           ; branch if Z set  
Line 2792 ERROR: Invalid syntax
00002014                          2792              bmi MOVE_FLAGS_FAIL;           ; branch if N set  
Line 2793 ERROR: Invalid syntax
00002014                          2793              bvs MOVE_FLAGS_FAIL;           ; branch if V set  
Line 2794 ERROR: Invalid syntax
00002014                          2794              bcs MOVE_FLAGS_FAIL;           ; branch if C set  
00002014                          2795                   
00002014                          2796      ; -(An)
00002014  207C 00000102           2797              move.l #$00000102,a0
0000201A  30BC 2FFF               2798              move.w #$2FFF,(a0)
0000201E  46D8                    2799              move (a0)+,SR 
Line 2800 ERROR: Invalid syntax
00002020                          2800              bpl MOVE_FLAGS_FAIL;           ; branch if Z clear  
Line 2801 ERROR: Invalid syntax
00002020                          2801              bne MOVE_FLAGS_FAIL;           ; branch if N clear
Line 2802 ERROR: Invalid syntax
00002020                          2802              bvc MOVE_FLAGS_FAIL;           ; branch if V clear 
Line 2803 ERROR: Invalid syntax
00002020                          2803              bcc MOVE_FLAGS_FAIL;           ; branch if C clear 
00002020                          2804      
00002020  30BC 2000               2805              move.w #$2000,(a0)
00002024  46D8                    2806              move (a0)+,SR 
Line 2807 ERROR: Invalid syntax
00002026                          2807              beq MOVE_FLAGS_FAIL;           ; branch if Z set  
Line 2808 ERROR: Invalid syntax
00002026                          2808              bmi MOVE_FLAGS_FAIL;           ; branch if N set  
Line 2809 ERROR: Invalid syntax
00002026                          2809              bvs MOVE_FLAGS_FAIL;           ; branch if V set  
Line 2810 ERROR: Invalid syntax
00002026                          2810              bcs MOVE_FLAGS_FAIL;           ; branch if C set  
00002026                          2811                              
00002026                          2812      ; n(An)
00002026  207C 00000102           2813              move.l #$00000102,a0
0000202C  317C 2FFF 0002          2814              move.w #$2FFF,2(a0)
00002032  46E8 0002               2815              move 2(a0),SR 
Line 2816 ERROR: Invalid syntax
00002036                          2816              bpl MOVE_FLAGS_FAIL;           ; branch if Z clear  
Line 2817 ERROR: Invalid syntax
00002036                          2817              bne MOVE_FLAGS_FAIL;           ; branch if N clear
Line 2818 ERROR: Invalid syntax
00002036                          2818              bvc MOVE_FLAGS_FAIL;           ; branch if V clear 
Line 2819 ERROR: Invalid syntax
00002036                          2819              bcc MOVE_FLAGS_FAIL;           ; branch if C clear 
00002036                          2820      
00002036  317C 2000 0002          2821              move.w #$2000,2(a0)
0000203C  46E8 0002               2822              move 2(a0),SR 
Line 2823 ERROR: Invalid syntax
00002040                          2823              beq MOVE_FLAGS_FAIL;           ; branch if Z set  
Line 2824 ERROR: Invalid syntax
00002040                          2824              bmi MOVE_FLAGS_FAIL;           ; branch if N set  
Line 2825 ERROR: Invalid syntax
00002040                          2825              bvs MOVE_FLAGS_FAIL;           ; branch if V set  
Line 2826 ERROR: Invalid syntax
00002040                          2826              bcs MOVE_FLAGS_FAIL;           ; branch if C set  
00002040                          2827                                      
00002040                          2828      ; n(An,Rn.l)
00002040  207C 00000100           2829              move.l #$00000100,a0
00002046  7002                    2830              move.l #$00000002,d0
00002048  31BC 2FFF 0802          2831              move.w #$2FFF,2(a0,d0.l)
0000204E  46F0 0802               2832              move 2(a0,d0.l),SR 
Line 2833 ERROR: Invalid syntax
00002052                          2833              bpl MOVE_FLAGS_FAIL;           ; branch if Z clear  
Line 2834 ERROR: Invalid syntax
00002052                          2834              bne MOVE_FLAGS_FAIL;           ; branch if N clear
Line 2835 ERROR: Invalid syntax
00002052                          2835              bvc MOVE_FLAGS_FAIL;           ; branch if V clear 
Line 2836 ERROR: Invalid syntax
00002052                          2836              bcc MOVE_FLAGS_FAIL;           ; branch if C clear 
00002052                          2837      
00002052  31BC 2000 0802          2838              move.w #$2000,2(a0,d0.l)
00002058  46F0 0802               2839              move 2(a0,d0.l),SR 
Line 2840 ERROR: Invalid syntax
0000205C                          2840              beq MOVE_FLAGS_FAIL;           ; branch if Z set  
Line 2841 ERROR: Invalid syntax
0000205C                          2841              bmi MOVE_FLAGS_FAIL;           ; branch if N set  
Line 2842 ERROR: Invalid syntax
0000205C                          2842              bvs MOVE_FLAGS_FAIL;           ; branch if V set  
Line 2843 ERROR: Invalid syntax
0000205C                          2843              bcs MOVE_FLAGS_FAIL;           ; branch if C set  
0000205C                          2844                                                 
0000205C                          2845      ; x.W
0000205C  31FC 2FFF 0100          2846              move.w #$2FFF,$0100
00002062  46F8 0100               2847              move $0100,SR 
Line 2848 ERROR: Invalid syntax
00002066                          2848              bpl MOVE_FLAGS_FAIL;           ; branch if Z clear  
Line 2849 ERROR: Invalid syntax
00002066                          2849              bne MOVE_FLAGS_FAIL;           ; branch if N clear
Line 2850 ERROR: Invalid syntax
00002066                          2850              bvc MOVE_FLAGS_FAIL;           ; branch if V clear 
Line 2851 ERROR: Invalid syntax
00002066                          2851              bcc MOVE_FLAGS_FAIL;           ; branch if C clear 
00002066                          2852      
00002066  31FC 2000 0100          2853              move.w #$2000,$0100
0000206C  46F8 0100               2854              move $0100,SR 
Line 2855 ERROR: Invalid syntax
00002070                          2855              beq MOVE_FLAGS_FAIL;           ; branch if Z set  
Line 2856 ERROR: Invalid syntax
00002070                          2856              bmi MOVE_FLAGS_FAIL;           ; branch if N set  
Line 2857 ERROR: Invalid syntax
00002070                          2857              bvs MOVE_FLAGS_FAIL;           ; branch if V set  
Line 2858 ERROR: Invalid syntax
00002070                          2858              bcs MOVE_FLAGS_FAIL;           ; branch if C set  
00002070                          2859                                                           
00002070                          2860      ; x.L
00002070  33FC 2FFF 00010100      2861              move.w #$2FFF,$00010100
00002078  46F9 00010100           2862              move $00010100,SR 
Line 2863 ERROR: Invalid syntax
0000207E                          2863              bpl MOVE_FLAGS_FAIL;           ; branch if Z clear  
Line 2864 ERROR: Invalid syntax
0000207E                          2864              bne MOVE_FLAGS_FAIL;           ; branch if N clear
Line 2865 ERROR: Invalid syntax
0000207E                          2865              bvc MOVE_FLAGS_FAIL;           ; branch if V clear 
Line 2866 ERROR: Invalid syntax
0000207E                          2866              bcc MOVE_FLAGS_FAIL;           ; branch if C clear 
0000207E                          2867      
0000207E  33FC 2000 00010100      2868  MOVE4:      move.w #$2000,$00010100
00002086  46F9 00010100           2869              move $00010100,SR 
Line 2870 ERROR: Invalid syntax
0000208C                          2870              beq MOVE_FLAGS_FAIL;           ; branch if Z set  
Line 2871 ERROR: Invalid syntax
0000208C                          2871              bmi MOVE_FLAGS_FAIL;           ; branch if N set  
Line 2872 ERROR: Invalid syntax
0000208C                          2872              bvs MOVE_FLAGS_FAIL;           ; branch if V set  
Line 2873 ERROR: Invalid syntax
0000208C                          2873              bcs MOVE_FLAGS_FAIL;           ; branch if C set  
0000208C                          2874                                                                     
0000208C                          2875      ; x(PC)
0000208C  46FA FFF2               2876              move MOVE4+2(pc),SR 
Line 2877 ERROR: Invalid syntax
00002090                          2877              beq MOVE_FLAGS_FAIL;           ; branch if Z set  
Line 2878 ERROR: Invalid syntax
00002090                          2878              bmi MOVE_FLAGS_FAIL;           ; branch if N set  
Line 2879 ERROR: Invalid syntax
00002090                          2879              bvs MOVE_FLAGS_FAIL;           ; branch if V set  
Line 2880 ERROR: Invalid syntax
00002090                          2880              bcs MOVE_FLAGS_FAIL;           ; branch if C set 
00002090                          2881                                                                     
00002090                          2882      ; x(PC,d0.l)
00002090  7000                    2883              move.l #$00000000,d0
00002092  46FB 08EC               2884              move MOVE4+2(pc,d0.l),SR 
Line 2885 ERROR: Invalid syntax
00002096                          2885              beq MOVE_FLAGS_FAIL;           ; branch if Z set  
Line 2886 ERROR: Invalid syntax
00002096                          2886              bmi MOVE_FLAGS_FAIL;           ; branch if N set  
Line 2887 ERROR: Invalid syntax
00002096                          2887              bvs MOVE_FLAGS_FAIL;           ; branch if V set  
Line 2888 ERROR: Invalid syntax
00002096                          2888              bcs MOVE_FLAGS_FAIL;           ; branch if C set 
00002096  44FB 08E8               2889              move MOVE4+2(pc,d0.l),CCR 
Line 2890 ERROR: Invalid syntax
0000209A                          2890              beq MOVE_FLAGS_FAIL;           ; branch if Z set  
Line 2891 ERROR: Invalid syntax
0000209A                          2891              bmi MOVE_FLAGS_FAIL;           ; branch if N set  
Line 2892 ERROR: Invalid syntax
0000209A                          2892              bvs MOVE_FLAGS_FAIL;           ; branch if V set  
Line 2893 ERROR: Invalid syntax
0000209A                          2893              bcs MOVE_FLAGS_FAIL;           ; branch if C set 
0000209A                          2894                                                                     
0000209A                          2895      ; #x
0000209A  46FC 2FFF               2896              move #$2FFF,SR 
Line 2897 ERROR: Invalid syntax
0000209E                          2897              bne MOVE_FLAGS_FAIL;           ; branch if Z clear  
Line 2898 ERROR: Invalid syntax
0000209E                          2898              bpl MOVE_FLAGS_FAIL;           ; branch if N clear
Line 2899 ERROR: Invalid syntax
0000209E                          2899              bvc MOVE_FLAGS_FAIL;           ; branch if V clear 
Line 2900 ERROR: Invalid syntax
0000209E                          2900              bcc MOVE_FLAGS_FAIL;           ; branch if C clear 
0000209E                          2901              
0000209E                          2902              
0000209E                          2903              
0000209E                          2904   ; MOVE_From_SR
0000209E                          2905  
0000209E                          2906              
0000209E                          2907              
0000209E                          2908      ; Dn
0000209E  46FC 275A               2909              move #$275A,SR        ; Initial value
000020A2  40C0                    2910              move SR,d0
000020A4  0C40 271A               2911              cmpi.w #$271A,d0
Line 2912 ERROR: Invalid syntax
000020A8                          2912              bne MOVE_FLAGS_FAIL;                   ; branch if Z set  
000020A8                          2913                   
000020A8                          2914      ; (An)
000020A8  207C 00000100           2915              move.l #$00000100,a0
000020AE  46FC 275A               2916              move #$275A,SR        ; Initial value
000020B2  40D0                    2917              move SR,(a0)
000020B4  0C50 271A               2918              cmpi.w #$271A,(a0)
Line 2919 ERROR: Invalid syntax
000020B8                          2919              bne MOVE_FLAGS_FAIL;                   ; branch if Z set  
000020B8                          2920                         
000020B8                          2921      ; (An)+
000020B8  207C 00000100           2922              move.l #$00000100,a0
000020BE  46FC 257A               2923              move #$257A,SR        ; Initial value
000020C2  40D8                    2924              move SR,(a0)+
000020C4  207C 00000100           2925              move.l #$00000100,a0
000020CA  0C58 251A               2926              cmpi.w #$251A,(a0)+
Line 2927 ERROR: Invalid syntax
000020CE                          2927              bne MOVE_FLAGS_FAIL;                   ; branch if Z set  
000020CE                          2928                                     
000020CE                          2929      ; -(An)
000020CE  207C 00000102           2930              move.l #$00000102,a0
000020D4  46FC 2766               2931              move #$2766,SR        ; Initial value
000020D8  40E0                    2932              move SR,-(a0)
000020DA  207C 00000100           2933              move.l #$00000100,a0
000020E0  0C50 2706               2934              cmpi.w #$2706,(a0)
Line 2935 ERROR: Invalid syntax
000020E4                          2935              bne MOVE_FLAGS_FAIL;                   ; branch if Z set  
000020E4                          2936                                           
000020E4                          2937      ; x(An)
000020E4  207C 00000102           2938              move.l #$00000102,a0
000020EA  46FC 2733               2939              move #$2733,SR        ; Initial value
000020EE  40E8 0004               2940              move SR,4(a0)
000020F2  0C68 2713 0004          2941              cmpi.w #$2713,4(a0)
Line 2942 ERROR: Invalid syntax
000020F8                          2942              bne MOVE_FLAGS_FAIL;                   ; branch if Z set  
000020F8                          2943                                               
000020F8                          2944      ; x(An,rn)
000020F8  207C 00000102           2945              move.l #$00000102,a0
000020FE  7004                    2946              move.l #$00000004,d0
00002100  46FC 275A               2947              move #$275a,SR        ; Initial value
00002104  40F0 0804               2948              move SR,4(a0,d0.l)
00002108  0C70 271A 0804          2949              cmpi.w #$271a,4(a0,d0.l)
Line 2950 ERROR: Invalid syntax
0000210E                          2950              bne MOVE_FLAGS_FAIL;                   ; branch if Z set  
0000210E                          2951                                                          
0000210E                          2952      ; x.W
0000210E  46FC 2777               2953              move #$2777,SR        ; Initial value
00002112  40F8 0102               2954              move SR,$0102
00002116  0C78 2717 0102          2955              cmpi.w #$2717,$0102
Line 2956 ERROR: Invalid syntax
0000211C                          2956              bne MOVE_FLAGS_FAIL;                   ; branch if Z set  
0000211C                          2957                                                               
0000211C                          2958      ; x.L
0000211C  46FC 2777               2959              move #$2777,SR        ; Initial value
00002120  40F9 00010102           2960              move SR,$10102
00002126  0C79 2717 00010102      2961              cmpi.w #$2717,$10102
Line 2962 ERROR: Invalid syntax
0000212E                          2962              bne MOVE_FLAGS_FAIL;                   ; branch if Z set  
0000212E                          2963              
0000212E                          2964              
0000212E                          2965              
0000212E  46FC 2700               2966              move #$2700,SR        ; Put flags back to initial value
00002132                          2967  
00002132  307C FF00               2968              movea #TESTSTATUS,a0
00002136  117C 0001 0011          2969              move.b #$1,$11(a0)
0000213C  4E75                    2970              rts
0000213E                          2971  
0000213E                          2972  MOVE_FLAGS_FAIL: 
0000213E  307C FF00               2973      movea #TESTSTATUS,a0
00002142  117C 0002 0011          2974      move.b #$2,$11(a0)
00002148  4E75                    2975      rts
0000214A                          2976  
0000214A                          2977  ;-----------------------------------------------------------
0000214A                          2978  ;-----------------------------------------------------------
0000214A                          2979  ; OPCODE : EXT
0000214A                          2980  ;-----------------------------------------------------------
0000214A                          2981  ;-----------------------------------------------------------
0000214A                          2982  op_EXT: 
0000214A                          2983  
0000214A  707F                    2984              move.l #$0000007F,d0
0000214C  223C 00008FFF           2985              move.l #$00008FFF,d1
00002152  7400                    2986              move.l #$00000000,d2
00002154                          2987              
00002154  4880                    2988              ext.w d0
Line 2989 ERROR: Invalid syntax
00002156                          2989              bmi EXT_FAIL;                   ; Check N Flag  bmi/bpl
Line 2990 ERROR: Invalid syntax
00002156                          2990              beq EXT_FAIL;                   ; Check Z Flag  beq/bne
00002156  0C80 0000007F           2991              cmpi.l #$0000007F,d0
Line 2992 ERROR: Invalid syntax
0000215C                          2992              bne EXT_FAIL;                   ; branch if Z set  
0000215C                          2993              
0000215C  48C1                    2994              ext.l d1
Line 2995 ERROR: Invalid syntax
0000215E                          2995              bpl EXT_FAIL;                   ; Check N Flag  bmi/bpl
Line 2996 ERROR: Invalid syntax
0000215E                          2996              beq EXT_FAIL;                   ; Check Z Flag  beq/bne
0000215E  0C81 FFFF8FFF           2997              cmpi.l #$FFFF8FFF,d1
Line 2998 ERROR: Invalid syntax
00002164                          2998              bne EXT_FAIL;                   ; branch if Z set  
00002164                          2999              
00002164  48C2                    3000              ext.l d2
Line 3001 ERROR: Invalid syntax
00002166                          3001              bne EXT_FAIL;                   ; Check Z Flag  beq/bne
00002166                          3002  
00002166  307C FF00               3003              movea #TESTSTATUS,a0
0000216A  117C 0001 0012          3004              move.b #$1,$12(a0)
00002170  4E75                    3005              rts
00002172                          3006  
00002172                          3007  EXT_FAIL: 
00002172  307C FF00               3008      movea #TESTSTATUS,a0
00002176  117C 0002 0012          3009      move.b #$2,$12(a0)
0000217C  4E75                    3010      rts
0000217E                          3011               
0000217E                          3012  ;-----------------------------------------------------------
0000217E                          3013  ;-----------------------------------------------------------
0000217E                          3014  ; OPCODE : SWAP
0000217E                          3015  ;-----------------------------------------------------------
0000217E                          3016  ;-----------------------------------------------------------
0000217E                          3017  op_SWAP: 
0000217E                          3018  
0000217E  203C 12345678           3019              move.l #$12345678,d0
00002184                          3020              
00002184  4840                    3021              swap d0
Line 3022 ERROR: Invalid syntax
00002186                          3022              bmi SWAP_FAIL;                   ; Check N Flag  bmi/bpl
Line 3023 ERROR: Invalid syntax
00002186                          3023              beq SWAP_FAIL;                   ; Check Z Flag  beq/bne
00002186  0C80 56781234           3024              cmpi.l #$56781234,d0
Line 3025 ERROR: Invalid syntax
0000218C                          3025              bne SWAP_FAIL;                   ; branch if Z set  
0000218C                          3026  
0000218C  307C FF00               3027              movea #TESTSTATUS,a0
00002190  117C 0001 0013          3028              move.b #$1,$13(a0)
00002196  4E75                    3029              rts
00002198                          3030  
00002198                          3031  SWAP_FAIL:
00002198  307C FF00               3032      movea #TESTSTATUS,a0
0000219C  117C 0002 0013          3033      move.b #$2,$13(a0) 
000021A2  4E75                    3034      rts
000021A4                          3035               
000021A4                          3036  ;-----------------------------------------------------------
000021A4                          3037  ;-----------------------------------------------------------
000021A4                          3038  ; OPCODE : LEA_PEA
000021A4                          3039  ;-----------------------------------------------------------
000021A4                          3040  ;-----------------------------------------------------------
000021A4                          3041  op_LEAPEA: 
000021A4                          3042  
000021A4  207C 00345678           3043              move.l #$00345678,a0
000021AA  7800                    3044              move.l #$00000000,d4
000021AC                          3045              
000021AC                          3046      ; (An)      
000021AC  4DD0                    3047              lea (a0),a6
000021AE  200E                    3048              move.l a6,d0
000021B0  0C80 00345678           3049              cmpi.l #$00345678,d0
Line 3050 ERROR: Invalid syntax
000021B6                          3050              bne LEAPEA_FAIL;                   ; branch if Z set  
000021B6  4850                    3051              pea (a0)
000021B8  0C97 00345678           3052              cmpi.l #$00345678,(a7)
Line 3053 ERROR: Invalid syntax
000021BE                          3053              bne LEAPEA_FAIL;                   ; branch if Z set  
000021BE  584F                    3054              addq #4,a7            ; Restore Stack Pointer
000021C0                          3055              
000021C0                          3056      ; x(An)     
000021C0  4DE8 0004               3057              lea 4(a0),a6
000021C4  200E                    3058              move.l a6,d0
000021C6  0C80 0034567C           3059              cmpi.l #$0034567C,d0
Line 3060 ERROR: Invalid syntax
000021CC                          3060              bne LEAPEA_FAIL;                   ; branch if Z set  
000021CC  4868 0004               3061              pea 4(a0)
000021D0  0C97 0034567C           3062              cmpi.l #$0034567C,(a7)
Line 3063 ERROR: Invalid syntax
000021D6                          3063              bne LEAPEA_FAIL;                   ; branch if Z set  
000021D6  584F                    3064              addq #4,a7            ; Restore Stack Pointer         
000021D8                          3065  
000021D8                          3066      ; x(An,Dn.l)        
000021D8  4DF0 4004               3067              lea 4(a0,d4),a6
000021DC  200E                    3068              move.l a6,d0
000021DE  0C80 0034567C           3069              cmpi.l #$0034567C,d0
Line 3070 ERROR: Invalid syntax
000021E4                          3070              bne LEAPEA_FAIL;                   ; branch if Z set  
000021E4  4870 4804               3071              pea 4(a0,d4.l)
000021E8  0C97 0034567C           3072              cmpi.l #$0034567C,(a7)
Line 3073 ERROR: Invalid syntax
000021EE                          3073              bne LEAPEA_FAIL;                   ; branch if Z set  
000021EE  584F                    3074              addq #4,a7            ; Restore Stack Pointer
000021F0                          3075              
000021F0                          3076      ; x.W       
000021F0  4DF8 1234               3077              lea $1234,a6
000021F4  200E                    3078              move.l a6,d0
000021F6  0C40 1234               3079              cmpi.w #$1234,d0
Line 3080 ERROR: Invalid syntax
000021FA                          3080              bne LEAPEA_FAIL;                   ; branch if Z set  
000021FA  4878 1234               3081              pea $1234
000021FE  0C97 00001234           3082              cmpi.l #$00001234,(a7)
Line 3083 ERROR: Invalid syntax
00002204                          3083              bne LEAPEA_FAIL;                   ; branch if Z set  
00002204  584F                    3084              addq #4,a7            ; Restore Stack Pointer
00002206                          3085             
00002206                          3086      ; x.L       
00002206  4DF9 00345678           3087              lea $00345678,a6
0000220C  200E                    3088              move.l a6,d0
0000220E  B08E                    3089              cmp.l a6,d0
Line 3090 ERROR: Invalid syntax
00002210                          3090              bne LEAPEA_FAIL;                   ; branch if Z set  
00002210  4879 00345678           3091              pea $00345678
00002216  0C97 00345678           3092              cmpi.l #$00345678,(a7)
Line 3093 ERROR: Invalid syntax
0000221C                          3093              bne LEAPEA_FAIL;                   ; branch if Z set  
0000221C  584F                    3094              addq #4,a7            ; Restore Stack Pointer
0000221E                          3095             
0000221E                          3096      ; x(PC)     
0000221E  4DFA 0006               3097              lea LEA1(pc),a6
00002222  200E                    3098              move.l a6,d0
00002224  B08E                    3099              cmp.l a6,d0
Line 3100 ERROR: Invalid syntax
00002226                          3100              bne LEAPEA_FAIL;                   ; branch if Z set  
00002226  487A FFFE               3101  LEA1:       pea LEA1(pc)
0000222A  0C97 0000241E           3102              cmpi.l #$0000241E,(a7)
Line 3103 ERROR: Invalid syntax
00002230                          3103              beq LEAPEA_FAIL;                   ; branch if Z clear  
00002230  584F                    3104              addq #4,a7            ; Restore Stack Pointer
00002232                          3105  
00002232                          3106  
00002232                          3107  
00002232                          3108            
00002232  46FC 2700               3109              move #$2700,SR        ; Put flags back to initial value
00002236                          3110  
00002236  307C FF00               3111              movea #TESTSTATUS,a0
0000223A  117C 0001 0014          3112              move.b #$1,$14(a0)
00002240  4E75                    3113              rts
00002242                          3114      
00002242                          3115  LEAPEA_FAIL:
00002242  307C FF00               3116      movea #TESTSTATUS,a0
00002246  117C 0002 0014          3117      move.b #$2,$14(a0)
0000224C  4E75                    3118      rts
0000224E                          3119               
0000224E                          3120  ;-----------------------------------------------------------
0000224E                          3121  ;-----------------------------------------------------------
0000224E                          3122  ; OPCODE : LEA_TAS
0000224E                          3123  ;-----------------------------------------------------------
0000224E                          3124  ;-----------------------------------------------------------
0000224E                          3125  op_TAS: 
0000224E                          3126  
0000224E                          3127      ; Test just one addressing mode
0000224E                          3128  
0000224E  207C 00000100           3129              move.l #$00000100,a0
00002254                          3130              
00002254                          3131      ; (An)      
00002254  10BC 0000               3132              move.b #$00,(a0)
Line 3133 ERROR: Invalid syntax
00002258                          3133              bmi TAS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3134 ERROR: Invalid syntax
00002258                          3134              bne TAS_FAIL;                   ; Check Z Flag  beq/bne
00002258  4AD0                    3135              tas (a0)
0000225A  0C10 0080               3136              cmpi.b #$80,(a0)
Line 3137 ERROR: Invalid syntax
0000225E                          3137              bne TAS_FAIL;                   ; branch if Z set  
0000225E  10BC 00F5               3138              move.b #$F5,(a0)
00002262  4AD0                    3139              tas (a0)
Line 3140 ERROR: Invalid syntax
00002264                          3140              bpl TAS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3141 ERROR: Invalid syntax
00002264                          3141              beq TAS_FAIL;                   ; Check Z Flag  beq/bne
00002264  4AD0                    3142              tas (a0)
00002266  0C10 00F5               3143              cmpi.b #$F5,(a0)
0000226A  6600 000E               3144              bne TAS_FAIL                   ; branch if Z set  
0000226E                          3145  
0000226E  307C FF00               3146              movea #TESTSTATUS,a0
00002272  117C 0001 0015          3147              move.b #$1,$15(a0)
00002278  4E75                    3148              rts
0000227A                          3149              
0000227A                          3150  TAS_FAIL: 
0000227A  307C FF00               3151      movea #TESTSTATUS,a0
0000227E  117C 0002 0015          3152      move.b #$2,$15(a0)
00002284  4E75                    3153      rts
00002286                          3154  
00002286                          3155  ;-----------------------------------------------------------
00002286                          3156  ;-----------------------------------------------------------
00002286                          3157  ; OPCODE : LEA_TST
00002286                          3158  ;-----------------------------------------------------------
00002286                          3159  ;-----------------------------------------------------------
00002286                          3160  op_TST: 
00002286                          3161  
00002286                          3162      ; Test just one addressing mode
00002286                          3163  
00002286  207C 00000100           3164              move.l #$00000100,a0
0000228C                          3165              
0000228C                          3166      ; (An) - BYTE       
0000228C  10BC 0000               3167              move.b #$00,(a0)
00002290  4A10                    3168              tst.b (a0)
Line 3169 ERROR: Invalid syntax
00002292                          3169              bmi TST_FAIL;                   ; Check N Flag  bmi/bpl
Line 3170 ERROR: Invalid syntax
00002292                          3170              bne TST_FAIL;                   ; Check Z Flag  beq/bne
00002292  10BC 00F5               3171              move.b #$F5,(a0)
00002296  4A10                    3172              tst.b (a0)
Line 3173 ERROR: Invalid syntax
00002298                          3173              bpl TST_FAIL;                   ; Check N Flag  bmi/bpl
Line 3174 ERROR: Invalid syntax
00002298                          3174              beq TST_FAIL;                   ; Check Z Flag  beq/bne
00002298                          3175              
00002298                          3176      ; (An) - WORD       
00002298  30BC 0000               3177              move.w #$0000,(a0)
0000229C  4A50                    3178              tst.w (a0)
Line 3179 ERROR: Invalid syntax
0000229E                          3179              bmi TST_FAIL;                   ; Check N Flag  bmi/bpl
Line 3180 ERROR: Invalid syntax
0000229E                          3180              bne TST_FAIL;                   ; Check Z Flag  beq/bne
0000229E  30BC F567               3181              move.w #$F567,(a0)
000022A2  4A50                    3182              tst.w (a0)
Line 3183 ERROR: Invalid syntax
000022A4                          3183              bpl TST_FAIL;                   ; Check N Flag  bmi/bpl
Line 3184 ERROR: Invalid syntax
000022A4                          3184              beq TST_FAIL;                   ; Check Z Flag  beq/bne
000022A4                          3185              
000022A4                          3186      ; (An) - LONG       
000022A4  20BC 00000000           3187              move.l #$00000000,(a0)
000022AA  4A90                    3188              tst.l (a0)
Line 3189 ERROR: Invalid syntax
000022AC                          3189              bmi TST_FAIL;                   ; Check N Flag  bmi/bpl
Line 3190 ERROR: Invalid syntax
000022AC                          3190              bne TST_FAIL;                   ; Check Z Flag  beq/bne
000022AC  20BC F56789AB           3191              move.l #$F56789ab,(a0)
000022B2  4A90                    3192              tst.l (a0)
Line 3193 ERROR: Invalid syntax
000022B4                          3193              bpl TST_FAIL;                   ; Check N Flag  bmi/bpl
Line 3194 ERROR: Invalid syntax
000022B4                          3194              beq TST_FAIL;                   ; Check Z Flag  beq/bne
000022B4                          3195  
000022B4  307C FF00               3196              movea #TESTSTATUS,a0
000022B8  117C 0001 0016          3197              move.b #$1,$16(a0)
000022BE  4E75                    3198              rts
000022C0                          3199  
000022C0                          3200  TST_FAIL:
000022C0  307C FF00               3201      movea #TESTSTATUS,a0
000022C4  117C 0002 0016          3202      move.b #$2,$16(a0)
000022CA  4E75                    3203      rts   
000022CC                          3204       
000022CC                          3205  ;-----------------------------------------------------------
000022CC                          3206  ;-----------------------------------------------------------
000022CC                          3207  ; OPCODE : LINKS
000022CC                          3208  ;-----------------------------------------------------------
000022CC                          3209  ;-----------------------------------------------------------
000022CC                          3210  op_LINKS: 
000022CC                          3211  
000022CC  207C 11223344           3212              move.l #$11223344,a0
000022D2  203C 11223344           3213              move.l #$11223344,d0
000022D8  4E50 0000               3214              link a0,#$0
000022DC  0C97 11223344           3215              cmpi.l #$11223344,(a7)
000022E2                          3216              
000022E2  4E58                    3217              unlk a0
000022E4  B1C0                    3218              cmp.l d0,a0
Line 3219 ERROR: Invalid syntax
000022E6                          3219              bne LINK_FAIL;                   ; branch if Z set  
000022E6                          3220  
000022E6  307C FF00               3221              movea #TESTSTATUS,a0
000022EA  117C 0001 0017          3222              move.b #$1,$17(a0)
000022F0  4E75                    3223              rts
000022F2                          3224  
000022F2                          3225  LINK_FAIL:
000022F2  307C FF00               3226      movea #TESTSTATUS,a0
000022F6  117C 0002 0017          3227      move.b #$2,$17(a0)
000022FC  4E75                    3228      rts
000022FE                          3229  
000022FE                          3230  ;-----------------------------------------------------------
000022FE                          3231  ;-----------------------------------------------------------
000022FE                          3232  ; OPCODE : MOVE_USP
000022FE                          3233  ;-----------------------------------------------------------
000022FE                          3234  ;-----------------------------------------------------------
000022FE                          3235  op_MOVE_USP: 
000022FE                          3236  
000022FE  207C 11223344           3237              move.l #$11223344,a0
00002304  4E6B                    3238              move USP,a3
00002306  4E60                    3239              move a0,USP
00002308  4E69                    3240              move USP,a1
0000230A  B3C8                    3241              cmp.l a0,a1
Line 3242 ERROR: Invalid syntax
0000230C                          3242              bne MOVE_USP_FAIL;                   ; branch if Z set  
0000230C  4E63                    3243              move a3,USP
0000230E                          3244  
0000230E  307C FF00               3245              movea #TESTSTATUS,a0
00002312  117C 0001 0018          3246              move.b #$1,$18(a0)
00002318  4E75                    3247              rts
0000231A                          3248  
0000231A                          3249  MOVE_USP_FAIL:
0000231A  307C FF00               3250      movea #TESTSTATUS,a0
0000231E  117C 0002 0018          3251      move.b #$2,$18(a0)
00002324  4E75                    3252      rts
00002326                          3253  
00002326                          3254  ;-----------------------------------------------------------
00002326                          3255  ;-----------------------------------------------------------
00002326                          3256  ; OPCODE : CHK
00002326                          3257  ;-----------------------------------------------------------
00002326                          3258  ;-----------------------------------------------------------
00002326                          3259  op_CHK: 
00002326  303C 1122               3260              move.w #$1122,d0
0000232A  323C 1122               3261              move.w #$1122,d1
0000232E  4380                    3262              chk d0,d1 
00002330                          3263              
00002330  4E71                    3264              nop
00002332  4E71                    3265              nop
00002334                          3266              
00002334  323C 1122               3267              move.w #$1122,d1
00002338  43BC 1122               3268              chk #$1122,d1 
0000233C                          3269                      
0000233C                          3270      ; Comment out when using Easy68K
0000233C  323C 1122               3271              move.w #$1122,d1
00002340  43BC 007A               3272              chk #00122,d1 
00002344  BCBC EEEE0006           3273              cmp.l #$EEEE0006,d6
Line 3274 ERROR: Invalid syntax
0000234A                          3274              bne CHK_FAIL;                   ; branch if Z set  
0000234A                          3275  
0000234A  303C 1122               3276              move.w #$1122,d0      
0000234E  323C 8000               3277              move.w #$8000,d1
00002352  4380                    3278              chk d0,d1 
00002354  BCBC EEEE0006           3279              cmp.l #$EEEE0006,d6
Line 3280 ERROR: Invalid syntax
0000235A                          3280              bne CHK_FAIL;                   ; branch if Z set  
0000235A                          3281  
0000235A  307C FF00               3282              movea #TESTSTATUS,a0
0000235E  117C 0001 0019          3283              move.b #$1,$19(a0)
00002364  4E75                    3284              rts
00002366                          3285        
00002366                          3286  CHK_FAIL: 
00002366  307C FF00               3287      movea #TESTSTATUS,a0
0000236A  117C 0002 0019          3288      move.b #$2,$19(a0)
00002370  4E75                    3289      rts
00002372                          3290  
00002372                          3291  ;-----------------------------------------------------------
00002372                          3292  ;-----------------------------------------------------------
00002372                          3293  ; OPCODE : NEGS
00002372                          3294  ;-----------------------------------------------------------
00002372                          3295  ;-----------------------------------------------------------
00002372                          3296  op_NEGS: 
00002372                          3297  
00002372                          3298      ; NOT - BYTE
00002372  207C 00000100           3299              move.l #$00000100,a0
00002378  7000                    3300              move.l #$00000000,d0
0000237A  4600                    3301              not.b d0
Line 3302 ERROR: Invalid syntax
0000237C                          3302              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3303 ERROR: Invalid syntax
0000237C                          3303              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne
0000237C  4600                    3304              not.b d0
Line 3305 ERROR: Invalid syntax
0000237E                          3305              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3306 ERROR: Invalid syntax
0000237E                          3306              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
0000237E  0C00 0000               3307              cmpi.b #$00,d0
Line 3308 ERROR: Invalid syntax
00002382                          3308              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
00002382  10BC 0080               3309              move.b #$80,(a0)
00002386  4610                    3310              not.b (a0)
Line 3311 ERROR: Invalid syntax
00002388                          3311              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3312 ERROR: Invalid syntax
00002388                          3312              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne
00002388  4610                    3313              not.b (a0)
Line 3314 ERROR: Invalid syntax
0000238A                          3314              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3315 ERROR: Invalid syntax
0000238A                          3315              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne
0000238A  0C10 0080               3316              cmpi.b #$80,(a0)
Line 3317 ERROR: Invalid syntax
0000238E                          3317              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
0000238E                          3318  
0000238E                          3319      ; NOT - WORD
0000238E  207C 00000100           3320              move.l #$00000100,a0
00002394  7000                    3321              move.l #$00000000,d0
00002396  4640                    3322              not.w d0
Line 3323 ERROR: Invalid syntax
00002398                          3323              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3324 ERROR: Invalid syntax
00002398                          3324              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne
00002398  4640                    3325              not.w d0
Line 3326 ERROR: Invalid syntax
0000239A                          3326              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3327 ERROR: Invalid syntax
0000239A                          3327              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
0000239A  0C40 0000               3328              cmpi.w #$0000,d0
Line 3329 ERROR: Invalid syntax
0000239E                          3329              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
0000239E  30BC 5A5A               3330              move.w #$5a5a,(a0)
000023A2  4650                    3331              not.w (a0)
Line 3332 ERROR: Invalid syntax
000023A4                          3332              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3333 ERROR: Invalid syntax
000023A4                          3333              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne
000023A4  4650                    3334              not.w (a0)
Line 3335 ERROR: Invalid syntax
000023A6                          3335              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3336 ERROR: Invalid syntax
000023A6                          3336              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne
000023A6  0C50 5A5A               3337              cmpi.w #$5a5a,(a0)
Line 3338 ERROR: Invalid syntax
000023AA                          3338              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
000023AA                          3339  
000023AA                          3340      ; NOT - LONG
000023AA  207C 00000100           3341              move.l #$00000100,a0
000023B0  7000                    3342              move.l #$00000000,d0
000023B2  4680                    3343              not.l d0
Line 3344 ERROR: Invalid syntax
000023B4                          3344              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3345 ERROR: Invalid syntax
000023B4                          3345              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne
000023B4  4680                    3346              not.l d0
Line 3347 ERROR: Invalid syntax
000023B6                          3347              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3348 ERROR: Invalid syntax
000023B6                          3348              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
000023B6  0C80 00000000           3349              cmpi.l #$00000000,d0
Line 3350 ERROR: Invalid syntax
000023BC                          3350              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
000023BC  20BC 5A5A1234           3351              move.l #$5a5a1234,(a0)
000023C2  4690                    3352              not.l (a0)
Line 3353 ERROR: Invalid syntax
000023C4                          3353              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3354 ERROR: Invalid syntax
000023C4                          3354              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne
000023C4  4690                    3355              not.l (a0)
Line 3356 ERROR: Invalid syntax
000023C6                          3356              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl
Line 3357 ERROR: Invalid syntax
000023C6                          3357              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne
000023C6  0C90 5A5A1234           3358              cmpi.l #$5a5a1234,(a0)
Line 3359 ERROR: Invalid syntax
000023CC                          3359              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
000023CC                          3360  
000023CC                          3361  ; ----- 
000023CC                          3362  
000023CC                          3363      ; NEG - BYTE
000023CC  207C 00000100           3364              move.l #$00000100,a0
000023D2  7000                    3365              move.l #$00000000,d0
000023D4  223C 00000080           3366              move.l #$00000080,d1
000023DA  4400                    3367              neg.b d0
Line 3368 ERROR: Invalid syntax
000023DC                          3368              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3369 ERROR: Invalid syntax
000023DC                          3369              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne 1
Line 3370 ERROR: Invalid syntax
000023DC                          3370              bcs NEGS_FAIL;                   ; Check C Flag  bcc/bcs 1
Line 3371 ERROR: Invalid syntax
000023DC                          3371              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1
000023DC  4401                    3372              neg.b d1
Line 3373 ERROR: Invalid syntax
000023DE                          3373              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3374 ERROR: Invalid syntax
000023DE                          3374              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3375 ERROR: Invalid syntax
000023DE                          3375              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3376 ERROR: Invalid syntax
000023DE                          3376              bvc NEGS_FAIL;                   ; Check V Flag  bvc/bvs 0       
000023DE  0C01 0080               3377              cmpi.b #$80,d1
Line 3378 ERROR: Invalid syntax
000023E2                          3378              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
000023E2  10BC 007F               3379              move.b #$7F,(a0)
000023E6  4410                    3380              neg.b (a0)
Line 3381 ERROR: Invalid syntax
000023E8                          3381              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3382 ERROR: Invalid syntax
000023E8                          3382              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3383 ERROR: Invalid syntax
000023E8                          3383              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3384 ERROR: Invalid syntax
000023E8                          3384              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1          
000023E8  10BC 00F5               3385              move.b #$F5,(a0)
000023EC  4410                    3386              neg.b (a0)
Line 3387 ERROR: Invalid syntax
000023EE                          3387              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3388 ERROR: Invalid syntax
000023EE                          3388              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3389 ERROR: Invalid syntax
000023EE                          3389              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3390 ERROR: Invalid syntax
000023EE                          3390              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1       
000023EE  0C10 000B               3391              cmpi.b #$0B,(a0)
Line 3392 ERROR: Invalid syntax
000023F2                          3392              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
000023F2                          3393  
000023F2                          3394  ; -----         
000023F2                          3395  
000023F2                          3396      ; NEG - WORD
000023F2  207C 00000100           3397              move.l #$00000100,a0
000023F8  7000                    3398              move.l #$00000000,d0
000023FA  223C 00008000           3399              move.l #$00008000,d1
00002400  4440                    3400              neg.w d0
Line 3401 ERROR: Invalid syntax
00002402                          3401              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3402 ERROR: Invalid syntax
00002402                          3402              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne 1
Line 3403 ERROR: Invalid syntax
00002402                          3403              bcs NEGS_FAIL;                   ; Check C Flag  bcc/bcs 1
Line 3404 ERROR: Invalid syntax
00002402                          3404              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1
00002402  4441                    3405              neg.w d1
Line 3406 ERROR: Invalid syntax
00002404                          3406              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3407 ERROR: Invalid syntax
00002404                          3407              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3408 ERROR: Invalid syntax
00002404                          3408              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3409 ERROR: Invalid syntax
00002404                          3409              bvc NEGS_FAIL;                   ; Check V Flag  bvc/bvs 0       
00002404  0C41 8000               3410              cmpi.w #$8000,d1
Line 3411 ERROR: Invalid syntax
00002408                          3411              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
00002408  30BC 7FFF               3412              move.w #$7FFF,(a0)
0000240C  4450                    3413              neg.w (a0)
Line 3414 ERROR: Invalid syntax
0000240E                          3414              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3415 ERROR: Invalid syntax
0000240E                          3415              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3416 ERROR: Invalid syntax
0000240E                          3416              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3417 ERROR: Invalid syntax
0000240E                          3417              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1          
0000240E  30BC F578               3418              move.w #$F578,(a0)
00002412  4450                    3419              neg.w (a0)
Line 3420 ERROR: Invalid syntax
00002414                          3420              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3421 ERROR: Invalid syntax
00002414                          3421              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3422 ERROR: Invalid syntax
00002414                          3422              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3423 ERROR: Invalid syntax
00002414                          3423              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1       
00002414  0C50 0A88               3424              cmpi.w #$0A88,(a0)
Line 3425 ERROR: Invalid syntax
00002418                          3425              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
00002418                          3426  
00002418                          3427  ; -----         
00002418                          3428  
00002418                          3429      ; NEG - LONG
00002418  207C 00000100           3430              move.l #$00000100,a0
0000241E  7000                    3431              move.l #$00000000,d0
00002420  223C 80000000           3432              move.l #$80000000,d1
00002426  4480                    3433              neg.l d0
Line 3434 ERROR: Invalid syntax
00002428                          3434              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3435 ERROR: Invalid syntax
00002428                          3435              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne 1
Line 3436 ERROR: Invalid syntax
00002428                          3436              bcs NEGS_FAIL;                   ; Check C Flag  bcc/bcs 1
Line 3437 ERROR: Invalid syntax
00002428                          3437              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1
00002428  4481                    3438              neg.l d1
Line 3439 ERROR: Invalid syntax
0000242A                          3439              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3440 ERROR: Invalid syntax
0000242A                          3440              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3441 ERROR: Invalid syntax
0000242A                          3441              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3442 ERROR: Invalid syntax
0000242A                          3442              bvc NEGS_FAIL;                   ; Check V Flag  bvc/bvs 0       
0000242A  0C81 80000000           3443              cmpi.l #$80000000,d1
Line 3444 ERROR: Invalid syntax
00002430                          3444              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
00002430  20BC 7FFFFFFF           3445              move.l #$7FFFFFFF,(a0)
00002436  4490                    3446              neg.l (a0)
Line 3447 ERROR: Invalid syntax
00002438                          3447              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3448 ERROR: Invalid syntax
00002438                          3448              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3449 ERROR: Invalid syntax
00002438                          3449              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3450 ERROR: Invalid syntax
00002438                          3450              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1          
00002438  20BC F5781234           3451              move.l #$F5781234,(a0)
0000243E  4490                    3452              neg.l (a0)
Line 3453 ERROR: Invalid syntax
00002440                          3453              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3454 ERROR: Invalid syntax
00002440                          3454              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3455 ERROR: Invalid syntax
00002440                          3455              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3456 ERROR: Invalid syntax
00002440                          3456              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1       
00002440  0C90 0A87EDCC           3457              cmpi.l #$0A87EDCC,(a0)
Line 3458 ERROR: Invalid syntax
00002446                          3458              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
00002446                          3459  
00002446                          3460  
00002446                          3461  ; -----         
00002446                          3462  
00002446                          3463      ; NEGX - BYTE
00002446  207C 00000100           3464              move.l #$00000100,a0
0000244C  7000                    3465              move.l #$00000000,d0
0000244E  223C 00000080           3466              move.l #$00000080,d1
00002454  003C 0010               3467              ori.b #$10,CCR        ; Set X Flag
00002458  4000                    3468              negx.b d0
Line 3469 ERROR: Invalid syntax
0000245A                          3469              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3470 ERROR: Invalid syntax
0000245A                          3470              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 1
Line 3471 ERROR: Invalid syntax
0000245A                          3471              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 1
Line 3472 ERROR: Invalid syntax
0000245A                          3472              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1           
0000245A  023C 00EF               3473              andi.b #$EF,CCR       ; Clear X Flag
0000245E  4000                    3474              negx.b d0
Line 3475 ERROR: Invalid syntax
00002460                          3475              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3476 ERROR: Invalid syntax
00002460                          3476              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 1
Line 3477 ERROR: Invalid syntax
00002460                          3477              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 1
Line 3478 ERROR: Invalid syntax
00002460                          3478              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1
00002460  003C 0010               3479              ori.b #$10,CCR        ; Set X Flag
00002464  4001                    3480              negx.b d1
Line 3481 ERROR: Invalid syntax
00002466                          3481              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3482 ERROR: Invalid syntax
00002466                          3482              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3483 ERROR: Invalid syntax
00002466                          3483              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3484 ERROR: Invalid syntax
00002466                          3484              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 0       
00002466  0C01 007F               3485              cmpi.b #$7F,d1
Line 3486 ERROR: Invalid syntax
0000246A                          3486              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne         
0000246A  023C 00EF               3487              andi.b #$EF,CCR       ; Clear X Flag
0000246E  4001                    3488              negx.b d1
Line 3489 ERROR: Invalid syntax
00002470                          3489              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3490 ERROR: Invalid syntax
00002470                          3490              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3491 ERROR: Invalid syntax
00002470                          3491              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3492 ERROR: Invalid syntax
00002470                          3492              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 0       
00002470  0C01 0081               3493              cmpi.b #$81,d1
Line 3494 ERROR: Invalid syntax
00002474                          3494              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
00002474  10BC 007F               3495              move.b #$7F,(a0)
00002478  003C 0010               3496              ori.b #$10,CCR        ; Set X Flag
0000247C  4010                    3497              negx.b (a0)
Line 3498 ERROR: Invalid syntax
0000247E                          3498              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3499 ERROR: Invalid syntax
0000247E                          3499              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3500 ERROR: Invalid syntax
0000247E                          3500              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3501 ERROR: Invalid syntax
0000247E                          3501              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1          
0000247E  10BC 007F               3502              move.b #$7F,(a0)
00002482  023C 00EF               3503              andi.b #$EF,CCR       ; Clear X Flag
00002486  4010                    3504              negx.b (a0)
Line 3505 ERROR: Invalid syntax
00002488                          3505              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3506 ERROR: Invalid syntax
00002488                          3506              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3507 ERROR: Invalid syntax
00002488                          3507              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3508 ERROR: Invalid syntax
00002488                          3508              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1          
00002488  10BC 00F5               3509              move.b #$F5,(a0)
0000248C  003C 0010               3510              ori.b #$10,CCR        ; Set X Flag
00002490  4010                    3511              negx.b (a0)
Line 3512 ERROR: Invalid syntax
00002492                          3512              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3513 ERROR: Invalid syntax
00002492                          3513              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3514 ERROR: Invalid syntax
00002492                          3514              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3515 ERROR: Invalid syntax
00002492                          3515              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1       
00002492  0C10 000A               3516              cmpi.b #$0A,(a0)
Line 3517 ERROR: Invalid syntax
00002496                          3517              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
00002496  023C 00EF               3518              andi.b #$EF,CCR       ; Clear X Flag
0000249A  4010                    3519              negx.b (a0)
Line 3520 ERROR: Invalid syntax
0000249C                          3520              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3521 ERROR: Invalid syntax
0000249C                          3521              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3522 ERROR: Invalid syntax
0000249C                          3522              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3523 ERROR: Invalid syntax
0000249C                          3523              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1       
0000249C  0C10 00F6               3524              cmpi.b #$F6,(a0)
Line 3525 ERROR: Invalid syntax
000024A0                          3525              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
000024A0                          3526  
000024A0                          3527      
000024A0                          3528  
000024A0                          3529  ; -----         
000024A0                          3530  
000024A0                          3531      ; NEGX - WORD
000024A0  207C 00000100           3532              move.l #$00000100,a0
000024A6  7000                    3533              move.l #$00000000,d0
000024A8  223C 00008000           3534              move.l #$00008000,d1
000024AE  003C 0010               3535              ori.b #$10,CCR        ; Set X Flag
000024B2  4040                    3536              negx.w d0
Line 3537 ERROR: Invalid syntax
000024B4                          3537              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3538 ERROR: Invalid syntax
000024B4                          3538              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 1
Line 3539 ERROR: Invalid syntax
000024B4                          3539              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 1
Line 3540 ERROR: Invalid syntax
000024B4                          3540              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1           
000024B4  023C 00EF               3541              andi.b #$EF,CCR       ; Clear X Flag
000024B8  4040                    3542              negx.w d0
Line 3543 ERROR: Invalid syntax
000024BA                          3543              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3544 ERROR: Invalid syntax
000024BA                          3544              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 1
Line 3545 ERROR: Invalid syntax
000024BA                          3545              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 1
Line 3546 ERROR: Invalid syntax
000024BA                          3546              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1
000024BA  003C 0010               3547              ori.b #$10,CCR        ; Set X Flag
000024BE  4041                    3548              negx.w d1
Line 3549 ERROR: Invalid syntax
000024C0                          3549              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3550 ERROR: Invalid syntax
000024C0                          3550              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3551 ERROR: Invalid syntax
000024C0                          3551              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3552 ERROR: Invalid syntax
000024C0                          3552              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 0       
000024C0  0C41 7FFF               3553              cmpi.w #$7FFF,d1
Line 3554 ERROR: Invalid syntax
000024C4                          3554              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne         
000024C4  023C 00EF               3555              andi.b #$EF,CCR       ; Clear X Flag
000024C8  4041                    3556              negx.w d1
Line 3557 ERROR: Invalid syntax
000024CA                          3557              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3558 ERROR: Invalid syntax
000024CA                          3558              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3559 ERROR: Invalid syntax
000024CA                          3559              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3560 ERROR: Invalid syntax
000024CA                          3560              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 0       
000024CA  0C41 8001               3561              cmpi.w #$8001,d1
Line 3562 ERROR: Invalid syntax
000024CE                          3562              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
000024CE  30BC 7FFF               3563              move.w #$7FFF,(a0)
000024D2  003C 0010               3564              ori.b #$10,CCR        ; Set X Flag
000024D6  4050                    3565              negx.w (a0)
Line 3566 ERROR: Invalid syntax
000024D8                          3566              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3567 ERROR: Invalid syntax
000024D8                          3567              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3568 ERROR: Invalid syntax
000024D8                          3568              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3569 ERROR: Invalid syntax
000024D8                          3569              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1          
000024D8  30BC F567               3570              move.w #$F567,(a0)            
000024DC  023C 00EF               3571              andi.b #$EF,CCR       ; Clear X Flag
000024E0  4050                    3572              negx.w (a0)
Line 3573 ERROR: Invalid syntax
000024E2                          3573              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3574 ERROR: Invalid syntax
000024E2                          3574              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3575 ERROR: Invalid syntax
000024E2                          3575              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3576 ERROR: Invalid syntax
000024E2                          3576              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1          
000024E2  30BC F567               3577              move.w #$F567,(a0)
000024E6  003C 0010               3578              ori.b #$10,CCR        ; Set X Flag
000024EA  4050                    3579              negx.w (a0)
Line 3580 ERROR: Invalid syntax
000024EC                          3580              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3581 ERROR: Invalid syntax
000024EC                          3581              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3582 ERROR: Invalid syntax
000024EC                          3582              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3583 ERROR: Invalid syntax
000024EC                          3583              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1       
000024EC  0C50 0A98               3584              cmpi.w #$0A98,(a0)
Line 3585 ERROR: Invalid syntax
000024F0                          3585              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
000024F0  023C 00EF               3586              andi.b #$EF,CCR       ; Clear X Flag
000024F4  4050                    3587              negx.w (a0)
Line 3588 ERROR: Invalid syntax
000024F6                          3588              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3589 ERROR: Invalid syntax
000024F6                          3589              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3590 ERROR: Invalid syntax
000024F6                          3590              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3591 ERROR: Invalid syntax
000024F6                          3591              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1       
000024F6  0C50 F568               3592              cmpi.w #$F568,(a0)
Line 3593 ERROR: Invalid syntax
000024FA                          3593              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
000024FA                          3594  
000024FA                          3595              
000024FA                          3596  ; -----         
000024FA                          3597      ; NEGX - LONG
000024FA  207C 00000100           3598              move.l #$00000100,a0
00002500  7000                    3599              move.l #$00000000,d0
00002502  223C 80000000           3600              move.l #$80000000,d1
00002508  003C 0010               3601              ori.b #$10,CCR        ; Set X Flag
0000250C  4080                    3602              negx.l d0
Line 3603 ERROR: Invalid syntax
0000250E                          3603              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3604 ERROR: Invalid syntax
0000250E                          3604              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 1
Line 3605 ERROR: Invalid syntax
0000250E                          3605              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 1
Line 3606 ERROR: Invalid syntax
0000250E                          3606              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1           
0000250E  023C 00EF               3607              andi.b #$EF,CCR       ; Clear X Flag
00002512  4080                    3608              negx.l d0
Line 3609 ERROR: Invalid syntax
00002514                          3609              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3610 ERROR: Invalid syntax
00002514                          3610              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 1
Line 3611 ERROR: Invalid syntax
00002514                          3611              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 1
Line 3612 ERROR: Invalid syntax
00002514                          3612              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1
00002514  003C 0010               3613              ori.b #$10,CCR        ; Set X Flag
00002518  4081                    3614              negx.l d1
Line 3615 ERROR: Invalid syntax
0000251A                          3615              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3616 ERROR: Invalid syntax
0000251A                          3616              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3617 ERROR: Invalid syntax
0000251A                          3617              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3618 ERROR: Invalid syntax
0000251A                          3618              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 0       
0000251A  0C81 7FFFFFFF           3619              cmpi.l #$7FFFFFFF,d1
Line 3620 ERROR: Invalid syntax
00002520                          3620              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne         
00002520  023C 00EF               3621              andi.b #$EF,CCR       ; Clear X Flag
00002524  4081                    3622              negx.l d1
Line 3623 ERROR: Invalid syntax
00002526                          3623              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3624 ERROR: Invalid syntax
00002526                          3624              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3625 ERROR: Invalid syntax
00002526                          3625              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3626 ERROR: Invalid syntax
00002526                          3626              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 0       
00002526  0C81 80000001           3627              cmpi.l #$80000001,d1
Line 3628 ERROR: Invalid syntax
0000252C                          3628              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
0000252C  20BC 00007FFF           3629              move.l #$7FFF,(a0)
00002532  003C 0010               3630              ori.b #$10,CCR        ; Set X Flag
00002536  4090                    3631              negx.l (a0)
Line 3632 ERROR: Invalid syntax
00002538                          3632              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3633 ERROR: Invalid syntax
00002538                          3633              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3634 ERROR: Invalid syntax
00002538                          3634              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3635 ERROR: Invalid syntax
00002538                          3635              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1          
00002538  20BC F5671234           3636              move.l #$F5671234,(a0)            
0000253E  023C 00EF               3637              andi.b #$EF,CCR       ; Clear X Flag
00002542  4090                    3638              negx.l (a0)
Line 3639 ERROR: Invalid syntax
00002544                          3639              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 1
Line 3640 ERROR: Invalid syntax
00002544                          3640              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3641 ERROR: Invalid syntax
00002544                          3641              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3642 ERROR: Invalid syntax
00002544                          3642              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1          
00002544  20BC F5675678           3643              move.l #$F5675678,(a0)
0000254A  003C 0010               3644              ori.b #$10,CCR        ; Set X Flag
0000254E  4090                    3645              negx.l (a0)
Line 3646 ERROR: Invalid syntax
00002550                          3646              bmi NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3647 ERROR: Invalid syntax
00002550                          3647              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3648 ERROR: Invalid syntax
00002550                          3648              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3649 ERROR: Invalid syntax
00002550                          3649              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1       
00002550  0C90 0A98A987           3650              cmpi.l #$0A98A987,(a0)
Line 3651 ERROR: Invalid syntax
00002556                          3651              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
00002556  023C 00EF               3652              andi.b #$EF,CCR       ; Clear X Flag
0000255A  4090                    3653              negx.l (a0)
Line 3654 ERROR: Invalid syntax
0000255C                          3654              bpl NEGS_FAIL;                   ; Check N Flag  bmi/bpl 0
Line 3655 ERROR: Invalid syntax
0000255C                          3655              beq NEGS_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3656 ERROR: Invalid syntax
0000255C                          3656              bcc NEGS_FAIL;                   ; Check C Flag  bcc/bcs 0
Line 3657 ERROR: Invalid syntax
0000255C                          3657              bvs NEGS_FAIL;                   ; Check V Flag  bvc/bvs 1       
0000255C  0C90 F5675679           3658              cmpi.l #$F5675679,(a0)
Line 3659 ERROR: Invalid syntax
00002562                          3659              bne NEGS_FAIL;                   ; Check Z Flag  beq/bne
00002562                          3660  
00002562  307C FF00               3661          movea #TESTSTATUS,a0
00002566  117C 0001 001A          3662          move.b #$1,$1a(a0)
0000256C  4E75                    3663          rts
0000256E                          3664  
0000256E                          3665          NEGS_FAIL:
0000256E  307C FF00               3666              movea #TESTSTATUS,a0
00002572  117C 0002 001A          3667              move.b #$2,$1a(a0)
00002578  4E75                    3668              rts
0000257A                          3669  
0000257A                          3670         
0000257A                          3671  ; -----         
0000257A                          3672  
0000257A                          3673  op_CLR:
0000257A                          3674      ; CLR - BYTE
0000257A  207C 00000100           3675              move.l #$00000100,a0
00002580  203C 12345678           3676              move.l #$12345678,d0
00002586  223C 12345678           3677              move.l #$12345678,d1                   
0000258C  243C 12345678           3678              move.l #$12345678,d2                   
00002592  283C 12345600           3679              move.l #$12345600,d4                   
00002598  2A3C 12340000           3680              move.l #$12340000,d5                   
0000259E  7C00                    3681              move.l #$00000000,d6                   
000025A0                          3682              
000025A0  4200                    3683              clr.b d0
Line 3684 ERROR: Invalid syntax
000025A2                          3684              bne CLR_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3685 ERROR: Invalid syntax
000025A2                          3685              bmi CLR_FAIL;                   ; Check N Flag  bmi/bpl 0
000025A2  B880                    3686              cmp.l d0,d4
Line 3687 ERROR: Invalid syntax
000025A4                          3687              bne CLR_FAIL;                   ; Check Z Flag  beq/bne 0
000025A4                          3688              
000025A4  4241                    3689              clr.w d1
Line 3690 ERROR: Invalid syntax
000025A6                          3690              bne CLR_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3691 ERROR: Invalid syntax
000025A6                          3691              bmi CLR_FAIL;                   ; Check N Flag  bmi/bpl 0
000025A6  BA81                    3692              cmp.l d1,d5
Line 3693 ERROR: Invalid syntax
000025A8                          3693              bne CLR_FAIL;                   ; Check Z Flag  beq/bne 0
000025A8                          3694              
000025A8  4282                    3695              clr.l d2
Line 3696 ERROR: Invalid syntax
000025AA                          3696              bne CLR_FAIL;                   ; Check Z Flag  beq/bne 0
Line 3697 ERROR: Invalid syntax
000025AA                          3697              bmi CLR_FAIL;                   ; Check N Flag  bmi/bpl 0
000025AA  BC82                    3698              cmp.l d2,d6
Line 3699 ERROR: Invalid syntax
000025AC                          3699              bne CLR_FAIL;                   ; Check Z Flag  beq/bne 0
000025AC                          3700  
000025AC  307C FF00               3701              movea #TESTSTATUS,a0
000025B0  117C 0001 001B          3702              move.b #$1,$1b(a0)
000025B6  4E75                    3703              rts      
000025B8                          3704              
000025B8                          3705  CLR_FAIL:
000025B8  307C FF00               3706      movea #TESTSTATUS,a0
000025BC  117C 0002 001B          3707      move.b #$2,$1b(a0)
000025C2  4E75                    3708      rts
000025C4                          3709                            
000025C4                          3710  ;-----------------------------------------------------------
000025C4                          3711  ;-----------------------------------------------------------
000025C4                          3712  ; OPCODE : MOVEM
000025C4                          3713  ;-----------------------------------------------------------
000025C4                          3714  ;-----------------------------------------------------------
000025C4                          3715  op_MOVEM: 
000025C4                          3716  
000025C4                          3717      ; WORD  Registers --> Memory
000025C4  203C 0000D0D0           3718              move.l #$0000d0d0,d0
000025CA  223C 0000D1D1           3719              move.l #$0000d1d1,d1
000025D0  243C 0000D2D2           3720              move.l #$0000d2d2,d2
000025D6  263C 0000D3D3           3721              move.l #$0000d3d3,d3
000025DC  283C 0000D4D4           3722              move.l #$0000d4d4,d4
000025E2  2A3C 0000D5D5           3723              move.l #$0000d5d5,d5
000025E8  2C3C 0000D6D6           3724              move.l #$0000d6d6,d6
000025EE  2E3C 0000D7D7           3725              move.l #$0000d7d7,d7
000025F4  207C 00000A0A           3726              move.l #$00000a0a,a0
000025FA  227C 00001A1A           3727              move.l #$00001a1a,a1
00002600  247C 00002A2A           3728              move.l #$00002a2a,a2
00002606  267C 00003A3A           3729              move.l #$00003a3a,a3
0000260C  287C 00004A4A           3730              move.l #$00004a4a,a4
00002612  2A7C 00005A5A           3731              move.l #$00005a5a,a5
00002618  2C7C 00006A6A           3732              move.l #$00006a6a,a6
0000261E                          3733             ;move.l #$00007a7a,a7  ; Dont change the Stack Pointer
0000261E                          3734              
0000261E  48B8 FFFF 0100          3735              movem.w D0-D7/A0-A7,$00000100  
00002624                          3736              
00002624  207C 00000100           3737              move.l #$00000100,a0
0000262A                          3738              
0000262A  B058                    3739              cmp.w (a0)+,d0            
Line 3740 ERROR: Invalid syntax
0000262C                          3740              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
0000262C  B258                    3741              cmp.w (a0)+,d1            
Line 3742 ERROR: Invalid syntax
0000262E                          3742              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
0000262E  B458                    3743              cmp.w (a0)+,d2            
Line 3744 ERROR: Invalid syntax
00002630                          3744              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002630  B658                    3745              cmp.w (a0)+,d3            
Line 3746 ERROR: Invalid syntax
00002632                          3746              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002632  B858                    3747              cmp.w (a0)+,d4            
Line 3748 ERROR: Invalid syntax
00002634                          3748              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002634  BA58                    3749              cmp.w (a0)+,d5            
Line 3750 ERROR: Invalid syntax
00002636                          3750              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002636  BC58                    3751              cmp.w (a0)+,d6            
Line 3752 ERROR: Invalid syntax
00002638                          3752              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002638  BE58                    3753              cmp.w (a0)+,d7            
Line 3754 ERROR: Invalid syntax
0000263A                          3754              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
0000263A                          3755  
0000263A  0C58 0A0A               3756              cmp.w #$0A0A,(a0)+    ; Because we are using a0 as a pointer
Line 3757 ERROR: Invalid syntax
0000263E                          3757              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
0000263E                          3758   
0000263E  B2D8                    3759              cmp.w (a0)+,a1
Line 3760 ERROR: Invalid syntax
00002640                          3760              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002640  B4D8                    3761              cmp.w (a0)+,a2
Line 3762 ERROR: Invalid syntax
00002642                          3762              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002642  B6D8                    3763              cmp.w (a0)+,a3
Line 3764 ERROR: Invalid syntax
00002644                          3764              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002644  B8D8                    3765              cmp.w (a0)+,a4
Line 3766 ERROR: Invalid syntax
00002646                          3766              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002646  BAD8                    3767              cmp.w (a0)+,a5
Line 3768 ERROR: Invalid syntax
00002648                          3768              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002648  BCD8                    3769              cmp.w (a0)+,a6
Line 3770 ERROR: Invalid syntax
0000264A                          3770              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
0000264A                          3771            
0000264A                          3772  
0000264A                          3773  
0000264A                          3774  
0000264A                          3775      ; LONG  Registers --> Memory
0000264A  203C D0D0D0D0           3776              move.l #$d0d0d0d0,d0
00002650  223C D1D1D1D1           3777              move.l #$d1d1d1d1,d1
00002656  243C D2D2D2D2           3778              move.l #$d2d2d2d2,d2
0000265C  263C D3D3D3D3           3779              move.l #$d3d3d3d3,d3
00002662  283C D4D4D4D4           3780              move.l #$d4d4d4d4,d4
00002668  2A3C D5D5D5D5           3781              move.l #$d5d5d5d5,d5
0000266E  2C3C D6D6D6D6           3782              move.l #$d6d6d6d6,d6
00002674  2E3C D7D7D7D7           3783              move.l #$d7d7d7d7,d7
0000267A  207C 0A0A0A0A           3784              move.l #$0a0a0a0a,a0
00002680  227C 1A1A1A1A           3785              move.l #$1a1a1a1a,a1
00002686  247C 2A2A2A2A           3786              move.l #$2a2a2a2a,a2
0000268C  267C 3A3A3A3A           3787              move.l #$3a3a3a3a,a3
00002692  287C 4A4A4A4A           3788              move.l #$4a4a4a4a,a4
00002698  2A7C 5A5A5A5A           3789              move.l #$5a5a5a5a,a5
0000269E  2C7C 6A6A6A6A           3790              move.l #$6a6a6a6a,a6
000026A4                          3791             ;move.l #$7a7a7a7a,a7  ; Dont change the Stack Pointer
000026A4                          3792              
000026A4                          3793              
000026A4  48F8 FFFF 0120          3794              movem.l D0-D7/A0-A7,$00000120  
000026AA                          3795              
000026AA  207C 00000120           3796              move.l #$00000120,a0
000026B0                          3797              
000026B0  B098                    3798              cmp.l (a0)+,d0            
Line 3799 ERROR: Invalid syntax
000026B2                          3799              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026B2  B298                    3800              cmp.l (a0)+,d1            
Line 3801 ERROR: Invalid syntax
000026B4                          3801              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026B4  B498                    3802              cmp.l (a0)+,d2            
Line 3803 ERROR: Invalid syntax
000026B6                          3803              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026B6  B698                    3804              cmp.l (a0)+,d3            
Line 3805 ERROR: Invalid syntax
000026B8                          3805              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026B8  B898                    3806              cmp.l (a0)+,d4            
Line 3807 ERROR: Invalid syntax
000026BA                          3807              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026BA  BA98                    3808              cmp.l (a0)+,d5            
Line 3809 ERROR: Invalid syntax
000026BC                          3809              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026BC  BC98                    3810              cmp.l (a0)+,d6            
Line 3811 ERROR: Invalid syntax
000026BE                          3811              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026BE  BE98                    3812              cmp.l (a0)+,d7            
Line 3813 ERROR: Invalid syntax
000026C0                          3813              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026C0                          3814  
000026C0  0C98 0A0A0A0A           3815              cmp.l #$0A0A0A0A,(a0)+    ; Because we are using a0 as a pointer
Line 3816 ERROR: Invalid syntax
000026C6                          3816              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026C6                          3817   
000026C6  B3D8                    3818              cmp.l (a0)+,a1
Line 3819 ERROR: Invalid syntax
000026C8                          3819              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026C8  B5D8                    3820              cmp.l (a0)+,a2
Line 3821 ERROR: Invalid syntax
000026CA                          3821              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026CA  B7D8                    3822              cmp.l (a0)+,a3
Line 3823 ERROR: Invalid syntax
000026CC                          3823              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026CC  B9D8                    3824              cmp.l (a0)+,a4
Line 3825 ERROR: Invalid syntax
000026CE                          3825              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026CE  BBD8                    3826              cmp.l (a0)+,a5
Line 3827 ERROR: Invalid syntax
000026D0                          3827              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026D0  BDD8                    3828              cmp.l (a0)+,a6
Line 3829 ERROR: Invalid syntax
000026D2                          3829              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000026D2                          3830       ; ----
000026D2                          3831  
000026D2                          3832  
000026D2                          3833      ; WORD  Registers --> Memory  -(An) EA Mode
000026D2  203C 0000D0D0           3834              move.l #$0000d0d0,d0
000026D8  223C 0000D1D1           3835              move.l #$0000d1d1,d1
000026DE  243C 0000D2D2           3836              move.l #$0000d2d2,d2
000026E4  263C 0000D3D3           3837              move.l #$0000d3d3,d3
000026EA  283C 0000D4D4           3838              move.l #$0000d4d4,d4
000026F0  2A3C 0000D5D5           3839              move.l #$0000d5d5,d5
000026F6  2C3C 0000D6D6           3840              move.l #$0000d6d6,d6
000026FC  2E3C 0000D7D7           3841              move.l #$0000d7d7,d7
00002702  207C 00000A0A           3842              move.l #$00000a0a,a0
00002708  227C 00001A1A           3843              move.l #$00001a1a,a1
0000270E  247C 00002A2A           3844              move.l #$00002a2a,a2
00002714  267C 00003A3A           3845              move.l #$00003a3a,a3
0000271A  287C 00004A4A           3846              move.l #$00004a4a,a4
00002720  2A7C 00005A5A           3847              move.l #$00005a5a,a5
00002726  2C7C 00006A6A           3848              move.l #$00006a6a,a6
0000272C                          3849             ;move.l #$00007a7a,a7  ; Dont change the Stack Pointer
0000272C                          3850             
0000272C  207C 000001A0           3851              move.l #$000001A0,a0
00002732  48A0 FFFF               3852              movem.w D0-D7/A0-A7,-(a0)  
00002736                          3853              
00002736  207C 0000019E           3854              move.l #$0000019E,a0
0000273C                          3855              
0000273C  BCE0                    3856              cmp.w -(a0),a6            
Line 3857 ERROR: Invalid syntax
0000273E                          3857              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
0000273E  BAE0                    3858              cmp.w -(a0),a5            
Line 3859 ERROR: Invalid syntax
00002740                          3859              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002740  B8E0                    3860              cmp.w -(a0),a4            
Line 3861 ERROR: Invalid syntax
00002742                          3861              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002742  B6E0                    3862              cmp.w -(a0),a3            
Line 3863 ERROR: Invalid syntax
00002744                          3863              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002744  B4E0                    3864              cmp.w -(a0),a2            
Line 3865 ERROR: Invalid syntax
00002746                          3865              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002746  B2E0                    3866              cmp.w -(a0),a1            
Line 3867 ERROR: Invalid syntax
00002748                          3867              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002748  B0E0                    3868              cmp.w -(a0),a0            
0000274A                          3869             ; bne ;                   ; Check Z Flag  beq/bne 0
0000274A  BE60                    3870              cmp.w -(a0),d7            
Line 3871 ERROR: Invalid syntax
0000274C                          3871              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
0000274C  BC60                    3872              cmp.w -(a0),d6
Line 3873 ERROR: Invalid syntax
0000274E                          3873              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
0000274E  BA60                    3874              cmp.w -(a0),d5
Line 3875 ERROR: Invalid syntax
00002750                          3875              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002750  B860                    3876              cmp.w -(a0),d4
Line 3877 ERROR: Invalid syntax
00002752                          3877              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002752  B660                    3878              cmp.w -(a0),d3
Line 3879 ERROR: Invalid syntax
00002754                          3879              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002754  B460                    3880              cmp.w -(a0),d2
Line 3881 ERROR: Invalid syntax
00002756                          3881              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002756  B260                    3882              cmp.w -(a0),d1
Line 3883 ERROR: Invalid syntax
00002758                          3883              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002758  B060                    3884              cmp.w -(a0),d0
Line 3885 ERROR: Invalid syntax
0000275A                          3885              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
0000275A                          3886            
0000275A                          3887  
0000275A                          3888  
0000275A                          3889  
0000275A                          3890      ; LONG  Registers --> Memory   -(An) EA Mode
0000275A  203C D0D0D0D0           3891              move.l #$d0d0d0d0,d0
00002760  223C D1D1D1D1           3892              move.l #$d1d1d1d1,d1
00002766  243C D2D2D2D2           3893              move.l #$d2d2d2d2,d2
0000276C  263C D3D3D3D3           3894              move.l #$d3d3d3d3,d3
00002772  283C D4D4D4D4           3895              move.l #$d4d4d4d4,d4
00002778  2A3C D5D5D5D5           3896              move.l #$d5d5d5d5,d5
0000277E  2C3C D6D6D6D6           3897              move.l #$d6d6d6d6,d6
00002784  2E3C D7D7D7D7           3898              move.l #$d7d7d7d7,d7
0000278A  207C 0A0A0A0A           3899              move.l #$0a0a0a0a,a0
00002790  227C 1A1A1A1A           3900              move.l #$1a1a1a1a,a1
00002796  247C 2A2A2A2A           3901              move.l #$2a2a2a2a,a2
0000279C  267C 3A3A3A3A           3902              move.l #$3a3a3a3a,a3
000027A2  287C 4A4A4A4A           3903              move.l #$4a4a4a4a,a4
000027A8  2A7C 5A5A5A5A           3904              move.l #$5a5a5a5a,a5
000027AE  2C7C 6A6A6A6A           3905              move.l #$6a6a6a6a,a6
000027B4                          3906             ;move.l #$7a7a7a7a,a7  ; Dont change the Stack Pointer
000027B4                          3907              
000027B4                          3908           
000027B4  207C 000001A0           3909              move.l #$000001A0,a0
000027BA  48E0 FFFF               3910              movem.l D0-D7/A0-A7,-(a0)  
000027BE                          3911              
000027BE  207C 0000019C           3912              move.l #$0000019C,a0
000027C4                          3913              
000027C4  BDE0                    3914              cmp.l -(a0),a6            
Line 3915 ERROR: Invalid syntax
000027C6                          3915              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027C6  BBE0                    3916              cmp.l -(a0),a5            
Line 3917 ERROR: Invalid syntax
000027C8                          3917              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027C8  B9E0                    3918              cmp.l -(a0),a4            
Line 3919 ERROR: Invalid syntax
000027CA                          3919              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027CA  B7E0                    3920              cmp.l -(a0),a3            
Line 3921 ERROR: Invalid syntax
000027CC                          3921              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027CC  B5E0                    3922              cmp.l -(a0),a2            
Line 3923 ERROR: Invalid syntax
000027CE                          3923              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027CE  B3E0                    3924              cmp.l -(a0),a1            
Line 3925 ERROR: Invalid syntax
000027D0                          3925              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027D0  B1E0                    3926              cmp.l -(a0),a0            
000027D2                          3927             ; bne ;                   ; Check Z Flag  beq/bne 0
000027D2  BEA0                    3928              cmp.l -(a0),d7            
Line 3929 ERROR: Invalid syntax
000027D4                          3929              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027D4  BCA0                    3930              cmp.l -(a0),d6
Line 3931 ERROR: Invalid syntax
000027D6                          3931              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027D6  BAA0                    3932              cmp.l -(a0),d5
Line 3933 ERROR: Invalid syntax
000027D8                          3933              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027D8  B8A0                    3934              cmp.l -(a0),d4
Line 3935 ERROR: Invalid syntax
000027DA                          3935              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027DA  B6A0                    3936              cmp.l -(a0),d3
Line 3937 ERROR: Invalid syntax
000027DC                          3937              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027DC  B4A0                    3938              cmp.l -(a0),d2
Line 3939 ERROR: Invalid syntax
000027DE                          3939              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027DE  B2A0                    3940              cmp.l -(a0),d1
Line 3941 ERROR: Invalid syntax
000027E0                          3941              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027E0  B0A0                    3942              cmp.l -(a0),d0
Line 3943 ERROR: Invalid syntax
000027E2                          3943              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000027E2                          3944            
000027E2                          3945  
000027E2                          3946  
000027E2                          3947       ;----     
000027E2                          3948            
000027E2                          3949      ; WORD - Memory --> Registers
000027E2  7000                    3950              move.l #$00000000,d0
000027E4  7200                    3951              move.l #$00000000,d1
000027E6  7400                    3952              move.l #$00000000,d2
000027E8  7600                    3953              move.l #$00000000,d3
000027EA  7800                    3954              move.l #$00000000,d4
000027EC  7A00                    3955              move.l #$00000000,d5
000027EE  7C00                    3956              move.l #$00000000,d6
000027F0  7E00                    3957              move.l #$00000000,d7
000027F2  207C 00000000           3958              move.l #$00000000,a0
000027F8  227C 00000000           3959              move.l #$00000000,a1
000027FE  247C 00000000           3960              move.l #$00000000,a2
00002804  267C 00000000           3961              move.l #$00000000,a3
0000280A  287C 00000000           3962              move.l #$00000000,a4
00002810  2A7C 00000000           3963              move.l #$00000000,a5
00002816  2C7C 00000000           3964              move.l #$00000000,a6
0000281C                          3965             ;move.l #$00000000,a7  ; Dont change the Stack Pointer
0000281C                          3966              
0000281C  4CB8 2A55 0100          3967              movem.w $00000100,D0/D2/D4/D6/A1/A3/A5   
00002822                          3968              
00002822  B0BC FFFFD0D0           3969              cmp.l #$FFFFD0D0,d0           
Line 3970 ERROR: Invalid syntax
00002828                          3970              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002828  B4BC FFFFD1D1           3971              cmp.l #$FFFFD1D1,d2           
Line 3972 ERROR: Invalid syntax
0000282E                          3972              bne MOVEM_FAIL;                  ; Check Z Flag  beq/bne 0
0000282E  B8BC FFFFD2D2           3973              cmp.l #$FFFFD2D2,d4           
Line 3974 ERROR: Invalid syntax
00002834                          3974              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002834  BCBC FFFFD3D3           3975              cmp.l #$FFFFD3D3,d6           
Line 3976 ERROR: Invalid syntax
0000283A                          3976              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
0000283A  B3FC FFFFD4D4           3977              cmp.l #$FFFFD4D4,a1           
Line 3978 ERROR: Invalid syntax
00002840                          3978              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002840  B7FC FFFFD5D5           3979              cmp.l #$FFFFD5D5,a3           
Line 3980 ERROR: Invalid syntax
00002846                          3980              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002846  BBFC FFFFD6D6           3981              cmp.l #$FFFFD6D6,a5           
Line 3982 ERROR: Invalid syntax
0000284C                          3982              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
0000284C                          3983              
0000284C                          3984   
0000284C                          3985      ; LONG - Memory --> Registers
0000284C  7000                    3986              move.l #$00000000,d0
0000284E  7200                    3987              move.l #$00000000,d1
00002850  7400                    3988              move.l #$00000000,d2
00002852  7600                    3989              move.l #$00000000,d3
00002854  7800                    3990              move.l #$00000000,d4
00002856  7A00                    3991              move.l #$00000000,d5
00002858  7C00                    3992              move.l #$00000000,d6
0000285A  7E00                    3993              move.l #$00000000,d7
0000285C  207C 00000000           3994              move.l #$00000000,a0
00002862  227C 00000000           3995              move.l #$00000000,a1
00002868  247C 00000000           3996              move.l #$00000000,a2
0000286E  267C 00000000           3997              move.l #$00000000,a3
00002874  287C 00000000           3998              move.l #$00000000,a4
0000287A  2A7C 00000000           3999              move.l #$00000000,a5
00002880  2C7C 00000000           4000              move.l #$00000000,a6
00002886                          4001             ;move.l #$00000000,a7  ; Dont change the Stack Pointer
00002886                          4002              
00002886  4CF8 2A55 0120          4003              movem.l $00000120,D0/D2/D4/D6/A1/A3/A5   
0000288C                          4004              
0000288C  B0BC D0D0D0D0           4005              cmp.l #$D0D0D0D0,d0           
Line 4006 ERROR: Invalid syntax
00002892                          4006              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
00002892  B4BC D1D1D1D1           4007              cmp.l #$D1D1D1D1,d2           
Line 4008 ERROR: Invalid syntax
00002898                          4008              bne MOVEM_FAIL;                  ; Check Z Flag  beq/bne 0
00002898  B8BC D2D2D2D2           4009              cmp.l #$D2D2D2D2,d4           
Line 4010 ERROR: Invalid syntax
0000289E                          4010              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
0000289E  BCBC D3D3D3D3           4011              cmp.l #$D3D3D3D3,d6           
Line 4012 ERROR: Invalid syntax
000028A4                          4012              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000028A4  B3FC D4D4D4D4           4013              cmp.l #$D4D4D4D4,a1           
Line 4014 ERROR: Invalid syntax
000028AA                          4014              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000028AA  B7FC D5D5D5D5           4015              cmp.l #$D5D5D5D5,a3           
Line 4016 ERROR: Invalid syntax
000028B0                          4016              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000028B0  BBFC D6D6D6D6           4017              cmp.l #$D6D6D6D6,a5           
Line 4018 ERROR: Invalid syntax
000028B6                          4018              bne MOVEM_FAIL;                   ; Check Z Flag  beq/bne 0
000028B6                          4019              
000028B6  307C FF00               4020              movea #TESTSTATUS,a0
000028BA  117C 0001 001C          4021              move.b #$1,$1c(a0)
000028C0  4E75                    4022              rts     
000028C2                          4023  
000028C2                          4024  MOVEM_FAIL: 
000028C2  307C FF00               4025      movea #TESTSTATUS,a0
000028C6  117C 0002 001C          4026      move.b #$2,$1c(a0)
000028CC  4E75                    4027      rts
000028CE                          4028  
000028CE                          4029  ;-----------------------------------------------------------
000028CE                          4030  ;-----------------------------------------------------------
000028CE                          4031  ; OPCODE : ABCD
000028CE                          4032  ;-----------------------------------------------------------
000028CE                          4033  ;-----------------------------------------------------------
000028CE                          4034  op_ABCD: 
000028CE                          4035      
000028CE                          4036      ; Test with X Flag CLEARED
000028CE  207C 00000110           4037                  move.l #$00000110,a0 ; Address pointer-X
000028D4  227C 00000120           4038                  move.l #$00000120,a1 ; Address pointer-Y
000028DA  7000                    4039                  move.l #$00000000,d0 ; BCD byte-X
000028DC  7200                    4040                  move.l #$00000000,d1 ; BCD byte-Y
000028DE  7400                    4041                  move.l #$00000000,d2
000028E0  7600                    4042                  move.l #$00000000,d3 ; Cumulative -(An) BCD results
000028E2  7800                    4043                  move.l #$00000000,d4 ; Cumulative number of times C was set
000028E4  7A00                    4044                  move.l #$00000000,d5 ; Cumulative Register BCD results
000028E6  2C3C 00000099           4045                  move.l #$00000099,d6 ; Inner loop counter
000028EC  2E3C 00000099           4046                  move.l #$00000099,d7 ; Outer loop counter
000028F2                          4047  
000028F2  2007                    4048  ABCD_OUTER1:    move.l d7,d0
000028F4  2206                    4049  ABCD_INNER1:    move.l d6,d1
000028F6  023C 00EF               4050                  andi.b #$EF,CCR     ; Clear X Flag
000028FA  207C 00000110           4051                  move.l #$00000110,a0 ; Address pointer-X
00002900  227C 00000120           4052                  move.l #$00000120,a1 ; Address pointer-Y
00002906  1140 FFFF               4053                  move.b d0,-1(a0)
0000290A  1341 FFFF               4054                  move.b d1,-1(a1)
0000290E                          4055                  
0000290E  C300                    4056                  abcd d0,d1
00002910  6400 0004               4057                  bcc ABCD_NO_C1          ; Check C Flag  bcc/bcs 0
00002914  5284                    4058                  add.l #1,d4
00002916  DA81                    4059  ABCD_NO_C1:     add.l d1,d5
00002918                          4060                  
00002918  C308                    4061                  abcd -(a0),-(a1)
0000291A  6400 0004               4062                  bcc ABCD_NO_C2          ; Check C Flag  bcc/bcs 0
0000291E  5284                    4063                  add.l #1,d4
00002920  D611                    4064  ABCD_NO_C2:     add.b (a1),d3
00002922                          4065  
00002922                          4066  
00002922  51CE FFD0               4067                  dbf d6,ABCD_INNER1
00002926  2C3C 00000099           4068                  move.l #$00000099,d6
0000292C  51CF FFC4               4069                  dbf d7,ABCD_OUTER1
00002930  0C84 00005AFC           4070                  cmpi.l #$00005AFC,d4  ; Check the cumulative results
Line 4071 ERROR: Invalid syntax
00002936                          4071                  bne ABCD_FAIL;                 
00002936  0C85 001C9A34           4072                  cmpi.l #$001C9A34,d5
Line 4073 ERROR: Invalid syntax
0000293C                          4073                  bne ABCD_FAIL;                
0000293C  0C83 00000034           4074                  cmpi.l #$00000034,d3
Line 4075 ERROR: Invalid syntax
00002942                          4075                  bne ABCD_FAIL;                
00002942                          4076  
00002942                          4077      ; Test with X Flag SET
00002942  207C 00000110           4078                  move.l #$00000110,a0 ; Address pointer-X
00002948  227C 00000120           4079                  move.l #$00000120,a1 ; Address pointer-Y
0000294E  7000                    4080                  move.l #$00000000,d0 ; BCD byte-X
00002950  7200                    4081                  move.l #$00000000,d1 ; BCD byte-Y
00002952  7400                    4082                  move.l #$00000000,d2
00002954  7600                    4083                  move.l #$00000000,d3 ; Cumulative -(An) BCD results
00002956  7800                    4084                  move.l #$00000000,d4 ; Cumulative number of times C was set
00002958  7A00                    4085                  move.l #$00000000,d5 ; Cumulative Register BCD results
0000295A  2C3C 00000099           4086                  move.l #$00000099,d6 ; Inner loop counter
00002960  2E3C 00000099           4087                  move.l #$00000099,d7 ; Outer loop counter
00002966                          4088  
00002966  2007                    4089  ABCD_OUTER2:    move.l d7,d0
00002968  2206                    4090  ABCD_INNER2:    move.l d6,d1
0000296A  003C 0010               4091                  ori.b #$10,CCR      ; Set X Flag
0000296E  207C 00000110           4092                  move.l #$00000110,a0 ; Address pointer-X
00002974  227C 00000120           4093                  move.l #$00000120,a1 ; Address pointer-Y
0000297A  1140 FFFF               4094                  move.b d0,-1(a0)
0000297E  1341 FFFF               4095                  move.b d1,-1(a1)
00002982                          4096                  
00002982  C300                    4097                  abcd d0,d1
00002984  6400 0004               4098                  bcc ABCD_NO_C3          ; Check C Flag  bcc/bcs 0
00002988  5284                    4099                  add.l #1,d4
0000298A  DA81                    4100  ABCD_NO_C3:     add.l d1,d5
0000298C                          4101                  
0000298C  C308                    4102                  abcd -(a0),-(a1)
0000298E  6400 0004               4103                  bcc ABCD_NO_C4          ; Check C Flag  bcc/bcs 0
00002992  5284                    4104                  add.l #1,d4
00002994  D611                    4105  ABCD_NO_C4:     add.b (a1),d3
00002996                          4106  
00002996                          4107  
00002996  51CE FFD0               4108                  dbf d6,ABCD_INNER2
0000299A  2C3C 00000099           4109                  move.l #$00000099,d6
000029A0  51CF FFC4               4110                  dbf d7,ABCD_OUTER2
000029A4  0C84 00005B60           4111                  cmpi.l #$00005B60,d4  ; Check the cumulative results
Line 4112 ERROR: Invalid syntax
000029AA                          4112                  bne ABCD_FAIL;                 
000029AA  0C85 001CCFC8           4113                  cmpi.l #$001CCFC8,d5
Line 4114 ERROR: Invalid syntax
000029B0                          4114                  bne ABCD_FAIL;                
000029B0  0C83 00000034           4115                  cmpi.l #$00000034,d3
Line 4116 ERROR: Invalid syntax
000029B6                          4116                  bne ABCD_FAIL;                
000029B6                          4117  
000029B6                          4118              ; Quick check of Z Flag
000029B6  103C 0000               4119                  move.b #$00,d0 
000029BA  123C 0000               4120                  move.b #$00,d1 
000029BE  44FC 0000               4121                  move #$00,CCR              ; Set Z flag to 0
000029C2  C101                    4122                  abcd d1,d0                  ; Should NOT set Z Flag to 1
Line 4123 ERROR: Invalid syntax
000029C4                          4123                  beq ABCD_FAIL;                       ; Check Z Flag  beq/bne
000029C4                          4124                  
000029C4  103C 0001               4125                  move.b #$01,d0 
000029C8  123C 0000               4126                  move.b #$00,d1 
000029CC  44FC 0004               4127                  move #$04,CCR              ; Set Z flag to 0
000029D0  C101                    4128                  abcd d1,d0                  ; Should NOT set Z Flag to 1
Line 4129 ERROR: Invalid syntax
000029D2                          4129                  beq ABCD_FAIL;                       ; Check Z Flag  beq/bne
000029D2                          4130                  
000029D2  307C FF00               4131                  movea #TESTSTATUS,a0
000029D6  117C 0001 001D          4132                  move.b #$1,$1d(a0)
000029DC  4E75                    4133                  rts   
000029DE                          4134  
000029DE                          4135  ABCD_FAIL:
000029DE  307C FF00               4136      movea #TESTSTATUS,a0
000029E2  117C 0002 001D          4137      move.b #$2,$1d(a0)
000029E8  4E75                    4138      rts
000029EA                          4139  
000029EA                          4140  ;-----------------------------------------------------------
000029EA                          4141  ;-----------------------------------------------------------
000029EA                          4142  ; OPCODE : SBCD
000029EA                          4143  ;-----------------------------------------------------------
000029EA                          4144  ;-----------------------------------------------------------
000029EA                          4145  op_SBCD: 
000029EA                          4146  
000029EA                          4147      ; Test with X Flag CLEARED
000029EA  207C 00000110           4148                  move.l #$00000110,a0 ; Address pointer-X
000029F0  227C 00000120           4149                  move.l #$00000120,a1 ; Address pointer-Y
000029F6  7000                    4150                  move.l #$00000000,d0 ; BCD byte-X
000029F8  7200                    4151                  move.l #$00000000,d1 ; BCD byte-Y
000029FA  7400                    4152                  move.l #$00000000,d2
000029FC  7600                    4153                  move.l #$00000000,d3 ; Cumulative -(An) BCD results
000029FE  7800                    4154                  move.l #$00000000,d4 ; Cumulative number of times C was set
00002A00  7A00                    4155                  move.l #$00000000,d5 ; Cumulative Register BCD results
00002A02  2C3C 00000099           4156                  move.l #$00000099,d6 ; Inner loop counter
00002A08  2E3C 00000099           4157                  move.l #$00000099,d7 ; Outer loop counter
00002A0E                          4158  
00002A0E  2007                    4159  SBCD_OUTER1:    move.l d7,d0
00002A10  2206                    4160  SBCD_INNER1:    move.l d6,d1
00002A12  023C 00EF               4161                  andi.b #$EF,CCR     ; Clear X Flag
00002A16  207C 00000110           4162                  move.l #$00000110,a0 ; Address pointer-X
00002A1C  227C 00000120           4163                  move.l #$00000120,a1 ; Address pointer-Y
00002A22  1140 FFFF               4164                  move.b d0,-1(a0)
00002A26  1341 FFFF               4165                  move.b d1,-1(a1)
00002A2A                          4166                  
00002A2A  8300                    4167                  sbcd d0,d1
00002A2C  6400 0004               4168                  bcc SBCD_NO_C1          ; Check C Flag  bcc/bcs 0
00002A30  5284                    4169                  add.l #1,d4
00002A32  DA81                    4170  SBCD_NO_C1:     add.l d1,d5
00002A34                          4171                  
00002A34  8308                    4172                  sbcd -(a0),-(a1)
00002A36  6400 0004               4173                  bcc SBCD_NO_C2          ; Check C Flag  bcc/bcs 0
00002A3A  5284                    4174                  add.l #1,d4
00002A3C  D611                    4175  SBCD_NO_C2:     add.b (a1),d3
00002A3E                          4176  
00002A3E                          4177  
00002A3E  51CE FFD0               4178                  dbf d6,SBCD_INNER1
00002A42  2C3C 00000099           4179                  move.l #$00000099,d6
00002A48  51CF FFC4               4180                  dbf d7,SBCD_OUTER1
00002A4C  0C84 00005C0A           4181                  cmpi.l #$00005C0A,d4  ; Check the cumulative results
Line 4182 ERROR: Invalid syntax
00002A52                          4182                  bne SBCD_FAIL;                 
00002A52  0C85 001C459E           4183                  cmpi.l #$001C459E,d5
Line 4184 ERROR: Invalid syntax
00002A58                          4184                  bne SBCD_FAIL;                
00002A58  0C83 0000009E           4185                  cmpi.l #$0000009E,d3
Line 4186 ERROR: Invalid syntax
00002A5E                          4186                  bne SBCD_FAIL;                
00002A5E                          4187  
00002A5E                          4188      ; Test with X Flag SET
00002A5E  207C 00000110           4189                  move.l #$00000110,a0 ; Address pointer-X
00002A64  227C 00000120           4190                  move.l #$00000120,a1 ; Address pointer-Y
00002A6A  7000                    4191                  move.l #$00000000,d0 ; BCD byte-X
00002A6C  7200                    4192                  move.l #$00000000,d1 ; BCD byte-Y
00002A6E  7400                    4193                  move.l #$00000000,d2
00002A70  7600                    4194                  move.l #$00000000,d3 ; Cumulative -(An) BCD results
00002A72  7800                    4195                  move.l #$00000000,d4 ; Cumulative number of times C was set
00002A74  7A00                    4196                  move.l #$00000000,d5 ; Cumulative Register BCD results
00002A76  2C3C 00000099           4197                  move.l #$00000099,d6 ; Inner loop counter
00002A7C  2E3C 00000099           4198                  move.l #$00000099,d7 ; Outer loop counter
00002A82                          4199  
00002A82  2007                    4200  SBCD_OUTER2:    move.l d7,d0
00002A84  2206                    4201  SBCD_INNER2:    move.l d6,d1
00002A86  003C 0010               4202                  ori.b #$10,CCR      ; Set X Flag
00002A8A  207C 00000110           4203                  move.l #$00000110,a0 ; Address pointer-X
00002A90  227C 00000120           4204                  move.l #$00000120,a1 ; Address pointer-Y
00002A96  1140 FFFF               4205                  move.b d0,-1(a0)
00002A9A  1341 FFFF               4206                  move.b d1,-1(a1)
00002A9E                          4207                  
00002A9E  8300                    4208                  sbcd d0,d1
00002AA0  6400 0004               4209                  bcc SBCD_NO_C3          ; Check C Flag  bcc/bcs 0
00002AA4  5284                    4210                  add.l #1,d4
00002AA6  DA81                    4211  SBCD_NO_C3:     add.l d1,d5
00002AA8                          4212                  
00002AA8  8308                    4213                  sbcd -(a0),-(a1)
00002AAA  6400 0004               4214                  bcc SBCD_NO_C4          ; Check C Flag  bcc/bcs 0
00002AAE  5284                    4215                  add.l #1,d4
00002AB0  D611                    4216  SBCD_NO_C4:     add.b (a1),d3
00002AB2                          4217  
00002AB2  51CE FFD0               4218                  dbf d6,SBCD_INNER2
00002AB6  2C3C 00000099           4219                  move.l #$00000099,d6
00002ABC  51CF FFC4               4220                  dbf d7,SBCD_OUTER2
00002AC0  0C84 00005CA4           4221                  cmpi.l #$00005CA4,d4  ; Check the cumulative results
Line 4222 ERROR: Invalid syntax
00002AC6                          4222                  bne SBCD_FAIL;                 
00002AC6  0C85 001C5C66           4223                  cmpi.l #$001C5C66,d5
Line 4224 ERROR: Invalid syntax
00002ACC                          4224                  bne SBCD_FAIL;                
00002ACC  0C83 0000009E           4225                  cmpi.l #$0000009E,d3
Line 4226 ERROR: Invalid syntax
00002AD2                          4226                  bne SBCD_FAIL;                
00002AD2                          4227  
00002AD2                          4228  
00002AD2                          4229              ; Quick check of Z Flag
00002AD2  103C 0000               4230                  move.b #$00,d0 
00002AD6  123C 0000               4231                  move.b #$00,d1 
00002ADA  44FC 0000               4232                  move #$00,CCR              ; Set Z flag to 0
00002ADE  8101                    4233                  sbcd d1,d0                  ; Should NOT set Z Flag to 1
Line 4234 ERROR: Invalid syntax
00002AE0                          4234                  beq SBCD_FAIL;                       ; Check Z Flag  beq/bne
00002AE0                          4235  
00002AE0  103C 0001               4236                  move.b #$01,d0 
00002AE4  123C 0000               4237                  move.b #$00,d1 
00002AE8  44FC 0004               4238                  move #$04,CCR              ; Set Z flag to 0
00002AEC  8101                    4239                  sbcd d1,d0                  ; Should NOT set Z Flag to 1
Line 4240 ERROR: Invalid syntax
00002AEE                          4240                  beq SBCD_FAIL;                       ; Check Z Flag  beq/bne
00002AEE                          4241  
00002AEE  307C FF00               4242                  movea #TESTSTATUS,a0
00002AF2  117C 0001 001E          4243                  move.b #$1,$1e(a0)
00002AF8  4E75                    4244                  rts
00002AFA                          4245  
00002AFA                          4246  SBCD_FAIL:
00002AFA  307C FF00               4247      movea #TESTSTATUS,a0
00002AFE  117C 0002 001E          4248      move.b #$2,$1e(a0)
00002B04  4E75                    4249      rts  
00002B06                          4250  ;-----------------------------------------------------------
00002B06                          4251  ;-----------------------------------------------------------
00002B06                          4252  ; OPCODE : NBCD
00002B06                          4253  ;-----------------------------------------------------------
00002B06                          4254  ;-----------------------------------------------------------
00002B06                          4255  op_NBCD: 
00002B06                          4256      
00002B06                          4257         ; NBCD to a  Register
00002B06                          4258         
00002B06  7000                    4259                  move.l #$00000000,d0 ; BCD byte
00002B08  7200                    4260                  move.l #$00000000,d1 
00002B0A  7400                    4261                  move.l #$00000000,d2
00002B0C  7600                    4262                  move.l #$00000000,d3 ; Cumulative number of times Z was set
00002B0E  7800                    4263                  move.l #$00000000,d4 ; Cumulative number of times C was set
00002B10  7A00                    4264                  move.l #$00000000,d5 ; Cumulative BCD results
00002B12  2C3C 00000099           4265                  move.l #$00000099,d6
00002B18  2E3C 00000099           4266                  move.l #$00000099,d7 ; Loop counter
00002B1E                          4267  
00002B1E  2007                    4268  NBCD_LOOP:      move.l d7,d0
00002B20  44FC 0004               4269                  move #$04,CCR        ; Set Z flag to 0
00002B24                          4270  
00002B24  4800                    4271                  nbcd d0
00002B26                          4272                  
00002B26  6400 0004               4273                  bcc NBCD_NO_C         ; Check C Flag 
00002B2A  5284                    4274                  add.l #1,d4
00002B2C  6600 0004               4275  NBCD_NO_C:      bne NBCD_NO_Z         ; Check Z Flag 
00002B30  5283                    4276                  add.l #1,d3
00002B32  DA80                    4277  NBCD_NO_Z:      add.l d0,d5         ; Add results into d5
00002B34                          4278  
00002B34  51CF FFE8               4279                  dbf d7,NBCD_LOOP
00002B38                          4280                  
00002B38  0C83 00000001           4281                  cmpi.l #$00000001,d3  ; Check the cumulative results
Line 4282 ERROR: Invalid syntax
00002B3E                          4282                  bne NBCD_FAIL;                 
00002B3E  0C84 00000099           4283                  cmpi.l #$00000099,d4
Line 4284 ERROR: Invalid syntax
00002B44                          4284                  bne NBCD_FAIL;                
00002B44  0C85 00002E3B           4285                  cmpi.l #$00002E3B,d5
Line 4286 ERROR: Invalid syntax
00002B4A                          4286                  bne NBCD_FAIL;     
00002B4A                          4287             
00002B4A                          4288  
00002B4A                          4289         ; NBCD to a memory location
00002B4A                          4290         
00002B4A  7000                    4291                  move.l #$00000000,d0 ; BCD byte
00002B4C  7200                    4292                  move.l #$00000000,d1 
00002B4E  7400                    4293                  move.l #$00000000,d2
00002B50  7600                    4294                  move.l #$00000000,d3 ; Cumulative number of times Z was set
00002B52  7800                    4295                  move.l #$00000000,d4 ; Cumulative number of times C was set
00002B54  7A00                    4296                  move.l #$00000000,d5 ; Cumulative BCD results
00002B56  2C3C 00000099           4297                  move.l #$00000099,d6
00002B5C  2E3C 00000099           4298                  move.l #$00000099,d7 ; Loop counter
00002B62                          4299  
00002B62  11C7 0100               4300  NBCD_LOOP1:     move.b d7,$00000100
00002B66  44FC 0004               4301                  move #$04,CCR        ; Set Z flag to 0
00002B6A                          4302  
00002B6A  4838 0100               4303                  nbcd $00000100
00002B6E  1038 0100               4304                  move.b $00000100,d0
00002B72                          4305                  
00002B72  6400 0004               4306                  bcc NBCD_NO_C1        ; Check C Flag 
00002B76  5284                    4307                  add.l #1,d4
00002B78  6600 0004               4308  NBCD_NO_C1:     bne NBCD_NO_Z1        ; Check Z Flag 
00002B7C  5283                    4309                  add.l #1,d3
00002B7E  DA80                    4310  NBCD_NO_Z1:     add.l d0,d5         ; Add results into d5
00002B80                          4311  
00002B80  51CF FFE0               4312                  dbf d7,NBCD_LOOP1
00002B84                          4313                  
00002B84  0C83 00000001           4314                  cmpi.l #$00000001,d3  ; Check the cumulative results
Line 4315 ERROR: Invalid syntax
00002B8A                          4315                  bne NBCD_FAIL;                 
00002B8A  0C84 00000000           4316                  cmpi.l #$00000000,d4
Line 4317 ERROR: Invalid syntax
00002B90                          4317                  bne NBCD_FAIL;                
00002B90  0C85 00002E3B           4318                  cmpi.l #$00002E3B,d5
Line 4319 ERROR: Invalid syntax
00002B96                          4319                  bne NBCD_FAIL;     
00002B96                          4320             
00002B96  307C FF00               4321                  movea #TESTSTATUS,a0
00002B9A  117C 0001 001F          4322                  move.b #$1,$1f(a0)
00002BA0  4E75                    4323                  rts   
00002BA2                          4324  
00002BA2                          4325  NBCD_FAIL:
00002BA2  307C FF00               4326      movea #TESTSTATUS,a0
00002BA6  117C 0002 001F          4327      move.b #$2,$1f(a0)
00002BAC  4E75                    4328      rts
00002BAE                          4329                 
00002BAE                          4330  ;-----------------------------------------------------------
00002BAE                          4331  ;-----------------------------------------------------------
00002BAE                          4332  ; OPCODE : TRAPV
00002BAE                          4333  ;-----------------------------------------------------------
00002BAE                          4334  ;-----------------------------------------------------------
00002BAE                          4335  op_TRAPV: 
00002BAE                          4336  
00002BAE                          4337      ; TRAPV will set d0 to 12345678 if V flag is set
00002BAE                          4338      
00002BAE  7000                    4339                  move.l #$00000000,d0 ; Clear d0
00002BB0                          4340                  
00002BB0  44FC 0000               4341                  move #$00,CCR        ; Clear V flag
00002BB4  4E76                    4342                  trapv
00002BB6  0C80 00000000           4343                  cmpi.l #$00000000,d0  ; Check of d0 was updated (should not be_)
Line 4344 ERROR: Invalid syntax
00002BBC                          4344                  bne TRAPV_FAIL;       
00002BBC                          4345  
00002BBC  44FC 0002               4346                 move #$02,CCR        ; Set V flag
00002BC0  4E76                    4347                 trapv
00002BC2  0C80 12345678           4348                 cmpi.l #$12345678,d0  ; Check of d0 was updated (should not be_)
Line 4349 ERROR: Invalid syntax
00002BC8                          4349                 bne TRAPV_FAIL;       
00002BC8                          4350  
00002BC8  307C FF00               4351                 movea #TESTSTATUS,a0
00002BCC  117C 0001 0020          4352                 move.b #$1,$20(a0)
00002BD2  4E75                    4353                 rts   
00002BD4                          4354  
00002BD4                          4355  TRAPV_FAIL:
00002BD4  307C FF00               4356      movea #TESTSTATUS,a0
00002BD8  117C 0002 0020          4357      move.b #$2,$20(a0)
00002BDE  4E75                    4358      rts
00002BE0                          4359                 
00002BE0                          4360  ;-----------------------------------------------------------
00002BE0                          4361  ;-----------------------------------------------------------
00002BE0                          4362  ; OPCODE : RTR
00002BE0                          4363  ;-----------------------------------------------------------
00002BE0                          4364  ;-----------------------------------------------------------
00002BE0                          4365  
00002BE0                          4366  op_RTR: 
00002BE0                          4367      
00002BE0  41F9 00002BEE           4368                  lea RTR_DONE,a0
00002BE6  2F08                    4369                  move.l a0,-(a7)     ; push destination PC to the stack
00002BE8  3F3C FF15               4370                  move.w #$FF15,-(a7)       ; push flags=0xFFFF to the stack
00002BEC  4E77                    4371                  rtr
00002BEE                          4372  
00002BEE  40C0                    4373  RTR_DONE:       move SR,d0
00002BF0  0240 001F               4374                  andi #$1F,d0
00002BF4  0C40 0015               4375                  cmpi #$15,d0
Line 4376 ERROR: Invalid syntax
00002BF8                          4376                  bne RTR_FAIL;
00002BF8                          4377                  
00002BF8  307C FF00               4378                  movea #TESTSTATUS,a0
00002BFC  117C 0001 0021          4379                  move.b #$1,$21(a0)
00002C02  4E75                    4380                  rts   
00002C04                          4381  
00002C04                          4382     
00002C04  283C 44444444           4383  BSR_FAR2:       move.l #$44444444,d4
00002C0A  4E75                    4384                  rts
00002C0C                          4385  
00002C0C                          4386  RTR_FAIL:
00002C0C  307C FF00               4387      movea #TESTSTATUS,a0
00002C10  117C 0001 0021          4388      move.b #$1,$21(a0)
00002C16  4E75                    4389      rts
00002C18                          4390  
00002C18                          4391  ;-----------------------------------------------------------
00002C18                          4392  ;-----------------------------------------------------------
00002C18                          4393  ; OPCODE : BCC
00002C18                          4394  ;-----------------------------------------------------------
00002C18                          4395  ;-----------------------------------------------------------
00002C18                          4396  
00002C18  44FC 0000               4397  op_BCC:         move #$00,CCR
Line 4398 ERROR: Branch instruction displacement is out of range or invalid
00002C1C  6200                    4398                  bhi.s BCC1            ; Higher Than         C=0 AND Z=0
Line 4399 ERROR: Invalid syntax
00002C1E                          4399                  bra BCC_FAIL;
00002C1E                          4400                  
00002C1E  44FC 0001               4401  BCC1:           move #$01,CCR
00002C22  6300 0002               4402                  bls.w BCC2            ; Lower or Same       C=1 OR Z=1
Line 4403 ERROR: Invalid syntax
00002C26                          4403                  bra BCC_FAIL;
00002C26                          4404                   
00002C26  44FC 0000               4405  BCC2:           move #$00,CCR
Line 4406 ERROR: Branch instruction displacement is out of range or invalid
00002C2A  6400                    4406                  bcc.s BCC3            ; Carry Clear         C=0
Line 4407 ERROR: Invalid syntax
00002C2C                          4407                  bra BCC_FAIL;
00002C2C                          4408                     
00002C2C  44FC 0001               4409  BCC3:           move #$01,CCR
00002C30  6500 0002               4410                  bcs.w BCC4            ; Carry Set           C=1
Line 4411 ERROR: Invalid syntax
00002C34                          4411                  bra BCC_FAIL;
00002C34                          4412                     
00002C34  44FC 0000               4413  BCC4:           move #$00,CCR
Line 4414 ERROR: Branch instruction displacement is out of range or invalid
00002C38  6600                    4414                  bne.s BCC5            ; Not Equal           Z=0
Line 4415 ERROR: Invalid syntax
00002C3A                          4415                  bra BCC_FAIL;
00002C3A                          4416                       
00002C3A  44FC 0004               4417  BCC5:           move #$04,CCR
00002C3E  6700 0002               4418                  beq.w BCC6            ; Equal               Z=1
Line 4419 ERROR: Invalid syntax
00002C42                          4419                  bra BCC_FAIL;
00002C42                          4420                         
00002C42  44FC 0000               4421  BCC6:           move #$00,CCR
Line 4422 ERROR: Branch instruction displacement is out of range or invalid
00002C46  6800                    4422                  bvc.s BCC7            ; V Clear             V=0
Line 4423 ERROR: Invalid syntax
00002C48                          4423                  bra BCC_FAIL;
00002C48                          4424                           
00002C48  44FC 0002               4425  BCC7:           move #$02,CCR
00002C4C  6900 0002               4426                  bvs.w BCC8            ; V Set               V=1
Line 4427 ERROR: Invalid syntax
00002C50                          4427                  bra BCC_FAIL;
00002C50                          4428                            
00002C50  44FC 0000               4429  BCC8:           move #$00,CCR
Line 4430 ERROR: Branch instruction displacement is out of range or invalid
00002C54  6A00                    4430                  bpl.s BCC9            ; Plus                N=0
Line 4431 ERROR: Invalid syntax
00002C56                          4431                  bra BCC_FAIL;
00002C56                          4432                             
00002C56  44FC 0008               4433  BCC9:           move #$08,CCR
00002C5A  6B00 0002               4434                  bmi.w BCC10           ; Minus               N=1
Line 4435 ERROR: Invalid syntax
00002C5E                          4435                  bra BCC_FAIL;
00002C5E                          4436                              
00002C5E  44FC 0000               4437  BCC10:          move #$00,CCR
Line 4438 ERROR: Branch instruction displacement is out of range or invalid
00002C62  6C00                    4438                  bge.s BCC11           ; Greater or Equal    N=V
Line 4439 ERROR: Invalid syntax
00002C64                          4439                  bra BCC_FAIL;
00002C64                          4440                               
00002C64  44FC 0002               4441  BCC11:          move #$02,CCR
00002C68  6D00 0002               4442                  blt.w BCC12           ; Less Than           N!=V
Line 4443 ERROR: Invalid syntax
00002C6C                          4443                  bra BCC_FAIL;
00002C6C                          4444                                 
00002C6C  44FC 000A               4445  BCC12:          move #$0A,CCR
Line 4446 ERROR: Branch instruction displacement is out of range or invalid
00002C70  6E00                    4446                  bgt.s BCC13           ; Greater Than        N=V  AND Z=0
Line 4447 ERROR: Invalid syntax
00002C72                          4447                  bra BCC_FAIL;
00002C72                          4448                                  
00002C72  44FC 0006               4449  BCC13:          move #$06,CCR
00002C76  6F00 0002               4450                  ble.w BCC14           ; Less Than or Equal  N!=V AND Z=1
Line 4451 ERROR: Invalid syntax
00002C7A                          4451                  bra BCC_FAIL;
00002C7A                          4452                 
00002C7A                          4453  
00002C7A  307C FF00               4454  BCC14:          movea #TESTSTATUS,a0
00002C7E  117C 0001 0022          4455                  move.b #$1,$22(a0)
00002C84  4E75                    4456                  rts
00002C86                          4457    
00002C86                          4458  
00002C86                          4459  BCC_FAIL:
00002C86  307C FF00               4460      movea #TESTSTATUS,a0
00002C8A  117C 0002 0022          4461      move.b #$2,$22(a0)
00002C90  4E75                    4462      rts
00002C92                          4463  
00002C92                          4464  ;-----------------------------------------------------------
00002C92                          4465  ;-----------------------------------------------------------
00002C92                          4466  ; OPCODE : DBCC
00002C92                          4467  ;-----------------------------------------------------------
00002C92                          4468  ;-----------------------------------------------------------
00002C92                          4469  
00002C92  7003                    4470  op_DBCC:        move.l #$00000003,d0    ; Loop counter
00002C94  7200                    4471                  move.l #$00000000,d1    ; Accumulator
00002C96  44FC 0000               4472                  move #$00,CCR
00002C9A                          4473                  
00002C9A  5201                    4474  DBCC_LOOP1:     addi.b #$1,d1
00002C9C  51C8 FFFC               4475                  dbf d0,DBCC_LOOP1
00002CA0                          4476                  
00002CA0  0C81 00000004           4477                  cmpi.l #$00000004,d1  ; Check Accumulator results
Line 4478 ERROR: Invalid syntax
00002CA6                          4478                  bne DBCC_FAIL;       
00002CA6                          4479                    
00002CA6  5201                    4480  DBCC_LOOP2:     addi.b #$1,d1
00002CA8  54C8 FFFC               4481                  dbcc d0,DBCC_LOOP2    ; Dont loop
00002CAC                          4482                  
00002CAC  0C81 00000005           4483                  cmpi.l #$00000005,d1  ; Check Accumulator results
Line 4484 ERROR: Invalid syntax
00002CB2                          4484                  bne DBCC_FAIL;       
00002CB2                          4485              
00002CB2  307C FF00               4486                  movea #TESTSTATUS,a0
00002CB6  117C 0001 0023          4487                  move.b #$1,$23(a0)
00002CBC  4E75                    4488                  rts
00002CBE                          4489                  
00002CBE                          4490  DBCC_FAIL:
00002CBE  307C FF00               4491      movea #TESTSTATUS,a0
00002CC2  117C 0002 0023          4492      move.b #$2,$23(a0)
00002CC8  4E75                    4493      rts
00002CCA                          4494  
00002CCA                          4495  ;-----------------------------------------------------------
00002CCA                          4496  ;-----------------------------------------------------------
00002CCA                          4497  ; OPCODE : SCC
00002CCA                          4498  ;-----------------------------------------------------------
00002CCA                          4499  ;-----------------------------------------------------------
00002CCA                          4500  
00002CCA  44FC 0001               4501  op_SCC:         move #$01,CCR             
00002CCE  54F9 00010000           4502                  scc $00010000                   ; Clear the EA byte
00002CD4  0C39 0000 00010000      4503                  cmpi.b #$00,$00010000
Line 4504 ERROR: Invalid syntax
00002CDC                          4504                  bne SCC_FAIL;       
00002CDC                          4505  
00002CDC  44FC 0000               4506                  move #$00,CCR
00002CE0  54F9 00010000           4507                  scc $00010000                   ; Set the EA byte to 0xFF
00002CE6  0C39 00FF 00010000      4508                  cmpi.b #$FF,$00010000
Line 4509 ERROR: Invalid syntax
00002CEE                          4509                  bne SCC_FAIL;       
00002CEE                          4510  
00002CEE  307C FF00               4511                  movea #TESTSTATUS,a0
00002CF2  117C 0001 0024          4512                  move.b #$1,$24(a0)
00002CF8  4E75                    4513                  rts
00002CFA                          4514                  
00002CFA                          4515  SCC_FAIL:
00002CFA  307C FF00               4516      movea #TESTSTATUS,a0
00002CFE  117C 0002 0024          4517      move.b #$2,$24(a0)
00002D04  4E75                    4518      rts
00002D06                          4519  
00002D06                          4520  ;-----------------------------------------------------------
00002D06                          4521  ;-----------------------------------------------------------
00002D06                          4522  ; OPCODE : ADDQ
00002D06                          4523  ;-----------------------------------------------------------
00002D06                          4524  ;-----------------------------------------------------------
00002D06                          4525  
00002D06                          4526  op_ADDQ:       
00002D06                          4527  
00002D06                          4528      ; BYTE
00002D06  203C 000000FF           4529                  move.l #$000000FF,d0    ; Loop counter
00002D0C  7200                    4530                  move.l #$00000000,d1    ; Flag results accumulator
00002D0E  7400                    4531                  move.l #$00000000,d2    ; Data results accumulator
00002D10  7600                    4532                  move.l #$00000000,d3   
00002D12  7800                    4533                  move.l #$00000000,d4    
00002D14  7A00                    4534                  move.l #$00000000,d5    
00002D16  7C00                    4535                  move.l #$00000000,d6    
00002D18  7E00                    4536                  move.l #$00000000,d7    
00002D1A                          4537  
00002D1A  5605                    4538  ADDQ_LOOP1:     addq.b #3,d5          
00002D1C  40C6                    4539                  move SR,d6      
00002D1E  0286 0000001F           4540                  andi.l #$1F,d6        ; Isolate flags
00002D24  D286                    4541                  add.l d6,d1           ; Copy flag results into accumulator
00002D26  D485                    4542                  add.l d5,d2           ; Copy data results into data accumulator
00002D28  51C8 FFF0               4543                  dbf d0,ADDQ_LOOP1
00002D2C                          4544                  
00002D2C  0C81 0000043D           4545                  cmpi.l #$0000043D,d1
Line 4546 ERROR: Invalid syntax
00002D32                          4546                  bne ADDQ_FAIL;       
00002D32  0C82 00007F80           4547                  cmpi.l #$00007F80,d2
Line 4548 ERROR: Invalid syntax
00002D38                          4548                  bne ADDQ_FAIL;       
00002D38                          4549  
00002D38                          4550  
00002D38                          4551      ; WORD
00002D38  203C 000000FF           4552                  move.l #$000000FF,d0    ; Loop counter
00002D3E  7200                    4553                  move.l #$00000000,d1    ; Flag results accumulator
00002D40  7400                    4554                  move.l #$00000000,d2    ; Data results accumulator
00002D42  7600                    4555                  move.l #$00000000,d3   
00002D44  7800                    4556                  move.l #$00000000,d4    
00002D46  2A3C 0000FFF0           4557                  move.l #$0000FFF0,d5    
00002D4C  7C00                    4558                  move.l #$00000000,d6    
00002D4E  7E00                    4559                  move.l #$00000000,d7   
00002D50  207C 00000100           4560                  move.l #$00000100,a0   
00002D56                          4561  
00002D56  5A45                    4562  ADDQ_LOOP2:     addq.w #5,d5   
00002D58  40C6                    4563                  move SR,d6      
00002D5A  0286 0000001F           4564                  andi.l #$1F,d6        ; Isolate flags
00002D60  D286                    4565                  add.l d6,d1           ; Copy flag results into accumulator
00002D62  D485                    4566                  add.l d5,d2           ; Copy data results into data accumulator
00002D64  51C8 FFF0               4567                  dbf d0,ADDQ_LOOP2
00002D68                          4568  
00002D68  0C81 00000029           4569                  cmpi.l #$00000029,d1
Line 4570 ERROR: Invalid syntax
00002D6E                          4570                  bne ADDQ_FAIL;       
00002D6E  0C82 00057280           4571                  cmpi.l #$00057280,d2
Line 4572 ERROR: Invalid syntax
00002D74                          4572                  bne ADDQ_FAIL;       
00002D74                          4573  
00002D74                          4574  
00002D74                          4575      ; LONG
00002D74  203C 000000FF           4576                  move.l #$000000FF,d0    ; Loop counter
00002D7A  7200                    4577                  move.l #$00000000,d1    ; Flag results accumulator
00002D7C  7400                    4578                  move.l #$00000000,d2    ; Data results accumulator
00002D7E  7600                    4579                  move.l #$00000000,d3   
00002D80  7800                    4580                  move.l #$00000000,d4    
00002D82  7AF0                    4581                  move.l #$FFFFFFF0,d5    
00002D84  7C00                    4582                  move.l #$00000000,d6    
00002D86  7E00                    4583                  move.l #$00000000,d7   
00002D88                          4584  
00002D88  5285                    4585  ADDQ_LOOP3:     addq.l #1,d5          
00002D8A  40C6                    4586                  move SR,d6      
00002D8C  0286 0000001F           4587                  andi.l #$1F,d6        ; Isolate flags
00002D92  D286                    4588                  add.l d6,d1           ; Copy flag results into accumulator
00002D94  D485                    4589                  add.l d5,d2           ; Copy data results into data accumulator
00002D96  51C8 FFF0               4590                  dbf d0,ADDQ_LOOP3
00002D9A                          4591  
00002D9A  0C81 0000008D           4592                  cmpi.l #$0000008D,d1
Line 4593 ERROR: Invalid syntax
00002DA0                          4593                  bne ADDQ_FAIL;       
00002DA0  0C82 00007080           4594                  cmpi.l #$00007080,d2
Line 4595 ERROR: Invalid syntax
00002DA6                          4595                  bne ADDQ_FAIL;      
00002DA6                          4596  
00002DA6                          4597      ; Check that Flags are not updated for Address registers
00002DA6  207C 0000FFFF           4598                  move.l #$0000FFFF,a0   
00002DAC  44FC 0000               4599                  move #$00,CCR         ; Clear flags
00002DB0  5E48                    4600                  addq.w #$7,a0         
Line 4601 ERROR: Invalid syntax
00002DB2                          4601                  bcs ADDQ_FAIL;
00002DB2                          4602  
00002DB2  307C FF00               4603                  movea #TESTSTATUS,a0
00002DB6  117C 0001 0025          4604                  move.b #$1,$25(a0)
00002DBC  4E75                    4605                  rts
00002DBE                          4606          
00002DBE                          4607  ADDQ_FAIL: 
00002DBE  307C FF00               4608      movea #TESTSTATUS,a0
00002DC2  117C 0002 0025          4609      move.b #$2,$25(a0)
00002DC8  4E75                    4610      rts
00002DCA                          4611  
00002DCA                          4612  ;-----------------------------------------------------------
00002DCA                          4613  ;-----------------------------------------------------------
00002DCA                          4614  ; OPCODE : SUBQ
00002DCA                          4615  ;-----------------------------------------------------------
00002DCA                          4616  ;-----------------------------------------------------------
00002DCA                          4617  
00002DCA                          4618  op_SUBQ:       
00002DCA                          4619  
00002DCA                          4620      ; BYTE
00002DCA  203C 000000FF           4621                  move.l #$000000FF,d0    ; Loop counter
00002DD0  7200                    4622                  move.l #$00000000,d1    ; Flag results accumulator
00002DD2  243C 00001234           4623                  move.l #$00001234,d2    ; Data results accumulator
00002DD8  7600                    4624                  move.l #$00000000,d3   
00002DDA  7800                    4625                  move.l #$00000000,d4    
00002DDC  7A12                    4626                  move.l #$00000012,d5    
00002DDE  7C00                    4627                  move.l #$00000000,d6    
00002DE0  7E00                    4628                  move.l #$00000000,d7    
00002DE2                          4629  
00002DE2  5305                    4630  SUBQ_LOOP1:     subq.b #1,d5          
00002DE4  40C6                    4631                  move SR,d6      
00002DE6  0286 0000001F           4632                  andi.l #$1F,d6        ; Isolate flags
00002DEC  D286                    4633                  add.l d6,d1           ; Copy flag results into accumulator
00002DEE  D485                    4634                  add.l d5,d2           ; Copy data results into data accumulator
00002DF0  51C8 FFF0               4635                  dbf d0,SUBQ_LOOP1
00002DF4                          4636                  
00002DF4  0C81 00000417           4637                  cmpi.l #$00000417,d1
Line 4638 ERROR: Invalid syntax
00002DFA                          4638                  bne SUBQ_FAIL;       
00002DFA  0C82 000091B4           4639                  cmpi.l #$000091B4,d2
Line 4640 ERROR: Invalid syntax
00002E00                          4640                  bne SUBQ_FAIL;       
00002E00                          4641  
00002E00                          4642  
00002E00                          4643      ; WORD
00002E00  203C 000000FF           4644                  move.l #$000000FF,d0    ; Loop counter
00002E06  7200                    4645                  move.l #$00000000,d1    ; Flag results accumulator
00002E08  7400                    4646                  move.l #$00000000,d2    ; Data results accumulator
00002E0A  7600                    4647                  move.l #$00000000,d3   
00002E0C  7800                    4648                  move.l #$00000000,d4    
00002E0E  7A02                    4649                  move.l #$00000002,d5    
00002E10  7C00                    4650                  move.l #$00000000,d6    
00002E12  7E00                    4651                  move.l #$00000000,d7   
00002E14  207C 00000100           4652                  move.l #$00000100,a0   
00002E1A                          4653  
00002E1A  5B45                    4654  SUBQ_LOOP2:     subq.w #5,d5   
00002E1C  40C6                    4655                  move SR,d6      
00002E1E  0286 0000001F           4656                  andi.l #$1F,d6        ; Isolate flags
00002E24  D286                    4657                  add.l d6,d1           ; Copy flag results into accumulator
00002E26  D485                    4658                  add.l d5,d2           ; Copy data results into data accumulator
00002E28  51C8 FFF0               4659                  dbf d0,SUBQ_LOOP2
00002E2C                          4660  
00002E2C  0C81 00000811           4661                  cmpi.l #$00000811,d1
Line 4662 ERROR: Invalid syntax
00002E32                          4662                  bne SUBQ_FAIL;       
00002E32  0C82 00FD7F80           4663                  cmpi.l #$00FD7F80,d2
Line 4664 ERROR: Invalid syntax
00002E38                          4664                  bne SUBQ_FAIL;       
00002E38                          4665  
00002E38                          4666  
00002E38                          4667      ; LONG
00002E38  203C 000000FF           4668                  move.l #$000000FF,d0    ; Loop counter
00002E3E  7200                    4669                  move.l #$00000000,d1    ; Flag results accumulator
00002E40  7400                    4670                  move.l #$00000000,d2    ; Data results accumulator
00002E42  7600                    4671                  move.l #$00000000,d3   
00002E44  7800                    4672                  move.l #$00000000,d4    
00002E46  7A07                    4673                  move.l #$00000007,d5    
00002E48  7C00                    4674                  move.l #$00000000,d6    
00002E4A  7E00                    4675                  move.l #$00000000,d7   
00002E4C                          4676  
00002E4C  5385                    4677  SUBQ_LOOP3:     subq.l #1,d5          
00002E4E  40C6                    4678                  move SR,d6      
00002E50  0286 0000001F           4679                  andi.l #$1F,d6        ; Isolate flags
00002E56  D286                    4680                  add.l d6,d1           ; Copy flag results into accumulator
00002E58  D485                    4681                  add.l d5,d2           ; Copy data results into data accumulator
00002E5A  51C8 FFF0               4682                  dbf d0,SUBQ_LOOP3
00002E5E                          4683  
00002E5E  0C81 000007DD           4684                  cmpi.l #$000007DD,d1
Line 4685 ERROR: Invalid syntax
00002E64                          4685                  bne SUBQ_FAIL;       
00002E64  0C82 FFFF8680           4686                  cmpi.l #$FFFF8680,d2
Line 4687 ERROR: Invalid syntax
00002E6A                          4687                  bne SUBQ_FAIL;      
00002E6A                          4688  
00002E6A                          4689      ; Check that Flags are not updated for Address registers
00002E6A  207C 0001FFFF           4690                  move.l #$0001FFFF,a0   
00002E70  44FC 0000               4691                  move #$00,CCR         ; Clear flags
00002E74  5F48                    4692                  subq.w #$7,a0         
Line 4693 ERROR: Invalid syntax
00002E76                          4693                  bcs SUBQ_FAIL;
00002E76                          4694  
00002E76  307C FF00               4695                  movea #TESTSTATUS,a0
00002E7A  117C 0001 0026          4696                  move.b #$1,$26(a0)
00002E80  4E75                    4697                  rts
00002E82                          4698  
00002E82                          4699  SUBQ_FAIL:
00002E82  307C FF00               4700      movea #TESTSTATUS,a0
00002E86  117C 0002 0026          4701      move.b #$2,$26(a0)  
00002E8C  4E75                    4702      rts
00002E8E                          4703  
00002E8E                          4704  ;-----------------------------------------------------------
00002E8E                          4705  ;-----------------------------------------------------------
00002E8E                          4706  ; OPCODE : MOVEQ
00002E8E                          4707  ;-----------------------------------------------------------
00002E8E                          4708  ;-----------------------------------------------------------
00002E8E                          4709  
00002E8E                          4710  op_MOVEQ:     
00002E8E  7000                    4711                  move.l #$00000000,d0  
00002E90  7000                    4712                  moveq #$0,d0
Line 4713 ERROR: Invalid syntax
00002E92                          4713                  bne MOVEQ_FAIL;
00002E92  0C80 00000000           4714                  cmpi.l #$00000000,d0
Line 4715 ERROR: Invalid syntax
00002E98                          4715                  bne MOVEQ_FAIL;
00002E98                          4716  
00002E98  7000                    4717                  move.l #$00000000,d0  
00002E9A  7080                    4718                  moveq #$80,d0
Line 4719 ERROR: Invalid syntax
00002E9C                          4719                  beq MOVEQ_FAIL;
Line 4720 ERROR: Invalid syntax
00002E9C                          4720                  bpl MOVEQ_FAIL;
00002E9C  0C80 FFFFFF80           4721                  cmpi.l #$FFFFFF80,d0
Line 4722 ERROR: Invalid syntax
00002EA2                          4722                  bne MOVEQ_FAIL;
00002EA2                          4723  
00002EA2  307C FF00               4724                  movea #TESTSTATUS,a0
00002EA6  117C 0001 0027          4725                  move.b #$1,$27(a0)
00002EAC  4E75                    4726                  rts
00002EAE                          4727  
00002EAE                          4728  MOVEQ_FAIL:
00002EAE  307C FF00               4729      movea #TESTSTATUS,a0
00002EB2  117C 0002 0027          4730      move.b #$2,$27(a0)
00002EB8  4E75                    4731      rts
00002EBA                          4732     
00002EBA                          4733  ;-----------------------------------------------------------
00002EBA                          4734  ;-----------------------------------------------------------
00002EBA                          4735  ; OPCODE : DIVU
00002EBA                          4736  ;-----------------------------------------------------------
00002EBA                          4737  ;-----------------------------------------------------------
00002EBA                          4738  
00002EBA                          4739  op_DIVU:     
00002EBA                          4740  
00002EBA  203C A5A5A5A5           4741                  move.l #$a5a5a5a5,d0        ; Initial Numerator
00002EC0  223C 00005A5A           4742                  move.l #$00005a5a,d1        ; Initial Divisor
00002EC6  243C A5A5A5A5           4743                  move.l #$a5a5a5a5,d2
00002ECC  7600                    4744                  move.l #$00000000,d3
00002ECE  7800                    4745                  move.l #$00000000,d4        ; Cumulative data results
00002ED0  7A00                    4746                  move.l #$00000000,d5       ; Cumulative flag results
00002ED2  7C0E                    4747                  move.l #$0000000E,d6       ; Inner loop counter
00002ED4  7E1E                    4748                  move.l #$0000001E,d7       ; Outer loop counter
00002ED6                          4749  
00002ED6                          4750  
00002ED6  80C1                    4751  DIVU_OUTER1:    divu d1,d0               ; !! Easy68K C not always cleared
00002ED8  40C3                    4752                  move SR,d3      
00002EDA  0283 0000000C           4753                  andi.l #$0C,d3            ; Isolate flags 
00002EE0  DA83                    4754                  add.l d3,d5               ; Copy flag results into accumulator
00002EE2  D880                    4755                  add.l d0,d4               ; Copy data results into data accumulator   
00002EE4  E289                    4756                  lsr.l #$1,d1
00002EE6                          4757  
00002EE6  51CE FFEE               4758                  dbf d6,DIVU_OUTER1
00002EEA  E28A                    4759                  lsr.l #$1,d2
00002EEC  2002                    4760                  move.l d2,d0
00002EEE  223C 00005A5A           4761                  move.l #$00005a5a,d1       ; Initial Divisor
00002EF4  7C0E                    4762                  move.l #$0000000E,d6       ; Inner loop counter
00002EF6  51CF FFDE               4763                  dbf d7,DIVU_OUTER1
00002EFA                          4764                  
00002EFA  0C84 92FEDB89           4765                  cmpi.l #$92FEDB89,d4      ; Check the data results
Line 4766 ERROR: Invalid syntax
00002F00                          4766                  bne DIVU_FAIL;                
00002F00                          4767                       
00002F00  0C85 000000D8           4768                  cmpi.l #$000000d8,d5      ; Check the Flag results #FIXME: was 0x110
Line 4769 ERROR: Invalid syntax
00002F06                          4769                  bne DIVU_FAIL;                 
00002F06                          4770            
00002F06  307C FF00               4771                  movea #TESTSTATUS,a0
00002F0A  117C 0001 0028          4772                  move.b #$1,$28(a0)
00002F10  4E75                    4773                  rts
00002F12                          4774                  
00002F12                          4775  DIVU_FAIL:
00002F12  307C FF00               4776      movea #TESTSTATUS,a0
00002F16  117C 0002 0028          4777      move.b #$2,$28(a0)
00002F1C  4E75                    4778      rts
00002F1E                          4779     
00002F1E                          4780  ;-----------------------------------------------------------
00002F1E                          4781  ;-----------------------------------------------------------
00002F1E                          4782  ; OPCODE : DIVS
00002F1E                          4783  ;-----------------------------------------------------------
00002F1E                          4784  ;-----------------------------------------------------------
00002F1E                          4785  
00002F1E                          4786  op_DIVS:     
00002F1E                          4787  
00002F1E  203C A5A5A5A5           4788                  move.l #$a5a5a5a5,d0        ; Initial Numerator
00002F24  223C 00005A5A           4789                  move.l #$00005a5a,d1        ; Initial Divisor
00002F2A  243C A5A5A5A5           4790                  move.l #$a5a5a5a5,d2
00002F30  7600                    4791                  move.l #$00000000,d3
00002F32  7800                    4792                  move.l #$00000000,d4        ; Cumulative data results
00002F34  7A00                    4793                  move.l #$00000000,d5       ; Cumulative flag results
00002F36  7C0E                    4794                  move.l #$0000000E,d6       ; Inner loop counter
00002F38  7E1E                    4795                  move.l #$0000001E,d7       ; Outer loop counter
00002F3A                          4796  
00002F3A                          4797  
00002F3A  81C1                    4798  DIVS_OUTER1:    divs d1,d0               ; !! Easy68K C not always cleared
00002F3C  40C3                    4799                  move SR,d3      
00002F3E  0283 0000000C           4800                  andi.l #$0C,d3            ; Isolate flags 
00002F44  DA83                    4801                  add.l d3,d5               ; Copy flag results into accumulator
00002F46  D880                    4802                  add.l d0,d4               ; Copy data results into data accumulator   
00002F48  E289                    4803                  lsr.l #$1,d1
00002F4A                          4804  
00002F4A  51CE FFEE               4805                  dbf d6,DIVS_OUTER1
00002F4E  E28A                    4806                  lsr.l #$1,d2
00002F50  2002                    4807                  move.l d2,d0
00002F52  223C 00005A5A           4808                  move.l #$00005a5a,d1       ; Initial Divisor
00002F58  7C0E                    4809                  move.l #$0000000E,d6       ; Inner loop counter
00002F5A  51CF FFDE               4810                  dbf d7,DIVS_OUTER1
00002F5E                          4811                  
00002F5E  0C84 4EC5D057           4812                  cmpi.l #$4EC5D057,d4      ; Check the data results
Line 4813 ERROR: Invalid syntax
00002F64                          4813                  bne DIVS_FAIL;                
00002F64                          4814  
00002F64  0C85 00000078           4815                  cmpi.l #$00000078,d5      ; Check the Flag results #FIXME: was 0x38
Line 4816 ERROR: Invalid syntax
00002F6A                          4816                  bne DIVS_FAIL;                 
00002F6A                          4817            
00002F6A  307C FF00               4818                  movea #TESTSTATUS,a0
00002F6E  117C 0001 0029          4819                  move.b #$1,$29(a0)
00002F74  4E75                    4820                  rts
00002F76                          4821         
00002F76                          4822  DIVS_FAIL:
00002F76  307C FF00               4823      movea #TESTSTATUS,a0
00002F7A  117C 0002 0029          4824      move.b #$2,$29(a0)
00002F80  4E75                    4825      rts
00002F82                          4826     
00002F82                          4827  ;-----------------------------------------------------------
00002F82                          4828  ;-----------------------------------------------------------
00002F82                          4829  ; OPCODE : OR
00002F82                          4830  ;-----------------------------------------------------------
00002F82                          4831  ;-----------------------------------------------------------
00002F82                          4832  
00002F82                          4833  op_OR:   
00002F82                          4834  
00002F82                          4835    ;; <EA> to Register
00002F82                          4836  
00002F82  203C A5A5A5A5           4837                  move.l #$a5a5a5a5,d0       ; Initial Data-X  Inner loop
00002F88  223C 8167E123           4838                  move.l #$8167E123,d1       ; Initial Data-Y  Outer loop
00002F8E  243C A5A5A5A5           4839                  move.l #$a5a5a5a5,d2
00002F94  7600                    4840                  move.l #$00000000,d3
00002F96  7800                    4841                  move.l #$00000000,d4       ; Cumulative data results
00002F98  7A00                    4842                  move.l #$00000000,d5       ; Cumulative flag results
00002F9A  7C1E                    4843                  move.l #$0000001E,d6       ; Inner loop counter
00002F9C  7E1E                    4844                  move.l #$0000001E,d7       ; Outer loop counter
00002F9E  207C 00000100           4845                  move.l #$00000100,a0       ; Address for memory EA operations
00002FA4                          4846  
00002FA4                          4847  
00002FA4                          4848  OR_OUTER1:    
00002FA4                          4849   
00002FA4                          4850      ; BYTE     
00002FA4  2081                    4851                  move.l d1,(a0)
00002FA6  8010                    4852                  or.b (a0),d0             
00002FA8  40C3                    4853                  move SR,d3      
00002FAA  0283 0000000C           4854                  andi.l #$0C,d3            ; Isolate flags 
00002FB0  DA83                    4855                  add.l d3,d5               ; Copy flag results into accumulator
00002FB2  D880                    4856                  add.l d0,d4               ; Copy data results into data accumulator   
00002FB4                          4857   
00002FB4                          4858      ; WORD      
00002FB4  2081                    4859                  move.l d1,(a0)
00002FB6  8050                    4860                  or.w (a0),d0             
00002FB8  40C3                    4861                  move SR,d3      
00002FBA  0283 0000000C           4862                  andi.l #$0C,d3            ; Isolate flags 
00002FC0  DA83                    4863                  add.l d3,d5               ; Copy flag results into accumulator
00002FC2  D880                    4864                  add.l d0,d4               ; Copy data results into data accumulator   
00002FC4                          4865   
00002FC4                          4866      ; LONG      
00002FC4  2081                    4867                  move.l d1,(a0)
00002FC6  8090                    4868                  or.l (a0),d0             
00002FC8  40C3                    4869                  move SR,d3      
00002FCA  0283 0000000F           4870                  andi.l #$0F,d3            ; Isolate flags 
00002FD0  DA83                    4871                  add.l d3,d5               ; Copy flag results into accumulator
00002FD2  D880                    4872                  add.l d0,d4               ; Copy data results into data accumulator   
00002FD4                          4873                  
00002FD4                          4874                  
00002FD4  E289                    4875                  lsr.l #$1,d1
00002FD6  51CE FFCC               4876                  dbf d6,OR_OUTER1
00002FDA  E28A                    4877                  lsr.l #$1,d2
00002FDC  223C 8167E123           4878                  move.l #$8167E123,d1       ; Initial Data-Y
00002FE2  7C1E                    4879                  move.l #$0000001E,d6       ; Inner loop counter
00002FE4  51CF FFBE               4880                  dbf d7,OR_OUTER1
00002FE8                          4881                  
00002FE8  0C84 76EAC803           4882                  cmpi.l #$76EAC803,d4      ; Check the data results
Line 4883 ERROR: Invalid syntax
00002FEE                          4883                  bne OR_FAIL;                
00002FEE  0C85 00005A18           4884                  cmpi.l #$00005A18,d5      ; Check the Flag results
Line 4885 ERROR: Invalid syntax
00002FF4                          4885                  bne OR_FAIL;                
00002FF4                          4886                     
00002FF4                          4887                     
00002FF4                          4888    ;; Register to <EA>
00002FF4                          4889  
00002FF4  203C 86738374           4890                  move.l #$86738374,d0       ; Initial Data-X  Inner loop
00002FFA  223C FC55F2FE           4891                  move.l #$FC55F2FE,d1       ; Initial Data-Y  Outer loop
00003000  243C 86738374           4892                  move.l #$86738374,d2
00003006  7600                    4893                  move.l #$00000000,d3
00003008  7800                    4894                  move.l #$00000000,d4       ; Cumulative data results
0000300A  7A00                    4895                  move.l #$00000000,d5       ; Cumulative flag results
0000300C  7C1E                    4896                  move.l #$0000001E,d6       ; Inner loop counter
0000300E  7E1D                    4897                  move.l #$0000001D,d7       ; Outer loop counter
00003010  207C 00000100           4898                  move.l #$00000100,a0       ; Address for memory EA operations
00003016                          4899  
00003016                          4900  
00003016                          4901  OR_OUTER2:    
00003016                          4902   
00003016                          4903      ; BYTE     
00003016  2080                    4904                  move.l d0,(a0)
00003018  8310                    4905                  or.b d1,(a0)             
0000301A  40C3                    4906                  move SR,d3      
0000301C  0283 0000000C           4907                  andi.l #$0C,d3            ; Isolate flags 
00003022  DA83                    4908                  add.l d3,d5               ; Copy flag results into accumulator
00003024  D890                    4909                  add.l (a0),d4             ; Copy data results into data accumulator   
00003026                          4910   
00003026                          4911      ; WORD      
00003026  2080                    4912                  move.l d0,(a0)
00003028  8350                    4913                  or.w d1,(a0)  
0000302A  40C3                    4914                  move SR,d3      
0000302C  0283 0000000C           4915                  andi.l #$0C,d3            ; Isolate flags 
00003032  DA83                    4916                  add.l d3,d5               ; Copy flag results into accumulator
00003034  D890                    4917                  add.l (a0),d4             ; Copy data results into data accumulator   
00003036                          4918   
00003036                          4919      ; LONG      
00003036  2080                    4920                  move.l d0,(a0)
00003038  8390                    4921                  or.l d1,(a0)  
0000303A  40C3                    4922                  move SR,d3      
0000303C  0283 0000000F           4923                  andi.l #$0F,d3            ; Isolate flags 
00003042  DA83                    4924                  add.l d3,d5               ; Copy flag results into accumulator
00003044  D890                    4925                  add.l (a0),d4             ; Copy data results into data accumulator   
00003046                          4926                  
00003046                          4927                  
00003046  E289                    4928                  lsr.l #$1,d1
00003048  51CE FFCC               4929                  dbf d6,OR_OUTER2
0000304C  E28A                    4930                  lsr.l #$1,d2
0000304E  223C 8167E123           4931                  move.l #$8167E123,d1       ; Initial Data-Y
00003054  7C1E                    4932                  move.l #$0000001E,d6       ; Inner loop counter
00003056  51CF FFBE               4933                  dbf d7,OR_OUTER2
0000305A                          4934                  
0000305A  0C84 FA82B9E4           4935                  cmpi.l #$FA82B9E4,d4      ; Check the data results
Line 4936 ERROR: Invalid syntax
00003060                          4936                  bne OR_FAIL;                
00003060  0C85 00005730           4937                  cmpi.l #$00005730,d5      ; Check the Flag results
Line 4938 ERROR: Invalid syntax
00003066                          4938                  bne OR_FAIL;                 
00003066                          4939                     
00003066  307C FF00               4940                  movea #TESTSTATUS,a0
0000306A  117C 0001 002A          4941                  move.b #$1,$2a(a0)
00003070  4E75                    4942                  rts
00003072                          4943                  
00003072                          4944  OR_FAIL:
00003072  307C FF00               4945      movea #TESTSTATUS,a0
00003076  117C 0002 002A          4946      move.b #$2,$2a(a0)
0000307C  4E75                    4947      rts 
0000307E                          4948  
0000307E                          4949  ;-----------------------------------------------------------
0000307E                          4950  ;-----------------------------------------------------------
0000307E                          4951  ; OPCODE : AND
0000307E                          4952  ;-----------------------------------------------------------
0000307E                          4953  ;-----------------------------------------------------------
0000307E                          4954  
0000307E                          4955  op_AND:   
0000307E                          4956  
0000307E                          4957    ;; <EA> to Register
0000307E                          4958  
0000307E  203C A5A5A5A5           4959                  move.l #$a5a5a5a5,d0       ; Initial Data-X  Inner loop
00003084  223C 8167E123           4960                  move.l #$8167E123,d1       ; Initial Data-Y  Outer loop
0000308A  243C A5A5A5A5           4961                  move.l #$a5a5a5a5,d2
00003090  7600                    4962                  move.l #$00000000,d3
00003092  7800                    4963                  move.l #$00000000,d4       ; Cumulative data results
00003094  7A00                    4964                  move.l #$00000000,d5       ; Cumulative flag results
00003096  7C1E                    4965                  move.l #$0000001E,d6       ; Inner loop counter
00003098  7E1E                    4966                  move.l #$0000001E,d7       ; Outer loop counter
0000309A  207C 00000100           4967                  move.l #$00000100,a0       ; Address for memory EA operations
000030A0                          4968  
000030A0                          4969  
000030A0                          4970  AND_OUTER1:    
000030A0                          4971   
000030A0                          4972      ; BYTE     
000030A0  2081                    4973                  move.l d1,(a0)
000030A2  C010                    4974                  and.b (a0),d0             
000030A4  40C3                    4975                  move SR,d3      
000030A6  0283 0000000C           4976                  andi.l #$0C,d3            ; Isolate flags 
000030AC  DA83                    4977                  add.l d3,d5               ; Copy flag results into accumulator
000030AE  D880                    4978                  add.l d0,d4               ; Copy data results into data accumulator   
000030B0                          4979   
000030B0                          4980      ; WORD      
000030B0  2081                    4981                  move.l d1,(a0)
000030B2  C050                    4982                  and.w (a0),d0             
000030B4  40C3                    4983                  move SR,d3      
000030B6  0283 0000000C           4984                  andi.l #$0C,d3            ; Isolate flags 
000030BC  DA83                    4985                  add.l d3,d5               ; Copy flag results into accumulator
000030BE  D880                    4986                  add.l d0,d4               ; Copy data results into data accumulator   
000030C0                          4987   
000030C0                          4988      ; LONG      
000030C0  2081                    4989                  move.l d1,(a0)
000030C2  C090                    4990                  and.l (a0),d0             
000030C4  40C3                    4991                  move SR,d3      
000030C6  0283 0000000F           4992                  andi.l #$0F,d3            ; Isolate flags 
000030CC  DA83                    4993                  add.l d3,d5               ; Copy flag results into accumulator
000030CE  D880                    4994                  add.l d0,d4               ; Copy data results into data accumulator   
000030D0                          4995                  
000030D0                          4996                  
000030D0  E289                    4997                  lsr.l #$1,d1
000030D2  51CE FFCC               4998                  dbf d6,AND_OUTER1
000030D6  E28A                    4999                  lsr.l #$1,d2
000030D8  223C 8167E123           5000                  move.l #$8167E123,d1       ; Initial Data-Y
000030DE  7C1E                    5001                  move.l #$0000001E,d6       ; Inner loop counter
000030E0  51CF FFBE               5002                  dbf d7,AND_OUTER1
000030E4                          5003                  
000030E4  0C84 CF212883           5004                  cmpi.l #$CF212883,d4      ; Check the data results
Line 5005 ERROR: Invalid syntax
000030EA                          5005                  bne AND_FAIL;                
000030EA  0C85 00002D10           5006                  cmpi.l #$00002D10,d5      ; Check the Flag results
Line 5007 ERROR: Invalid syntax
000030F0                          5007                  bne AND_FAIL;                
000030F0                          5008                     
000030F0                          5009                     
000030F0                          5010    ;; Register to <EA>
000030F0                          5011  
000030F0  203C 86738374           5012                  move.l #$86738374,d0       ; Initial Data-X  Inner loop
000030F6  223C FC55F2FE           5013                  move.l #$FC55F2FE,d1       ; Initial Data-Y  Outer loop
000030FC  243C 86738374           5014                  move.l #$86738374,d2
00003102  7600                    5015                  move.l #$00000000,d3
00003104  7800                    5016                  move.l #$00000000,d4       ; Cumulative data results
00003106  7A00                    5017                  move.l #$00000000,d5       ; Cumulative flag results
00003108  7C1E                    5018                  move.l #$0000001E,d6       ; Inner loop counter
0000310A  7E1D                    5019                  move.l #$0000001D,d7       ; Outer loop counter
0000310C  207C 00000100           5020                  move.l #$00000100,a0       ; Address for memory EA operations
00003112                          5021  
00003112                          5022  
00003112                          5023  AND_OUTER2:    
00003112                          5024   
00003112                          5025      ; BYTE     
00003112  2080                    5026                  move.l d0,(a0)
00003114  C310                    5027                  and.b d1,(a0)             
00003116  40C3                    5028                  move SR,d3      
00003118  0283 0000000C           5029                  andi.l #$0C,d3            ; Isolate flags 
0000311E  DA83                    5030                  add.l d3,d5               ; Copy flag results into accumulator
00003120  D890                    5031                  add.l (a0),d4             ; Copy data results into data accumulator   
00003122                          5032   
00003122                          5033      ; WORD      
00003122  2080                    5034                  move.l d0,(a0)
00003124  C350                    5035                  and.w d1,(a0)  
00003126  40C3                    5036                  move SR,d3      
00003128  0283 0000000C           5037                  andi.l #$0C,d3            ; Isolate flags 
0000312E  DA83                    5038                  add.l d3,d5               ; Copy flag results into accumulator
00003130  D890                    5039                  add.l (a0),d4             ; Copy data results into data accumulator   
00003132                          5040   
00003132                          5041      ; LONG      
00003132  2080                    5042                  move.l d0,(a0)
00003134  C390                    5043                  and.l d1,(a0)  
00003136  40C3                    5044                  move SR,d3      
00003138  0283 0000000F           5045                  andi.l #$0F,d3            ; Isolate flags 
0000313E  DA83                    5046                  add.l d3,d5               ; Copy flag results into accumulator
00003140  D890                    5047                  add.l (a0),d4             ; Copy data results into data accumulator   
00003142                          5048                  
00003142                          5049                  
00003142  E289                    5050                  lsr.l #$1,d1
00003144  51CE FFCC               5051                  dbf d6,AND_OUTER2
00003148  E28A                    5052                  lsr.l #$1,d2
0000314A  223C 8167E123           5053                  move.l #$8167E123,d1       ; Initial Data-Y
00003150  7C1E                    5054                  move.l #$0000001E,d6       ; Inner loop counter
00003152  51CF FFBE               5055                  dbf d7,AND_OUTER2
00003156                          5056                  
00003156  0C84 4A3DE544           5057                  cmpi.l #$4A3DE544,d4      ; Check the data results
Line 5058 ERROR: Invalid syntax
0000315C                          5058                  bne AND_FAIL;                
0000315C  0C85 000018E8           5059                  cmpi.l #$000018E8,d5      ; Check the Flag results
Line 5060 ERROR: Invalid syntax
00003162                          5060                  bne AND_FAIL;                 
00003162                          5061                     
00003162  307C FF00               5062                  movea #TESTSTATUS,a0
00003166  117C 0001 002B          5063                  move.b #$1,$2b(a0) 
0000316C  4E75                    5064                  rts
0000316E                          5065                  
0000316E                          5066  AND_FAIL: 
0000316E  307C FF00               5067      movea #TESTSTATUS,a0
00003172  117C 0002 002B          5068      move.b #$2,$2b(a0)    
00003178  4E75                    5069      rts     
0000317A                          5070  
0000317A                          5071  ;-----------------------------------------------------------
0000317A                          5072  ;-----------------------------------------------------------
0000317A                          5073  ; OPCODE : EOR
0000317A                          5074  ;-----------------------------------------------------------
0000317A                          5075  ;-----------------------------------------------------------
0000317A                          5076  
0000317A                          5077  op_EOR:   
0000317A                          5078   
0000317A                          5079    ;; Register to <EA>
0000317A                          5080  
0000317A  203C 86738374           5081                  move.l #$86738374,d0       ; Initial Data-X  Inner loop
00003180  223C FC55F2FE           5082                  move.l #$FC55F2FE,d1       ; Initial Data-Y  Outer loop
00003186  243C 86738374           5083                  move.l #$86738374,d2
0000318C  7600                    5084                  move.l #$00000000,d3
0000318E  7800                    5085                  move.l #$00000000,d4       ; Cumulative data results
00003190  7A00                    5086                  move.l #$00000000,d5       ; Cumulative flag results
00003192  7C1E                    5087                  move.l #$0000001E,d6       ; Inner loop counter
00003194  7E1D                    5088                  move.l #$0000001D,d7       ; Outer loop counter
00003196  207C 00000100           5089                  move.l #$00000100,a0       ; Address for memory EA operations
0000319C                          5090  
0000319C                          5091  
0000319C                          5092  EOR_OUTER2:    
0000319C                          5093   
0000319C                          5094      ; BYTE     
0000319C  2080                    5095                  move.l d0,(a0)
0000319E  B310                    5096                  eor.b d1,(a0)             
000031A0  40C3                    5097                  move SR,d3      
000031A2  0283 0000000C           5098                  andi.l #$0C,d3            ; Isolate flags 
000031A8  DA83                    5099                  add.l d3,d5               ; Copy flag results into accumulator
000031AA  D890                    5100                  add.l (a0),d4             ; Copy data results into data accumulator   
000031AC                          5101   
000031AC                          5102      ; WORD      
000031AC  2080                    5103                  move.l d0,(a0)
000031AE  B350                    5104                  eor.w d1,(a0)  
000031B0  40C3                    5105                  move SR,d3      
000031B2  0283 0000000C           5106                  andi.l #$0C,d3            ; Isolate flags 
000031B8  DA83                    5107                  add.l d3,d5               ; Copy flag results into accumulator
000031BA  D890                    5108                  add.l (a0),d4             ; Copy data results into data accumulator   
000031BC                          5109   
000031BC                          5110      ; LONG      
000031BC  2080                    5111                  move.l d0,(a0)
000031BE  B390                    5112                  eor.l d1,(a0)  
000031C0  40C3                    5113                  move SR,d3      
000031C2  0283 0000000F           5114                  andi.l #$0F,d3            ; Isolate flags 
000031C8  DA83                    5115                  add.l d3,d5               ; Copy flag results into accumulator
000031CA  D890                    5116                  add.l (a0),d4             ; Copy data results into data accumulator   
000031CC                          5117                  
000031CC                          5118                  
000031CC  E289                    5119                  lsr.l #$1,d1
000031CE  51CE FFCC               5120                  dbf d6,EOR_OUTER2
000031D2  E28A                    5121                  lsr.l #$1,d2
000031D4  223C 8167E123           5122                  move.l #$8167E123,d1       ; Initial Data-Y
000031DA  7C1E                    5123                  move.l #$0000001E,d6       ; Inner loop counter
000031DC  51CF FFBE               5124                  dbf d7,EOR_OUTER2
000031E0                          5125                  
000031E0  0C84 55C5EB70           5126                  cmpi.l #$55C5EB70,d4      ; Check the data results
Line 5127 ERROR: Invalid syntax
000031E6                          5127                  bne EOR_FAIL;                
000031E6  0C85 00004430           5128                  cmpi.l #$00004430,d5      ; Check the Flag results
Line 5129 ERROR: Invalid syntax
000031EC                          5129                  bne EOR_FAIL;                 
000031EC                          5130                     
000031EC  307C FF00               5131                  movea #TESTSTATUS,a0
000031F0  117C 0001 002C          5132                  move.b #$1,$2c(a0)
000031F6  4E75                    5133                  rts
000031F8                          5134                  
000031F8                          5135  EOR_FAIL:
000031F8  307C FF00               5136      movea #TESTSTATUS,a0
000031FC  117C 0002 002C          5137      move.b #$2,$2c(a0)
00003202  4E75                    5138      rts
00003204                          5139  
00003204                          5140  ;-----------------------------------------------------------
00003204                          5141  ;-----------------------------------------------------------
00003204                          5142  ; OPCODE : CMP
00003204                          5143  ;-----------------------------------------------------------
00003204                          5144  ;-----------------------------------------------------------
00003204                          5145  
00003204                          5146  op_CMP:   
00003204                          5147  
00003204                          5148  
00003204                          5149    ;; <EA> to Register
00003204                          5150  
00003204  203C A5A5A5A5           5151                  move.l #$a5a5a5a5,d0       ; Initial Data-X  Inner loop
0000320A  223C 8167E123           5152                  move.l #$8167E123,d1       ; Initial Data-Y  Outer loop
00003210  243C A5A5A5A5           5153                  move.l #$a5a5a5a5,d2
00003216  7600                    5154                  move.l #$00000000,d3
00003218  7800                    5155                  move.l #$00000000,d4       ; Cumulative data results
0000321A  7A00                    5156                  move.l #$00000000,d5       ; Cumulative flag results
0000321C  7C1E                    5157                  move.l #$0000001E,d6       ; Inner loop counter
0000321E  7E1E                    5158                  move.l #$0000001E,d7       ; Outer loop counter
00003220  207C 00000100           5159                  move.l #$00000100,a0       ; Address for memory EA operations
00003226                          5160  
00003226                          5161  
00003226                          5162  CMP_OUTER1:    
00003226                          5163   
00003226                          5164      ; BYTE     
00003226  2081                    5165                  move.l d1,(a0)
00003228  B010                    5166                  cmp.b (a0),d0             
0000322A  40C3                    5167                  move SR,d3      
0000322C  0283 0000000F           5168                  andi.l #$0F,d3            ; Isolate flags 
00003232  DA83                    5169                  add.l d3,d5               ; Copy flag results into accumulator
00003234  D880                    5170                  add.l d0,d4               ; Copy data results into data accumulator   
00003236                          5171   
00003236                          5172      ; WORD      
00003236  2081                    5173                  move.l d1,(a0)
00003238  B050                    5174                  cmp.w (a0),d0             
0000323A  40C3                    5175                  move SR,d3      
0000323C  0283 0000000F           5176                  andi.l #$0F,d3            ; Isolate flags 
00003242  DA83                    5177                  add.l d3,d5               ; Copy flag results into accumulator
00003244  D880                    5178                  add.l d0,d4               ; Copy data results into data accumulator   
00003246                          5179   
00003246                          5180      ; LONG      
00003246  2081                    5181                  move.l d1,(a0)
00003248  B090                    5182                  cmp.l (a0),d0             
0000324A  40C3                    5183                  move SR,d3      
0000324C  0283 0000000F           5184                  andi.l #$0F,d3            ; Isolate flags 
00003252  DA83                    5185                  add.l d3,d5               ; Copy flag results into accumulator
00003254  D880                    5186                  add.l d0,d4               ; Copy data results into data accumulator   
00003256                          5187                  
00003256                          5188                  
00003256  E289                    5189                  lsr.l #$1,d1
00003258  51CE FFCC               5190                  dbf d6,CMP_OUTER1
0000325C  E28A                    5191                  lsr.l #$1,d2
0000325E  223C 8167E123           5192                  move.l #$8167E123,d1       ; Initial Data-Y
00003264  7C1E                    5193                  move.l #$0000001E,d6       ; Inner loop counter
00003266  51CF FFBE               5194                  dbf d7,CMP_OUTER1
0000326A                          5195                  
0000326A  0C84 7878712F           5196                  cmpi.l #$7878712F,d4      ; Check the data results
Line 5197 ERROR: Invalid syntax
00003270                          5197                  bne CMP_FAIL;                
00003270  0C85 00005502           5198                  cmpi.l #$00005502,d5      ; Check the Flag results
Line 5199 ERROR: Invalid syntax
00003276                          5199                  bne CMP_FAIL;                
00003276                          5200                     
00003276  307C FF00               5201                  movea #TESTSTATUS,a0
0000327A  117C 0001 002D          5202                  move.b #$1,$2d(a0)
00003280  4E75                    5203                  rts
00003282                          5204  
00003282                          5205  CMP_FAIL:
00003282  307C FF00               5206      movea #TESTSTATUS,a0
00003286  117C 0002 002D          5207      move.b #$2,$2d(a0)
0000328C  4E75                    5208      rts
0000328E                          5209  
0000328E                          5210  ;-----------------------------------------------------------
0000328E                          5211  ;-----------------------------------------------------------
0000328E                          5212  ; OPCODE : CMPA
0000328E                          5213  ;-----------------------------------------------------------
0000328E                          5214  ;-----------------------------------------------------------
0000328E                          5215  
0000328E                          5216  op_CMPA:   
0000328E                          5217  
0000328E                          5218  
0000328E                          5219    ;; <EA> to Register
0000328E                          5220  
0000328E  207C A5A5A5A5           5221                  move.l #$a5a5a5a5,a0       ; Initial Data-X  Inner loop
00003294  223C 8167E123           5222                  move.l #$8167E123,d1       ; Initial Data-Y  Outer loop
0000329A  243C A5A5A5A5           5223                  move.l #$a5a5a5a5,d2
000032A0  7600                    5224                  move.l #$00000000,d3
000032A2  7800                    5225                  move.l #$00000000,d4       ; Cumulative data results
000032A4  7A00                    5226                  move.l #$00000000,d5       ; Cumulative flag results
000032A6  7C1E                    5227                  move.l #$0000001E,d6       ; Inner loop counter
000032A8  7E1E                    5228                  move.l #$0000001E,d7       ; Outer loop counter
000032AA  227C 00000100           5229                  move.l #$00000100,a1       ; Address for memory EA operations
000032B0                          5230  
000032B0                          5231  
000032B0                          5232  CMPA_OUTER1:    
000032B0                          5233    
000032B0                          5234   
000032B0                          5235      ; WORD      
000032B0  2281                    5236                  move.l d1,(a1)
000032B2  B0D1                    5237                  cmpa.w (a1),a0             
000032B4  40C3                    5238                  move SR,d3      
000032B6  0283 0000000F           5239                  andi.l #$0F,d3            ; Isolate flags 
000032BC  DA83                    5240                  add.l d3,d5               ; Copy flag results into accumulator
000032BE  D888                    5241                  add.l a0,d4               ; Copy data results into data accumulator   
000032C0                          5242   
000032C0                          5243      ; LONG      
000032C0  2281                    5244                  move.l d1,(a1)
000032C2  B1D1                    5245                  cmpa.l (a1),a0             
000032C4  40C3                    5246                  move SR,d3      
000032C6  0283 0000000F           5247                  andi.l #$0F,d3            ; Isolate flags 
000032CC  DA83                    5248                  add.l d3,d5               ; Copy flag results into accumulator
000032CE  D888                    5249                  add.l a0,d4               ; Copy data results into data accumulator   
000032D0                          5250                  
000032D0                          5251                  
000032D0  E289                    5252                  lsr.l #$1,d1
000032D2  51CE FFDC               5253                  dbf d6,CMPA_OUTER1
000032D6  E28A                    5254                  lsr.l #$1,d2
000032D8  223C 8167E123           5255                  move.l #$8167E123,d1       ; Initial Data-Y
000032DE  7C1E                    5256                  move.l #$0000001E,d6       ; Inner loop counter
000032E0  51CF FFCE               5257                  dbf d7,CMPA_OUTER1
000032E4                          5258                  
000032E4  0C84 A5A5A0CA           5259                  cmpi.l #$a5a5a0ca,d4      ; Check the data results
Line 5260 ERROR: Invalid syntax
000032EA                          5260                  bne CMPA_FAIL;                
000032EA  0C85 00003A7D           5261                  cmpi.l #$00003A7D,d5      ; Check the Flag results
Line 5262 ERROR: Invalid syntax
000032F0                          5262                  bne CMPA_FAIL;                
000032F0                          5263                         
000032F0  307C FF00               5264                  movea #TESTSTATUS,a0
000032F4  117C 0001 002E          5265                  move.b #$1,$2e(a0)
000032FA  4E75                    5266                  rts
000032FC                          5267  
000032FC                          5268  CMPA_FAIL:
000032FC  307C FF00               5269      movea #TESTSTATUS,a0
00003300  117C 0002 002E          5270      move.b #$2,$2e(a0)
00003306  4E75                    5271      rts
00003308                          5272  
00003308                          5273  ;-----------------------------------------------------------
00003308                          5274  ;-----------------------------------------------------------
00003308                          5275  ; OPCODE : CMPM
00003308                          5276  ;-----------------------------------------------------------
00003308                          5277  ;-----------------------------------------------------------
00003308                          5278  
00003308                          5279  op_CMPM: 
00003308                          5280  
00003308  207C 00000100           5281                  move.l #$00000100,a0       ; Address for Data-X
0000330E  227C 00000200           5282                  move.l #$00000200,a1       ; Address for Data-Y
00003314  7000                    5283                  move.l #$00000000,d0       
00003316  7200                    5284                  move.l #$00000000,d1       
00003318  7400                    5285                  move.l #$00000000,d2       
0000331A                          5286                  
0000331A  20FC 11FF5580           5287                  move.l #$11FF5580,(a0)+   ; Populate test data
00003320  20FC 1111FFFF           5288                  move.l #$1111FFFF,(a0)+   ; Populate test data
00003326  20FC 33333333           5289                  move.l #$33333333,(a0)+   ; Populate test data
0000332C  20FC 44444444           5290                  move.l #$44444444,(a0)+   ; Populate test data
00003332                          5291                  
00003332  22FC 80FF337F           5292                  move.l #$80FF337F,(a1)+   ; Populate test data
00003338  22FC FFFF1111           5293                  move.l #$FFFF1111,(a1)+   ; Populate test data
0000333E  22FC 33333333           5294                  move.l #$33333333,(a1)+   ; Populate test data
00003344  22FC 44444444           5295                  move.l #$44444444,(a1)+   ; Populate test data
0000334A                          5296                  
0000334A  207C 00000100           5297                  move.l #$00000100,a0       ; Address for Data-X
00003350  227C 00000200           5298                  move.l #$00000200,a1       ; Address for Data-Y
00003356  7C0F                    5299                  move.l #$0000000F,d6       ; Loop counter
00003358                          5300                  
00003358  B308                    5301  CMPM_LOOP1:     cmpm.b (a0)+,(a1)+
0000335A  40C3                    5302                  move SR,d3      
0000335C  0283 0000000F           5303                  andi.l #$0F,d3            ; Isolate flags 
00003362  D083                    5304                  add.l d3,d0               ; Copy flag results into accumulator                
00003364  51CE FFF2               5305                  dbf d6,CMPM_LOOP1
00003368                          5306  
00003368                          5307  
00003368  207C 00000100           5308                  move.l #$00000100,a0       ; Address for Data-X
0000336E  227C 00000200           5309                  move.l #$00000200,a1       ; Address for Data-Y
00003374  7C07                    5310                  move.l #$00000007,d6       ; Loop counter
00003376                          5311                  
00003376  B348                    5312  CMPM_LOOP2:     cmpm.w (a0)+,(a1)+
00003378  40C3                    5313                  move SR,d3      
0000337A  0283 0000000F           5314                  andi.l #$0F,d3            ; Isolate flags 
00003380  D283                    5315                  add.l d3,d1               ; Copy flag results into accumulator                
00003382  51CE FFF2               5316                  dbf d6,CMPM_LOOP2
00003386                          5317  
00003386                          5318  
00003386  207C 00000100           5319                  move.l #$00000100,a0       ; Address for Data-X
0000338C  227C 00000200           5320                  move.l #$00000200,a1       ; Address for Data-Y
00003392  7C03                    5321                  move.l #$00000003,d6       ; Loop counter
00003394                          5322                  
00003394  B388                    5323  CMPM_LOOP3:     cmpm.l (a0)+,(a1)+
00003396  40C3                    5324                  move SR,d3      
00003398  0283 0000000F           5325                  andi.l #$0F,d3            ; Isolate flags 
0000339E  D483                    5326                  add.l d3,d2               ; Copy flag results into accumulator                
000033A0  51CE FFF2               5327                  dbf d6,CMPM_LOOP3
000033A4                          5328  
000033A4                          5329  
000033A4  0C80 0000004C           5330                  cmpi.l #$0000004C,d0      ; Check the data results
Line 5331 ERROR: Invalid syntax
000033AA                          5331                  bne CMPM_FAIL;                
000033AA  0C81 00000024           5332                  cmpi.l #$00000024,d1      
Line 5333 ERROR: Invalid syntax
000033B0                          5333                  bne CMPM_FAIL;                
000033B0  0C82 00000012           5334                  cmpi.l #$00000012,d2      
Line 5335 ERROR: Invalid syntax
000033B6                          5335                  bne CMPM_FAIL;                
000033B6                          5336          
000033B6  307C FF00               5337                  movea #TESTSTATUS,a0
000033BA  117C 0001 002F          5338                  move.b #$1,$2f(a0)
000033C0  4E75                    5339                  rts
000033C2                          5340  
000033C2                          5341  CMPM_FAIL: 
000033C2  307C FF00               5342      movea #TESTSTATUS,a0
000033C6  117C 0002 002F          5343      move.b #$2,$2f(a0)
000033CC  4E75                    5344      rts
000033CE                          5345  
000033CE                          5346  ;-----------------------------------------------------------
000033CE                          5347  ;-----------------------------------------------------------
000033CE                          5348  ; OPCODE : ADD
000033CE                          5349  ;-----------------------------------------------------------
000033CE                          5350  ;-----------------------------------------------------------
000033CE                          5351  
000033CE                          5352  op_ADD: 
000033CE                          5353  
000033CE                          5354  
000033CE                          5355    ;; <EA> to Register
000033CE  203C A5A5A5A5           5356                  move.l #$a5a5a5a5,d0       ; Initial Data-X  Inner loop
000033D4  223C 8167E123           5357                  move.l #$8167E123,d1       ; Initial Data-Y  Outer loop
000033DA  243C A5A5A5A5           5358                  move.l #$a5a5a5a5,d2
000033E0  7600                    5359                  move.l #$00000000,d3
000033E2  7800                    5360                  move.l #$00000000,d4       ; Cumulative data results
000033E4  7A00                    5361                  move.l #$00000000,d5       ; Cumulative flag results
000033E6  7C1E                    5362                  move.l #$0000001E,d6       ; Inner loop counter
000033E8  7E1E                    5363                  move.l #$0000001E,d7       ; Outer loop counter
000033EA  207C 00000100           5364                  move.l #$00000100,a0       ; Address for memory EA operations
000033F0                          5365  
000033F0                          5366  
000033F0                          5367  ADD_OUTER1:    
000033F0                          5368   
000033F0                          5369      ; BYTE     
000033F0  2081                    5370                  move.l d1,(a0)
000033F2  D010                    5371                  add.b (a0),d0             
000033F4  40C3                    5372                  move SR,d3      
000033F6  0283 0000001F           5373                  andi.l #$1F,d3            ; Isolate flags 
000033FC  DA83                    5374                  add.l d3,d5               ; Copy flag results into accumulator
000033FE  D880                    5375                  add.l d0,d4               ; Copy data results into data accumulator   
00003400                          5376   
00003400                          5377      ; WORD      
00003400  2081                    5378                  move.l d1,(a0)
00003402  D050                    5379                  add.w (a0),d0             
00003404  40C3                    5380                  move SR,d3      
00003406  0283 0000000C           5381                  andi.l #$0C,d3            ; Isolate flags 
0000340C  DA83                    5382                  add.l d3,d5               ; Copy flag results into accumulator
0000340E  D880                    5383                  add.l d0,d4               ; Copy data results into data accumulator   
00003410                          5384   
00003410                          5385      ; LONG      
00003410  2081                    5386                  move.l d1,(a0)
00003412  D090                    5387                  add.l (a0),d0             
00003414  40C3                    5388                  move SR,d3      
00003416  0283 0000000F           5389                  andi.l #$0F,d3            ; Isolate flags 
0000341C  DA83                    5390                  add.l d3,d5               ; Copy flag results into accumulator
0000341E  D880                    5391                  add.l d0,d4               ; Copy data results into data accumulator   
00003420                          5392                  
00003420                          5393                  
00003420  E299                    5394                  ror.l #$1,d1
00003422  51CE FFCC               5395                  dbf d6,ADD_OUTER1
00003426  E29A                    5396                  ror.l #$1,d2
00003428  223C 8167E123           5397                  move.l #$8167E123,d1       ; Initial Data-Y
0000342E  7C1E                    5398                  move.l #$0000001E,d6       ; Inner loop counter
00003430  51CF FFBE               5399                  dbf d7,ADD_OUTER1
00003434                          5400                  
00003434  0C84 23ED428F           5401                  cmpi.l #$23ED428F,d4      ; Check the data results
Line 5402 ERROR: Invalid syntax
0000343A                          5402                  bne ADD_FAIL;                
0000343A  0C85 00004C96           5403                  cmpi.l #$00004C96,d5      ; Check the Flag results
Line 5404 ERROR: Invalid syntax
00003440                          5404                  bne ADD_FAIL;                
00003440                          5405                     
00003440                          5406                     
00003440                          5407    ;; Register to <EA>
00003440  203C 86738374           5408                  move.l #$86738374,d0       ; Initial Data-X  Inner loop
00003446  223C FC55F2FE           5409                  move.l #$FC55F2FE,d1       ; Initial Data-Y  Outer loop
0000344C  243C 86738374           5410                  move.l #$86738374,d2
00003452  7600                    5411                  move.l #$00000000,d3
00003454  7800                    5412                  move.l #$00000000,d4       ; Cumulative data results
00003456  7A00                    5413                  move.l #$00000000,d5       ; Cumulative flag results
00003458  7C1E                    5414                  move.l #$0000001E,d6       ; Inner loop counter
0000345A  7E1D                    5415                  move.l #$0000001D,d7       ; Outer loop counter
0000345C  207C 00000100           5416                  move.l #$00000100,a0       ; Address for memory EA operations
00003462                          5417  
00003462                          5418  
00003462                          5419  ADD_OUTER2:    
00003462                          5420   
00003462                          5421      ; BYTE     
00003462  2080                    5422                  move.l d0,(a0)
00003464  D310                    5423                  add.b d1,(a0)             
00003466  40C3                    5424                  move SR,d3      
00003468  0283 0000000C           5425                  andi.l #$0C,d3            ; Isolate flags 
0000346E  DA83                    5426                  add.l d3,d5               ; Copy flag results into accumulator
00003470  D890                    5427                  add.l (a0),d4             ; Copy data results into data accumulator   
00003472                          5428   
00003472                          5429      ; WORD      
00003472  2080                    5430                  move.l d0,(a0)
00003474  D350                    5431                  add.w d1,(a0)  
00003476  40C3                    5432                  move SR,d3      
00003478  0283 0000001F           5433                  andi.l #$1F,d3            ; Isolate flags 
0000347E  DA83                    5434                  add.l d3,d5               ; Copy flag results into accumulator
00003480  D890                    5435                  add.l (a0),d4             ; Copy data results into data accumulator   
00003482                          5436   
00003482                          5437      ; LONG      
00003482  2080                    5438                  move.l d0,(a0)
00003484  D390                    5439                  add.l d1,(a0)  
00003486  40C3                    5440                  move SR,d3      
00003488  0283 0000000F           5441                  andi.l #$0F,d3            ; Isolate flags 
0000348E  DA83                    5442                  add.l d3,d5               ; Copy flag results into accumulator
00003490  D890                    5443                  add.l (a0),d4             ; Copy data results into data accumulator   
00003492                          5444                  
00003492                          5445                  
00003492  E299                    5446                  ror.l #$1,d1
00003494  51CE FFCC               5447                  dbf d6,ADD_OUTER2
00003498  E29A                    5448                  ror.l #$1,d2
0000349A  223C 8167E123           5449                  move.l #$8167E123,d1       ; Initial Data-Y
000034A0  7C1E                    5450                  move.l #$0000001E,d6       ; Inner loop counter
000034A2  51CF FFBE               5451                  dbf d7,ADD_OUTER2
000034A6                          5452                  
000034A6  0C84 6701B884           5453                  cmpi.l #$6701B884,d4      ; Check the data results
Line 5454 ERROR: Invalid syntax
000034AC                          5454                  bne ADD_FAIL;                
000034AC  0C85 00005467           5455                  cmpi.l #$00005467,d5      ; Check the Flag results
Line 5456 ERROR: Invalid syntax
000034B2                          5456                  bne ADD_FAIL;                 
000034B2                          5457                  
000034B2  307C FF00               5458                  movea #TESTSTATUS,a0
000034B6  117C 0001 0030          5459                  move.b #$1,$30(a0)
000034BC  4E75                    5460                  rts
000034BE                          5461  
000034BE                          5462  ADD_FAIL:
000034BE  307C FF00               5463      movea #TESTSTATUS,a0
000034C2  117C 0002 0030          5464      move.b #$2,$30(a0)
000034C8  4E75                    5465      rts
000034CA                          5466  
000034CA                          5467  ;-----------------------------------------------------------
000034CA                          5468  ;-----------------------------------------------------------
000034CA                          5469  ; OPCODE : SUB
000034CA                          5470  ;-----------------------------------------------------------
000034CA                          5471  ;-----------------------------------------------------------
000034CA                          5472  
000034CA                          5473  op_SUB: 
000034CA                          5474  
000034CA                          5475    ;; <EA> to Register
000034CA  203C A5A5A5A5           5476                  move.l #$a5a5a5a5,d0       ; Initial Data-X  Inner loop
000034D0  223C 8167E123           5477                  move.l #$8167E123,d1       ; Initial Data-Y  Outer loop
000034D6  243C A5A5A5A5           5478                  move.l #$a5a5a5a5,d2
000034DC  7600                    5479                  move.l #$00000000,d3
000034DE  7800                    5480                  move.l #$00000000,d4       ; Cumulative data results
000034E0  7A00                    5481                  move.l #$00000000,d5       ; Cumulative flag results
000034E2  7C1E                    5482                  move.l #$0000001E,d6       ; Inner loop counter
000034E4  7E1E                    5483                  move.l #$0000001E,d7       ; Outer loop counter
000034E6  207C 00000100           5484                  move.l #$00000100,a0       ; Address for memory EA operations
000034EC                          5485  
000034EC                          5486  
000034EC                          5487  SUB_OUTER1:    
000034EC                          5488   
000034EC                          5489      ; BYTE     
000034EC  2081                    5490                  move.l d1,(a0)
000034EE  9010                    5491                  sub.b (a0),d0             
000034F0  40C3                    5492                  move SR,d3      
000034F2  0283 0000001F           5493                  andi.l #$1F,d3            ; Isolate flags 
000034F8  DA83                    5494                  add.l d3,d5               ; Copy flag results into accumulator
000034FA  D880                    5495                  add.l d0,d4               ; Copy data results into data accumulator   
000034FC                          5496   
000034FC                          5497      ; WORD      
000034FC  2081                    5498                  move.l d1,(a0)
000034FE  9050                    5499                  sub.w (a0),d0             
00003500  40C3                    5500                  move SR,d3      
00003502  0283 0000000C           5501                  andi.l #$0C,d3            ; Isolate flags 
00003508  DA83                    5502                  add.l d3,d5               ; Copy flag results into accumulator
0000350A  D880                    5503                  add.l d0,d4               ; Copy data results into data accumulator   
0000350C                          5504   
0000350C                          5505      ; LONG      
0000350C  2081                    5506                  move.l d1,(a0)
0000350E  9090                    5507                  sub.l (a0),d0             
00003510  40C3                    5508                  move SR,d3      
00003512  0283 0000000F           5509                  andi.l #$0F,d3            ; Isolate flags 
00003518  DA83                    5510                  add.l d3,d5               ; Copy flag results into accumulator
0000351A  D880                    5511                  add.l d0,d4               ; Copy data results into data accumulator   
0000351C                          5512                  
0000351C                          5513                  
0000351C  E299                    5514                  ror.l #$1,d1
0000351E  51CE FFCC               5515                  dbf d6,SUB_OUTER1
00003522  E29A                    5516                  ror.l #$1,d2
00003524  223C 8167E123           5517                  move.l #$8167E123,d1       ; Initial Data-Y
0000352A  7C1E                    5518                  move.l #$0000001E,d6       ; Inner loop counter
0000352C  51CF FFBE               5519                  dbf d7,SUB_OUTER1
00003530                          5520                  
00003530  0C84 1A8D14CF           5521                  cmpi.l #$1A8D14CF,d4      ; Check the data results
Line 5522 ERROR: Invalid syntax
00003536                          5522                  bne SUB_FAIL;                
00003536  0C85 00004FC4           5523                  cmpi.l #$00004FC4,d5      ; Check the Flag results
Line 5524 ERROR: Invalid syntax
0000353C                          5524                  bne SUB_FAIL;                
0000353C                          5525                     
0000353C                          5526                     
0000353C                          5527    ;; Register to <EA>
0000353C  203C 86738374           5528                  move.l #$86738374,d0       ; Initial Data-X  Inner loop
00003542  223C FC55F2FE           5529                  move.l #$FC55F2FE,d1       ; Initial Data-Y  Outer loop
00003548  243C 86738374           5530                  move.l #$86738374,d2
0000354E  7600                    5531                  move.l #$00000000,d3
00003550  7800                    5532                  move.l #$00000000,d4       ; Cumulative data results
00003552  7A00                    5533                  move.l #$00000000,d5       ; Cumulative flag results
00003554  7C1E                    5534                  move.l #$0000001E,d6       ; Inner loop counter
00003556  7E1D                    5535                  move.l #$0000001D,d7       ; Outer loop counter
00003558  207C 00000100           5536                  move.l #$00000100,a0       ; Address for memory EA operations
0000355E                          5537  
0000355E                          5538  
0000355E                          5539  SUB_OUTER2:    
0000355E                          5540   
0000355E                          5541      ; BYTE     
0000355E  2080                    5542                  move.l d0,(a0)
00003560  9310                    5543                  sub.b d1,(a0)             
00003562  40C3                    5544                  move SR,d3      
00003564  0283 0000000C           5545                  andi.l #$0C,d3            ; Isolate flags 
0000356A  DA83                    5546                  add.l d3,d5               ; Copy flag results into accumulator
0000356C  D890                    5547                  add.l (a0),d4             ; Copy data results into data accumulator   
0000356E                          5548   
0000356E                          5549      ; WORD      
0000356E  2080                    5550                  move.l d0,(a0)
00003570  9350                    5551                  sub.w d1,(a0)  
00003572  40C3                    5552                  move SR,d3      
00003574  0283 0000001F           5553                  andi.l #$1F,d3            ; Isolate flags 
0000357A  DA83                    5554                  add.l d3,d5               ; Copy flag results into accumulator
0000357C  D890                    5555                  add.l (a0),d4             ; Copy data results into data accumulator   
0000357E                          5556   
0000357E                          5557      ; LONG      
0000357E  2080                    5558                  move.l d0,(a0)
00003580  9390                    5559                  sub.l d1,(a0)  
00003582  40C3                    5560                  move SR,d3      
00003584  0283 0000000F           5561                  andi.l #$0F,d3            ; Isolate flags 
0000358A  DA83                    5562                  add.l d3,d5               ; Copy flag results into accumulator
0000358C  D890                    5563                  add.l (a0),d4             ; Copy data results into data accumulator   
0000358E                          5564                  
0000358E                          5565                  
0000358E  E299                    5566                  ror.l #$1,d1
00003590  51CE FFCC               5567                  dbf d6,SUB_OUTER2
00003594  E29A                    5568                  ror.l #$1,d2
00003596  223C 8167E123           5569                  move.l #$8167E123,d1       ; Initial Data-Y
0000359C  7C1E                    5570                  move.l #$0000001E,d6       ; Inner loop counter
0000359E  51CF FFBE               5571                  dbf d7,SUB_OUTER2
000035A2                          5572                  
000035A2  0C84 36D38BEC           5573                  cmpi.l #$36D38BEC,d4      ; Check the data results
Line 5574 ERROR: Invalid syntax
000035A8                          5574                  bne SUB_FAIL;                
000035A8  0C85 000045A5           5575                  cmpi.l #$000045A5,d5      ; Check the Flag results
Line 5576 ERROR: Invalid syntax
000035AE                          5576                  bne SUB_FAIL;                 
000035AE                          5577  
000035AE  307C FF00               5578                  movea #TESTSTATUS,a0
000035B2  117C 0001 0031          5579                  move.b #$1,$31(a0)
000035B8  4E75                    5580                  rts
000035BA                          5581  
000035BA                          5582  SUB_FAIL:
000035BA  307C FF00               5583      movea #TESTSTATUS,a0
000035BE  117C 0002 0031          5584      move.b #$2,$31(a0)
000035C4  4E75                    5585      rts
000035C6                          5586  
000035C6                          5587  ;-----------------------------------------------------------
000035C6                          5588  ;-----------------------------------------------------------
000035C6                          5589  ; OPCODE : ADDA
000035C6                          5590  ;-----------------------------------------------------------
000035C6                          5591  ;-----------------------------------------------------------
000035C6                          5592  
000035C6                          5593  op_ADDA: 
000035C6                          5594  
000035C6                          5595    ;; <EA> to Register
000035C6  203C A5A5A5A5           5596                  move.l #$a5a5a5a5,d0       ; Initial Data-X  Inner loop
000035CC  223C 8167E123           5597                  move.l #$8167E123,d1       
000035D2  243C A5A5A5A5           5598                  move.l #$a5a5a5a5,d2
000035D8  7600                    5599                  move.l #$00000000,d3
000035DA  7800                    5600                  move.l #$00000000,d4       ; Cumulative data results
000035DC  7A00                    5601                  move.l #$00000000,d5       ; Cumulative flag results
000035DE  7C1E                    5602                  move.l #$0000001E,d6       ; Inner loop counter
000035E0  7E1E                    5603                  move.l #$0000001E,d7       ; Outer loop counter
000035E2  207C 00000100           5604                  move.l #$00000100,a0       ; Address for memory EA operations
000035E8  227C 8167E123           5605                  move.l #$8167E123,a1       ; Initial Data-Y  Outer loop
000035EE                          5606  
000035EE                          5607  ADDA_OUTER1:    
000035EE                          5608  
000035EE                          5609      ; WORD      
000035EE  2081                    5610                  move.l d1,(a0)  
000035F0  D2D0                    5611                  adda.w (a0),a1             
000035F2  D889                    5612                  add.l a1,d4               ; Copy data results into data accumulator   
000035F4                          5613   
000035F4                          5614      ; LONG      
000035F4  2081                    5615                  move.l d1,(a0)
000035F6  D3D0                    5616                  adda.l (a0),a1             
000035F8  D889                    5617                  add.l a1,d4               ; Copy data results into data accumulator   
000035FA                          5618                  
000035FA  E299                    5619                  ror.l #$1,d1
000035FC  51CE FFF0               5620                  dbf d6,ADDA_OUTER1
00003600  E299                    5621                  ror.l #$1,d1
00003602  2241                    5622                  move.l d1,a1
00003604  223C 8167E123           5623                  move.l #$8167E123,d1       ; Initial Data-Y
0000360A  7C1E                    5624                  move.l #$0000001E,d6       ; Inner loop counter
0000360C  51CF FFE0               5625                  dbf d7,ADDA_OUTER1
00003610                          5626                  
00003610  0C84 ABE3CAB5           5627                  cmpi.l #$abe3cab5,d4       ; Check the data results
Line 5628 ERROR: Invalid syntax
00003616                          5628                  bne ADDA_FAIL;                
00003616                          5629                
00003616  307C FF00               5630                  movea #TESTSTATUS,a0
0000361A  117C 0001 0032          5631                  move.b #$1,$32(a0)
00003620  4E75                    5632                  rts
00003622                          5633  
00003622                          5634  ADDA_FAIL:
00003622  307C FF00               5635      movea #TESTSTATUS,a0
00003626  117C 0002 0032          5636      move.b #$2,$32(a0)
0000362C  4E75                    5637      rts
0000362E                          5638  
0000362E                          5639  ;-----------------------------------------------------------
0000362E                          5640  ;-----------------------------------------------------------
0000362E                          5641  ; OPCODE : SUBA
0000362E                          5642  ;-----------------------------------------------------------
0000362E                          5643  ;-----------------------------------------------------------
0000362E                          5644  
0000362E                          5645  op_SUBA: 
0000362E                          5646  
0000362E                          5647    ;; <EA> to Register
0000362E  203C A5A5A5A5           5648                  move.l #$a5a5a5a5,d0       ; Initial Data-X  Inner loop
00003634  223C 8167E123           5649                  move.l #$8167E123,d1       
0000363A  243C A5A5A5A5           5650                  move.l #$a5a5a5a5,d2
00003640  7600                    5651                  move.l #$00000000,d3
00003642  7800                    5652                  move.l #$00000000,d4       ; Cumulative data results
00003644  7A00                    5653                  move.l #$00000000,d5       ; Cumulative flag results
00003646  7C1E                    5654                  move.l #$0000001E,d6       ; Inner loop counter
00003648  7E1E                    5655                  move.l #$0000001E,d7       ; Outer loop counter
0000364A  207C 00000100           5656                  move.l #$00000100,a0       ; Address for memory EA operations
00003650  227C 8167E123           5657                  move.l #$8167E123,a1       ; Initial Data-Y  Outer loop
00003656                          5658  
00003656                          5659  SUBA_OUTER1:    
00003656                          5660  
00003656                          5661      ; WORD      
00003656  2081                    5662                  move.l d1,(a0)
00003658  92D0                    5663                  suba.w (a0),a1             
0000365A  D889                    5664                  add.l a1,d4               ; Copy data results into data accumulator   
0000365C                          5665   
0000365C                          5666      ; LONG      
0000365C  2081                    5667                  move.l d1,(a0)
0000365E  93D0                    5668                  suba.l (a0),a1             
00003660  D889                    5669                  add.l a1,d4               ; Copy data results into data accumulator   
00003662                          5670                  
00003662  E299                    5671                  ror.l #$1,d1
00003664  51CE FFF0               5672                  dbf d6,SUBA_OUTER1
00003668  E299                    5673                  ror.l #$1,d1
0000366A  2241                    5674                  move.l d1,a1
0000366C  223C 8167E123           5675                  move.l #$8167E123,d1       ; Initial Data-Y
00003672  7C1E                    5676                  move.l #$0000001E,d6       ; Inner loop counter
00003674  51CF FFE0               5677                  dbf d7,SUBA_OUTER1
00003678                          5678                  
00003678  0C84 6FECC6D7           5679                  cmpi.l #$6fecc6d7,d4 * #$E1E36D7A,d4      ; Check the data results
Line 5680 ERROR: Invalid syntax
0000367E                          5680                  bne SUBA_FAIL;                
0000367E                          5681                
0000367E  307C FF00               5682                  movea #TESTSTATUS,a0
00003682  117C 0001 0033          5683                  move.b #$1,$33(a0)
00003688  4E75                    5684                  rts
0000368A                          5685  
0000368A                          5686  SUBA_FAIL:
0000368A  307C FF00               5687      movea #TESTSTATUS,a0
0000368E  117C 0002 0033          5688      move.b #$2,$33(a0)
00003694  4E75                    5689      rts
00003696                          5690  
00003696                          5691  ;-----------------------------------------------------------
00003696                          5692  ;-----------------------------------------------------------
00003696                          5693  ; OPCODE : ADDX
00003696                          5694  ;-----------------------------------------------------------
00003696                          5695  ;-----------------------------------------------------------
00003696                          5696  
00003696                          5697  op_ADDX: 
00003696                          5698  
00003696                          5699  
00003696                          5700    ;; Register to Register
00003696  203C A5A5A5A5           5701                  move.l #$a5a5a5a5,d0       ; Initial Data-X  Inner loop
0000369C  223C 8167E123           5702                  move.l #$8167E123,d1       ; Initial Data-Y  Outer loop
000036A2  243C A5A5A5A5           5703                  move.l #$a5a5a5a5,d2
000036A8  7600                    5704                  move.l #$00000000,d3
000036AA  7800                    5705                  move.l #$00000000,d4       ; Cumulative data results
000036AC  7A00                    5706                  move.l #$00000000,d5       ; Cumulative flag results
000036AE  7C1E                    5707                  move.l #$0000001E,d6       ; Inner loop counter
000036B0  7E1E                    5708                  move.l #$0000001E,d7       ; Outer loop counter
000036B2  207C 00000100           5709                  move.l #$00000100,a0       ; Address for memory EA operations
000036B8                          5710  
000036B8                          5711  
000036B8                          5712  ADDX_OUTER1:    
000036B8                          5713   
000036B8                          5714      ; BYTE    
000036B8  2002                    5715                  move.l d2,d0
000036BA  D101                    5716                  addx.b d1,d0             
000036BC  40C3                    5717                  move SR,d3      
000036BE  0283 0000001F           5718                  andi.l #$1F,d3            ; Isolate flags 
000036C4  DA83                    5719                  add.l d3,d5               ; Copy flag results into accumulator
000036C6  D880                    5720                  add.l d0,d4               ; Copy data results into data accumulator   
000036C8                          5721   
000036C8                          5722      ; WORD      
000036C8  2002                    5723                  move.l d2,d0
000036CA  D141                    5724                  addx.w d1,d0             
000036CC  40C3                    5725                  move SR,d3      
000036CE  0283 0000001F           5726                  andi.l #$1F,d3            ; Isolate flags 
000036D4  DA83                    5727                  add.l d3,d5               ; Copy flag results into accumulator
000036D6  D880                    5728                  add.l d0,d4               ; Copy data results into data accumulator   
000036D8                          5729   
000036D8                          5730      ; LONG      
000036D8  2002                    5731                  move.l d2,d0
000036DA  D181                    5732                  addx.l d1,d0             
000036DC  40C3                    5733                  move SR,d3      
000036DE  0283 0000001F           5734                  andi.l #$1F,d3            ; Isolate flags 
000036E4  DA83                    5735                  add.l d3,d5               ; Copy flag results into accumulator
000036E6  D880                    5736                  add.l d0,d4               ; Copy data results into data accumulator   
000036E8                          5737                  
000036E8  E299                    5738                  ror.l #$1,d1
000036EA  51CE FFCC               5739                  dbf d6,ADDX_OUTER1
000036EE  E29A                    5740                  ror.l #$1,d2
000036F0  223C 8167E123           5741                  move.l #$8167E123,d1       ; Initial Data-Y
000036F6  7C1E                    5742                  move.l #$0000001E,d6       ; Inner loop counter
000036F8  51CF FFBE               5743                  dbf d7,ADDX_OUTER1
000036FC                          5744                  
000036FC  0C84 4E96A4D9           5745                  cmpi.l #$4E96A4D9,d4      ; Check the data results
Line 5746 ERROR: Invalid syntax
00003702                          5746                  bne ADDX_FAIL;                
00003702  0C85 000085CD           5747                  cmpi.l #$000085CD,d5      ; Check the Flag results
Line 5748 ERROR: Invalid syntax
00003708                          5748                  bne ADDX_FAIL;                
00003708                          5749                     
00003708                          5750      
00003708                          5751      
00003708                          5752      ; -(An),-(An)
00003708                          5753      
00003708  7000                    5754                  move.l #$00000000,d0       ; BYTE Flag Results Accumulator     
0000370A  7200                    5755                  move.l #$00000000,d1        
0000370C  7400                    5756                  move.l #$00000000,d2      
0000370E  207C 00000100           5757                  move.l #$00000100,a0       ; Address for Data-X
00003714  227C 00000200           5758                  move.l #$00000200,a1       ; Address for Data-Y
0000371A  20FC 11FF5580           5759                  move.l #$11FF5580,(a0)+   ; Populate test data
00003720  20FC 1111FFFF           5760                  move.l #$1111FFFF,(a0)+   ; Populate test data
00003726  20FC 33333333           5761                  move.l #$33333333,(a0)+   ; Populate test data
0000372C  20FC 44444444           5762                  move.l #$44444444,(a0)+   ; Populate test data
00003732  22FC 80FF337F           5763                  move.l #$80FF337F,(a1)+   ; Populate test data
00003738  22FC FFFF1111           5764                  move.l #$FFFF1111,(a1)+   ; Populate test data
0000373E  22FC 33333333           5765                  move.l #$33333333,(a1)+   ; Populate test data
00003744  22FC 44444444           5766                  move.l #$44444444,(a1)+   ; Populate test data
0000374A                          5767                  
0000374A                          5768  
0000374A  7C0F                    5769                  move.l #$0000000F,d6       ; Loop counter
0000374C                          5770                  
0000374C  D308                    5771  ADDX_LOOP3:     addx.b -(a0),-(a1)
0000374E  40C3                    5772                  move SR,d3      
00003750  0283 0000000F           5773                  andi.l #$0F,d3            ; Isolate flags 
00003756  D083                    5774                  add.l d3,d0               ; Copy flag results into accumulator    
00003758  D211                    5775                  add.b (a1),d1     
0000375A  51CE FFF0               5776                  dbf d6,ADDX_LOOP3
0000375E                          5777  
0000375E                          5778  
0000375E  207C 00000110           5779                  move.l #$00000110,a0       ; Address for Data-X
00003764  227C 00000210           5780                  move.l #$00000210,a1       ; Address for Data-Y
0000376A  7C07                    5781                  move.l #$00000007,d6       ; Loop counter
0000376C                          5782                  
0000376C  D348                    5783  ADDX_LOOP4:     addx.w -(a0),-(a1)
0000376E  40C3                    5784                  move SR,d3      
00003770  0283 0000000F           5785                  andi.l #$0F,d3            ; Isolate flags 
00003776  D083                    5786                  add.l d3,d0               ; Copy flag results into accumulator    
00003778  D251                    5787                  add.w (a1),d1     
0000377A  51CE FFF0               5788                  dbf d6,ADDX_LOOP4
0000377E                          5789  
0000377E                          5790  
0000377E  207C 00000110           5791                  move.l #$00000110,a0       ; Address for Data-X
00003784  227C 00000210           5792                  move.l #$00000210,a1       ; Address for Data-Y
0000378A  7C03                    5793                  move.l #$00000003,d6       ; Loop counter
0000378C                          5794                  
0000378C  D388                    5795  ADDX_LOOP5:     addx.l -(a0),-(a1)
0000378E  40C3                    5796                  move SR,d3      
00003790  0283 0000000F           5797                  andi.l #$0F,d3            ; Isolate flags 
00003796  D083                    5798                  add.l d3,d0               ; Copy flag results into accumulator    
00003798  D291                    5799                  add.l (a1),d1     
0000379A  51CE FFF0               5800                  dbf d6,ADDX_LOOP5
0000379E                          5801  
0000379E                          5802  
0000379E  0C80 00000095           5803                  cmpi.l #$00000095,d0      ; Check the flag results
Line 5804 ERROR: Invalid syntax
000037A4                          5804                  bne ADDX_FAIL;                
000037A4  0C81 C812A67F           5805                  cmpi.l #$c812a67f,d1 *#$C812A682,d1      ; Check the data results 
Line 5806 ERROR: Invalid syntax
000037AA                          5806                  bne ADDX_FAIL;                
000037AA                          5807   
000037AA  307C FF00               5808                  movea #TESTSTATUS,a0
000037AE  117C 0001 0034          5809                  move.b #$1,$34(a0)
000037B4  4E75                    5810                  rts
000037B6                          5811  
000037B6                          5812  ADDX_FAIL:
000037B6  307C FF00               5813      movea #TESTSTATUS,a0
000037BA  117C 0002 0034          5814      move.b #$2,$34(a0)
000037C0                          5815  
000037C0                          5816  ;-----------------------------------------------------------
000037C0                          5817  ;-----------------------------------------------------------
000037C0                          5818  ; OPCODE : SUBX
000037C0                          5819  ;-----------------------------------------------------------
000037C0                          5820  ;-----------------------------------------------------------
000037C0                          5821  
000037C0                          5822  op_SUBX: 
000037C0                          5823  
000037C0                          5824  
000037C0                          5825    ;; Register to Register
000037C0  203C A5A5A5A5           5826                  move.l #$a5a5a5a5,d0       ; Initial Data-X  Inner loop
000037C6  223C 8167E123           5827                  move.l #$8167E123,d1       ; Initial Data-Y  Outer loop
000037CC  243C A5A5A5A5           5828                  move.l #$a5a5a5a5,d2
000037D2  7600                    5829                  move.l #$00000000,d3
000037D4  7800                    5830                  move.l #$00000000,d4       ; Cumulative data results
000037D6  7A00                    5831                  move.l #$00000000,d5       ; Cumulative flag results
000037D8  7C1E                    5832                  move.l #$0000001E,d6       ; Inner loop counter
000037DA  7E1E                    5833                  move.l #$0000001E,d7       ; Outer loop counter
000037DC  207C 00000100           5834                  move.l #$00000100,a0       ; Address for memory EA operations
000037E2                          5835  
000037E2                          5836  
000037E2                          5837  SUBX_OUTER1:    
000037E2                          5838   
000037E2                          5839      ; BYTE    
000037E2  2002                    5840                  move.l d2,d0
000037E4  9101                    5841                  subx.b d1,d0             
000037E6  40C3                    5842                  move SR,d3      
000037E8  0283 0000001F           5843                  andi.l #$1F,d3            ; Isolate flags 
000037EE  DA83                    5844                  add.l d3,d5               ; Copy flag results into accumulator
000037F0  D880                    5845                  add.l d0,d4               ; Copy data results into data accumulator   
000037F2                          5846   
000037F2                          5847      ; WORD      
000037F2  2002                    5848                  move.l d2,d0
000037F4  9141                    5849                  subx.w d1,d0             
000037F6  40C3                    5850                  move SR,d3      
000037F8  0283 0000001F           5851                  andi.l #$1F,d3            ; Isolate flags 
000037FE  DA83                    5852                  add.l d3,d5               ; Copy flag results into accumulator
00003800  D880                    5853                  add.l d0,d4               ; Copy data results into data accumulator   
00003802                          5854   
00003802                          5855      ; LONG      
00003802  2002                    5856                  move.l d2,d0
00003804  9181                    5857                  subx.l d1,d0             
00003806  40C3                    5858                  move SR,d3      
00003808  0283 0000001F           5859                  andi.l #$1F,d3            ; Isolate flags 
0000380E  DA83                    5860                  add.l d3,d5               ; Copy flag results into accumulator
00003810  D880                    5861                  add.l d0,d4               ; Copy data results into data accumulator   
00003812                          5862                  
00003812  E299                    5863                  ror.l #$1,d1
00003814  51CE FFCC               5864                  dbf d6,SUBX_OUTER1
00003818  E29A                    5865                  ror.l #$1,d2
0000381A  223C 8167E123           5866                  move.l #$8167E123,d1       ; Initial Data-Y
00003820  7C1E                    5867                  move.l #$0000001E,d6       ; Inner loop counter
00003822  51CF FFBE               5868                  dbf d7,SUBX_OUTER1
00003826                          5869                  
00003826  0C84 FCAA913E           5870                  cmpi.l #$FCAA913E,d4      ; Check the data results
Line 5871 ERROR: Invalid syntax
0000382C                          5871                  bne SUBX_FAIL;                
0000382C  0C85 00007E89           5872                  cmpi.l #$00007E89,d5      ; Check the Flag results
Line 5873 ERROR: Invalid syntax
00003832                          5873                  bne SUBX_FAIL;                
00003832                          5874                     
00003832                          5875      
00003832                          5876      
00003832                          5877      ; -(An),-(An)
00003832                          5878      
00003832  7000                    5879                  move.l #$00000000,d0       ; BYTE Flag Results Accumulator     
00003834  7200                    5880                  move.l #$00000000,d1        
00003836  7400                    5881                  move.l #$00000000,d2      
00003838  207C 00000100           5882                  move.l #$00000100,a0       ; Address for Data-X
0000383E  227C 00000200           5883                  move.l #$00000200,a1       ; Address for Data-Y
00003844  20FC 11FF5580           5884                  move.l #$11FF5580,(a0)+   ; Populate test data
0000384A  20FC 1111FFFF           5885                  move.l #$1111FFFF,(a0)+   ; Populate test data
00003850  20FC 80FF337F           5886                  move.l #$80FF337F,(a0)+   ; Populate test data
00003856  20FC 44444444           5887                  move.l #$44444444,(a0)+   ; Populate test data
0000385C  22FC 80FF337F           5888                  move.l #$80FF337F,(a1)+   ; Populate test data
00003862  22FC 1111FFFF           5889                  move.l #$1111FFFF,(a1)+   ; Populate test data
00003868  22FC 33333333           5890                  move.l #$33333333,(a1)+   ; Populate test data
0000386E  22FC 5580EECC           5891                  move.l #$5580EECC,(a1)+   ; Populate test data
00003874                          5892                  
00003874                          5893  
00003874  7C0F                    5894                  move.l #$0000000F,d6       ; Loop counter
00003876                          5895                  
00003876  9308                    5896  SUBX_LOOP3:     subx.b -(a0),-(a1)
00003878  40C3                    5897                  move SR,d3      
0000387A  0283 0000000F           5898                  andi.l #$0F,d3            ; Isolate flags 
00003880  D083                    5899                  add.l d3,d0               ; Copy flag results into accumulator    
00003882  D211                    5900                  add.b (a1),d1     
00003884  51CE FFF0               5901                  dbf d6,SUBX_LOOP3
00003888                          5902  
00003888                          5903  
00003888  207C 00000110           5904                  move.l #$00000110,a0       ; Address for Data-X
0000388E  227C 00000210           5905                  move.l #$00000210,a1       ; Address for Data-Y
00003894  7C07                    5906                  move.l #$00000007,d6       ; Loop counter
00003896                          5907                  
00003896  9348                    5908  SUBX_LOOP4:     subx.w -(a0),-(a1)
00003898  40C3                    5909                  move SR,d3      
0000389A  0283 0000000F           5910                  andi.l #$0F,d3            ; Isolate flags 
000038A0  D083                    5911                  add.l d3,d0               ; Copy flag results into accumulator    
000038A2  D251                    5912                  add.w (a1),d1     
000038A4  51CE FFF0               5913                  dbf d6,SUBX_LOOP4
000038A8                          5914  
000038A8                          5915  
000038A8  207C 00000110           5916                  move.l #$00000110,a0       ; Address for Data-X
000038AE  227C 00000210           5917                  move.l #$00000210,a1       ; Address for Data-Y
000038B4  7C03                    5918                  move.l #$00000003,d6       ; Loop counter
000038B6                          5919                  
000038B6  9388                    5920  SUBX_LOOP5:     subx.l -(a0),-(a1)
000038B8  40C3                    5921                  move SR,d3      
000038BA  0283 0000000F           5922                  andi.l #$0F,d3            ; Isolate flags 
000038C0  D083                    5923                  add.l d3,d0               ; Copy flag results into accumulator    
000038C2  D291                    5924                  add.l (a1),d1     
000038C4  51CE FFF0               5925                  dbf d6,SUBX_LOOP5
000038C8                          5926  
000038C8                          5927  
000038C8  0C80 000000B1           5928                  cmpi.l #$000000B1,d0      ; Check the flag results
Line 5929 ERROR: Invalid syntax
000038CE                          5929                  bne SUBX_FAIL;                
000038CE  0C81 62C6F417           5930                  cmpi.l #$62C6F417,d1      ; Check the data results 
Line 5931 ERROR: Invalid syntax
000038D4                          5931                  bne SUBX_FAIL;                
000038D4                          5932   
000038D4  307C FF00               5933                  movea #TESTSTATUS,a0
000038D8  117C 0001 0035          5934                  move.b #$1,$35(a0)
000038DE  4E75                    5935                  rts
000038E0                          5936  
000038E0                          5937  SUBX_FAIL:
000038E0  307C FF00               5938      movea #TESTSTATUS,a0
000038E4  117C 0002 0035          5939      move.b #$2,$35(a0)
000038EA  4E75                    5940      rts
000038EC                          5941  
000038EC                          5942  ;-----------------------------------------------------------
000038EC                          5943  ;-----------------------------------------------------------
000038EC                          5944  ; OPCODE : MULU
000038EC                          5945  ;-----------------------------------------------------------
000038EC                          5946  ;-----------------------------------------------------------
000038EC                          5947  
000038EC                          5948  op_MULU:     
000038EC                          5949  
000038EC  203C FE805501           5950                  move.l #$FE805501,d0        ; Initial 
000038F2  223C 5697EDB6           5951                  move.l #$5697EDB6,d1        ; Initial Y
000038F8  243C FE805501           5952                  move.l #$FE805501,d2
000038FE  7600                    5953                  move.l #$00000000,d3
00003900  7800                    5954                  move.l #$00000000,d4        ; Cumulative data results
00003902  7A00                    5955                  move.l #$00000000,d5       ; Cumulative flag results
00003904  7C0E                    5956                  move.l #$0000000E,d6       ; Inner loop counter
00003906  7E0E                    5957                  move.l #$0000000E,d7       ; Outer loop counter
00003908                          5958  
00003908                          5959  
00003908  C0C1                    5960  MULU_OUTER1:    mulu d1,d0             
0000390A  40C3                    5961                  move SR,d3      
0000390C  0283 0000000C           5962                  andi.l #$0C,d3            ; Isolate flags 
00003912  DA83                    5963                  add.l d3,d5               ; Copy flag results into accumulator
00003914  D880                    5964                  add.l d0,d4               ; Copy data results into data accumulator   
00003916  E299                    5965                  ror.l #$1,d1
00003918                          5966  
00003918  51CE FFEE               5967                  dbf d6,MULU_OUTER1
0000391C  E29A                    5968                  ror.l #$1,d2
0000391E  2002                    5969                  move.l d2,d0
00003920  7C0E                    5970                  move.l #$0000000E,d6       ; Inner loop counter
00003922  51CF FFE4               5971                  dbf d7,MULU_OUTER1
00003926                          5972                  
00003926  0C84 76FB988C           5973                  cmpi.l #$76FB988C,d4      ; Check the data results
Line 5974 ERROR: Invalid syntax
0000392C                          5974                  bne MULU_FAIL;                
0000392C                          5975                       
0000392C  0C85 00000170           5976                  cmpi.l #$00000170,d5      ; Check the Flag results
Line 5977 ERROR: Invalid syntax
00003932                          5977                  bne MULU_FAIL;                 
00003932                          5978            
00003932  307C FF00               5979                  movea #TESTSTATUS,a0
00003936  117C 0001 0036          5980                  move.b #$1,$36(a0)
0000393C  4E75                    5981                  rts
0000393E                          5982  
0000393E                          5983  MULU_FAIL:
0000393E  307C FF00               5984      movea #TESTSTATUS,a0
00003942  117C 0002 0036          5985      move.b #$2,$36(a0)
00003948  4E75                    5986      rts            
0000394A                          5987                  
0000394A                          5988  ;-----------------------------------------------------------
0000394A                          5989  ;-----------------------------------------------------------
0000394A                          5990  ; OPCODE : MULS
0000394A                          5991  ;-----------------------------------------------------------
0000394A                          5992  ;-----------------------------------------------------------
0000394A                          5993  
0000394A                          5994  op_MULS:     
0000394A                          5995  
0000394A  203C FE805501           5996                  move.l #$FE805501,d0        ; Initial 
00003950  223C 5697EDB6           5997                  move.l #$5697EDB6,d1        ; Initial Y
00003956  243C FE805501           5998                  move.l #$FE805501,d2
0000395C  7600                    5999                  move.l #$00000000,d3
0000395E  7800                    6000                  move.l #$00000000,d4        ; Cumulative data results
00003960  7A00                    6001                  move.l #$00000000,d5       ; Cumulative flag results
00003962  7C0E                    6002                  move.l #$0000000E,d6       ; Inner loop counter
00003964  7E0E                    6003                  move.l #$0000000E,d7       ; Outer loop counter
00003966                          6004  
00003966                          6005  
00003966  C1C1                    6006  MULS_OUTER1:    muls d1,d0             
00003968  40C3                    6007                  move SR,d3      
0000396A  0283 0000000C           6008                  andi.l #$0C,d3            ; Isolate flags 
00003970  DA83                    6009                  add.l d3,d5               ; Copy flag results into accumulator
00003972  D880                    6010                  add.l d0,d4               ; Copy data results into data accumulator   
00003974  E299                    6011                  ror.l #$1,d1
00003976                          6012  
00003976  51CE FFEE               6013                  dbf d6,MULS_OUTER1
0000397A  E29A                    6014                  ror.l #$1,d2
0000397C  2002                    6015                  move.l d2,d0
0000397E  7C0E                    6016                  move.l #$0000000E,d6       ; Inner loop counter
00003980  51CF FFE4               6017                  dbf d7,MULS_OUTER1
00003984                          6018                  
00003984  0C84 D4E2988C           6019                  cmpi.l #$D4E2988C,d4      ; Check the data results
Line 6020 ERROR: Invalid syntax
0000398A                          6020                  bne MULS_FAIL;                
0000398A                          6021                       
0000398A  0C85 000003E0           6022                  cmpi.l #$000003E0,d5      ; Check the Flag results
Line 6023 ERROR: Invalid syntax
00003990                          6023                  bne MULS_FAIL;                 
00003990                          6024            
00003990  307C FF00               6025                  movea #TESTSTATUS,a0
00003994  117C 0001 0037          6026                  move.b #$1,$37(a0)
0000399A  4E75                    6027                  rts
0000399C                          6028                  
0000399C                          6029  MULS_FAIL:
0000399C  307C FF00               6030      movea #TESTSTATUS,a0
000039A0  117C 0002 0037          6031      move.b #$2,$37(a0)
000039A6  4E75                    6032      rts
000039A8                          6033                  
000039A8                          6034  ;-----------------------------------------------------------
000039A8                          6035  ;-----------------------------------------------------------
000039A8                          6036  ; OPCODE : EXG
000039A8                          6037  ;-----------------------------------------------------------
000039A8                          6038  ;-----------------------------------------------------------
000039A8                          6039  
000039A8                          6040  op_EXG:     
000039A8  223C D1D1D1D1           6041                  move.l #$d1d1d1d1,d1      
000039AE  243C D2D2D2D2           6042                  move.l #$d2d2d2d2,d2      
000039B4  263C D3D3D3D3           6043                  move.l #$d3d3d3d3,d3      
000039BA  227C A1A1A1A1           6044                  move.l #$a1a1a1a1,a1      
000039C0  247C A2A2A2A2           6045                  move.l #$a2a2a2a2,a2  
000039C6  267C A3A3A3A3           6046                  move.l #$a3a3a3a3,a3  
000039CC                          6047                  
000039CC  C342                    6048                  exg d1,d2    
000039CE  C34A                    6049                  exg a1,a2    
000039D0  C78B                    6050                  exg d3,a3  
000039D2                          6051  
000039D2  0C81 D2D2D2D2           6052                  cmpi.l #$d2d2d2d2,d1      ; Check the results
Line 6053 ERROR: Invalid syntax
000039D8                          6053                  bne EXG_FAIL;                 
000039D8  0C82 D1D1D1D1           6054                  cmpi.l #$d1d1d1d1,d2    
Line 6055 ERROR: Invalid syntax
000039DE                          6055                  bne EXG_FAIL;                 
000039DE  0C83 A3A3A3A3           6056                  cmpi.l #$a3a3a3a3,d3    
Line 6057 ERROR: Invalid syntax
000039E4                          6057                  bne EXG_FAIL;                 
000039E4                          6058                  
000039E4  2209                    6059                  move.l a1,d1
000039E6  240A                    6060                  move.l a2,d2
000039E8  260B                    6061                  move.l a3,d3
000039EA                          6062   
000039EA  0C81 A2A2A2A2           6063                  cmpi.l #$a2a2a2a2,d1    
Line 6064 ERROR: Invalid syntax
000039F0                          6064                  bne EXG_FAIL;                 
000039F0  0C82 A1A1A1A1           6065                  cmpi.l #$a1a1a1a1,d2     
Line 6066 ERROR: Invalid syntax
000039F6                          6066                  bne EXG_FAIL;                 
000039F6  0C83 D3D3D3D3           6067                  cmpi.l #$d3d3d3d3,d3     
Line 6068 ERROR: Invalid syntax
000039FC                          6068                  bne EXG_FAIL;                 
000039FC                          6069   
000039FC  307C FF00               6070                  movea #TESTSTATUS,a0
00003A00  117C 0001 0038          6071                  move.b #$1,$38(a0)
00003A06  4E75                    6072                  rts
00003A08                          6073        
00003A08                          6074  EXG_FAIL:
00003A08  307C FF00               6075      movea #TESTSTATUS,a0
00003A0C  117C 0002 0038          6076      move.b #$2,$38(a0)
00003A12  4E75                    6077      rts
00003A14                          6078  
00003A14                          6079  ;-----------------------------------------------------------
00003A14                          6080  ;-----------------------------------------------------------
00003A14                          6081  ; OPCODE : ROx
00003A14                          6082  ;-----------------------------------------------------------
00003A14                          6083  ;-----------------------------------------------------------
00003A14                          6084  
00003A14                          6085      ; Subroutine to check and accumulate the flags 
00003A14  40C3                    6086  ROx_FLAGS:      move SR,d3      
00003A16  0283 0000000F           6087                  andi.l #$0F,d3            ; Isolate flags 
00003A1C  DA83                    6088                  add.l d3,d5               ; Copy flag results into accumulator
00003A1E  4E75                    6089                  rts
00003A20                          6090      
00003A20                          6091  op_ROx:   
00003A20                          6092             
00003A20                          6093      ; Shift a Register LEFT and RIGHT with shift_count ## IN A REGISTER ##
00003A20                          6094      
00003A20                          6095         ; BYTE LEFT
00003A20  203C 80018FF1           6096                  move.l #$80018FF1,d0   
00003A26  7A00                    6097                  move.l #$00000000,d5  
00003A28  7C11                    6098                  move.l #$00000011,d6  
00003A2A                          6099  ROx_LOOP1:
00003A2A  ED38                    6100                  rol.b d6,d0       
00003A2C  4EB8 3A14               6101                  jsr ROx_FLAGS
00003A30  51CE FFF8               6102                  dbf d6,ROx_LOOP1
00003A34  0C80 80018FE3           6103                  cmpi.l #$80018FE3,d0     
Line 6104 ERROR: Invalid syntax
00003A3A                          6104                  bne ROX_FAIL;                 
00003A3A  0C85 0000006B           6105                  cmpi.l #$0000006B,d5     
Line 6106 ERROR: Invalid syntax
00003A40                          6106                  bne ROX_FAIL;      
00003A40                          6107      
00003A40                          6108         ; BYTE RIGHT
00003A40  203C 80018FF1           6109                  move.l #$80018FF1,d0   
00003A46  7C12                    6110                  move.l #$00000012,d6  
00003A48                          6111  ROx_LOOP2:
00003A48  EC38                    6112                  ror.b d6,d0       
00003A4A  4EB8 3A14               6113                  jsr ROx_FLAGS
00003A4E  51CE FFF8               6114                  dbf d6,ROx_LOOP2
00003A52  0C80 80018F3E           6115                  cmpi.l #$80018F3E,d0     
Line 6116 ERROR: Invalid syntax
00003A58                          6116                  bne ROX_FAIL;                 
00003A58  0C85 000000C5           6117                  cmpi.l #$000000C5,d5     
Line 6118 ERROR: Invalid syntax
00003A5E                          6118                  bne ROX_FAIL;      
00003A5E                          6119  
00003A5E                          6120      
00003A5E                          6121         ; WORD LEFT
00003A5E  203C 80018FF1           6122                  move.l #$80018FF1,d0   
00003A64  7C13                    6123                  move.l #$00000013,d6  
00003A66                          6124  ROx_LOOP3:
00003A66  ED78                    6125                  rol.w d6,d0       
00003A68  4EB8 3A14               6126                  jsr ROx_FLAGS
00003A6C  51CE FFF8               6127                  dbf d6,ROx_LOOP3
00003A70  0C80 800163FC           6128                  cmpi.l #$800163FC,d0     
Line 6129 ERROR: Invalid syntax
00003A76                          6129                  bne ROX_FAIL;                 
00003A76  0C85 00000131           6130                  cmpi.l #$00000131,d5     
Line 6131 ERROR: Invalid syntax
00003A7C                          6131                  bne ROX_FAIL;      
00003A7C                          6132      
00003A7C                          6133         ; WORD RIGHT
00003A7C  203C 80018FF1           6134                  move.l #$80018FF1,d0   
00003A82  7C1E                    6135                  move.l #$0000001E,d6  
00003A84                          6136  ROx_LOOP4:
00003A84  EC78                    6137                  ror.w d6,d0       
00003A86  4EB8 3A14               6138                  jsr ROx_FLAGS
00003A8A  51CE FFF8               6139                  dbf d6,ROx_LOOP4
00003A8E  0C80 8001C7F8           6140                  cmpi.l #$8001C7F8,d0     
Line 6141 ERROR: Invalid syntax
00003A94                          6141                  bne ROX_FAIL;                 
00003A94  0C85 000001DB           6142                  cmpi.l #$000001DB,d5     
Line 6143 ERROR: Invalid syntax
00003A9A                          6143                  bne ROX_FAIL;      
00003A9A                          6144  
00003A9A                          6145      
00003A9A                          6146         ; LONG LEFT
00003A9A  203C 80018FF1           6147                  move.l #$80018FF1,d0   
00003AA0  7C15                    6148                  move.l #$00000015,d6  
00003AA2                          6149  ROx_LOOP5:
00003AA2  EDB8                    6150                  rol.l d6,d0       
00003AA4  4EB8 3A14               6151                  jsr ROx_FLAGS
00003AA8  51CE FFF8               6152                  dbf d6,ROx_LOOP5
00003AAC  0C80 00C7F8C0           6153                  cmpi.l #$00C7F8C0,d0     
Line 6154 ERROR: Invalid syntax
00003AB2                          6154                  bne ROX_FAIL;                 
00003AB2  0C85 0000021A           6155                  cmpi.l #$0000021A,d5     
Line 6156 ERROR: Invalid syntax
00003AB8                          6156                  bne ROX_FAIL;      
00003AB8                          6157      
00003AB8                          6158         ; LONG RIGHT
00003AB8  203C 80018FF1           6159                  move.l #$80018FF1,d0   
00003ABE  7C16                    6160                  move.l #$00000016,d6  
00003AC0                          6161  ROx_LOOP6:
00003AC0  ECB8                    6162                  ror.l d6,d0       
00003AC2  4EB8 3A14               6163                  jsr ROx_FLAGS
00003AC6  51CE FFF8               6164                  dbf d6,ROx_LOOP6
00003ACA  0C80 000C7F8C           6165                  cmpi.l #$000C7F8C,d0     
Line 6166 ERROR: Invalid syntax
00003AD0                          6166                  bne ROX_FAIL;                 
00003AD0  0C85 00000250           6167                  cmpi.l #$00000250,d5     
Line 6168 ERROR: Invalid syntax
00003AD6                          6168                  bne ROX_FAIL;      
00003AD6                          6169  
00003AD6                          6170              
00003AD6                          6171      ; Shift a Register LEFT and RIGHT with shift_count ## IN THE OPCODE ##
00003AD6                          6172      
00003AD6  203C 80018FF1           6173                  move.l #$80018FF1,d0   
00003ADC  7A00                    6174                  move.l #$00000000,d5   
00003ADE                          6175  
00003ADE                          6176         ; BYTE LEFT
00003ADE  E318                    6177                  rol.b #1,d0       
00003AE0  4EB8 3A14               6178                  jsr ROx_FLAGS
00003AE4  EB18                    6179                  rol.b #5,d0      
00003AE6  4EB8 3A14               6180                  jsr ROx_FLAGS
00003AEA  EF18                    6181                  rol.b #7,d0   
00003AEC  4EB8 3A14               6182                  jsr ROx_FLAGS
00003AF0  E118                    6183                  rol.b #8,d0   
00003AF2  4EB8 3A14               6184                  jsr ROx_FLAGS
00003AF6  0C80 80018F3E           6185                  cmpi.l #$80018F3E,d0     
Line 6186 ERROR: Invalid syntax
00003AFC                          6186                  bne ROX_FAIL;                 
00003AFC  0C85 00000009           6187                  cmpi.l #$00000009,d5     
Line 6188 ERROR: Invalid syntax
00003B02                          6188                  bne ROX_FAIL;                 
00003B02                          6189       
00003B02                          6190         ; BYTE RIGHT
00003B02  E218                    6191                  ror.b #1,d0       
00003B04  4EB8 3A14               6192                  jsr ROx_FLAGS
00003B08  EA18                    6193                  ror.b #5,d0      
00003B0A  4EB8 3A14               6194                  jsr ROx_FLAGS
00003B0E  EE18                    6195                  ror.b #7,d0   
00003B10  4EB8 3A14               6196                  jsr ROx_FLAGS
00003B14  E018                    6197                  ror.b #8,d0   
00003B16  4EB8 3A14               6198                  jsr ROx_FLAGS
00003B1A  0C80 80018FF1           6199                  cmpi.l #$80018FF1,d0     
Line 6200 ERROR: Invalid syntax
00003B20                          6200                  bne ROX_FAIL;                 
00003B20  0C85 00000024           6201                  cmpi.l #$00000024,d5     
Line 6202 ERROR: Invalid syntax
00003B26                          6202                  bne ROX_FAIL;                 
00003B26                          6203       
00003B26                          6204         ; WORD LEFT
00003B26  E358                    6205                  rol.w #1,d0       
00003B28  4EB8 3A14               6206                  jsr ROx_FLAGS
00003B2C  EB58                    6207                  rol.w #5,d0      
00003B2E  4EB8 3A14               6208                  jsr ROx_FLAGS
00003B32  EF58                    6209                  rol.w #7,d0   
00003B34  4EB8 3A14               6210                  jsr ROx_FLAGS
00003B38  E158                    6211                  rol.w #8,d0   
00003B3A  4EB8 3A14               6212                  jsr ROx_FLAGS
00003B3E  0C80 8001FE31           6213                  cmpi.l #$8001FE31,d0     
Line 6214 ERROR: Invalid syntax
00003B44                          6214                  bne ROX_FAIL;                 
00003B44  0C85 00000037           6215                  cmpi.l #$00000037,d5     
Line 6216 ERROR: Invalid syntax
00003B4A                          6216                  bne ROX_FAIL;                 
00003B4A                          6217                    
00003B4A                          6218         ; WORD RIGHT
00003B4A  E258                    6219                  ror.w #1,d0       
00003B4C  4EB8 3A14               6220                  jsr ROx_FLAGS
00003B50  EA58                    6221                  ror.w #5,d0      
00003B52  4EB8 3A14               6222                  jsr ROx_FLAGS
00003B56  EE58                    6223                  ror.w #7,d0   
00003B58  4EB8 3A14               6224                  jsr ROx_FLAGS
00003B5C  E058                    6225                  ror.w #8,d0   
00003B5E  4EB8 3A14               6226                  jsr ROx_FLAGS
00003B62  0C80 80018FF1           6227                  cmpi.l #$80018FF1,d0     
Line 6228 ERROR: Invalid syntax
00003B68                          6228                  bne ROX_FAIL;                 
00003B68  0C85 0000005B           6229                  cmpi.l #$0000005B,d5     
Line 6230 ERROR: Invalid syntax
00003B6E                          6230                  bne ROX_FAIL;                 
00003B6E                          6231                 
00003B6E                          6232         ; LONG LEFT
00003B6E  E398                    6233                  rol.l #1,d0       
00003B70  4EB8 3A14               6234                  jsr ROx_FLAGS
00003B74  EB98                    6235                  rol.l #5,d0      
00003B76  4EB8 3A14               6236                  jsr ROx_FLAGS
00003B7A  EF98                    6237                  rol.l #7,d0   
00003B7C  4EB8 3A14               6238                  jsr ROx_FLAGS
00003B80  E198                    6239                  rol.l #8,d0   
00003B82  4EB8 3A14               6240                  jsr ROx_FLAGS
00003B86  0C80 FE300031           6241                  cmpi.l #$FE300031,d0     
Line 6242 ERROR: Invalid syntax
00003B8C                          6242                  bne ROX_FAIL;                 
00003B8C  0C85 00000065           6243                  cmpi.l #$00000065,d5     
Line 6244 ERROR: Invalid syntax
00003B92                          6244                  bne ROX_FAIL;                 
00003B92                          6245                                  
00003B92                          6246         ; LONG RIGHT
00003B92  E298                    6247                  ror.l #1,d0       
00003B94  4EB8 3A14               6248                  jsr ROx_FLAGS
00003B98  EA98                    6249                  ror.l #5,d0      
00003B9A  4EB8 3A14               6250                  jsr ROx_FLAGS
00003B9E  EE98                    6251                  ror.l #7,d0   
00003BA0  4EB8 3A14               6252                  jsr ROx_FLAGS
00003BA4  E098                    6253                  ror.l #8,d0   
00003BA6  4EB8 3A14               6254                  jsr ROx_FLAGS
00003BAA  0C80 80018FF1           6255                  cmpi.l #$80018FF1,d0     
Line 6256 ERROR: Invalid syntax
00003BB0                          6256                  bne ROX_FAIL;                 
00003BB0  0C85 00000080           6257                  cmpi.l #$00000080,d5     
Line 6258 ERROR: Invalid syntax
00003BB6                          6258                  bne ROX_FAIL;                 
00003BB6                          6259     
00003BB6                          6260              
00003BB6                          6261      ; Shift a Memory location LEFT and RIGHT with shift_count of 1 - WORD only
00003BB6                          6262      
00003BB6  7A00                    6263                  move.l #$00000000,d5   
00003BB8  207C 00000100           6264                  move.l #$00000100,a0 
00003BBE  30BC 8FF1               6265                  move.w #$8FF1,(a0)
00003BC2                          6266                  
00003BC2                          6267         ; WORD LEFT
00003BC2  E7D0                    6268                  rol (a0)       
00003BC4  4EB8 3A14               6269                  jsr ROx_FLAGS
00003BC8  E7D0                    6270                  rol (a0)       
00003BCA  4EB8 3A14               6271                  jsr ROx_FLAGS
00003BCE  E7D0                    6272                  rol (a0)       
00003BD0  4EB8 3A14               6273                  jsr ROx_FLAGS
00003BD4  E7D0                    6274                  rol (a0)       
00003BD6  4EB8 3A14               6275                  jsr ROx_FLAGS
00003BDA  3010                    6276                  move.w (a0),d0
00003BDC  0C80 8001FF18           6277                  cmpi.l #$8001FF18,d0     
Line 6278 ERROR: Invalid syntax
00003BE2                          6278                  bne ROX_FAIL;                 
00003BE2  0C85 00000009           6279                  cmpi.l #$00000009,d5     
Line 6280 ERROR: Invalid syntax
00003BE8                          6280                  bne ROX_FAIL;                 
00003BE8                          6281                    
00003BE8                          6282         ; WORD RIGHT
00003BE8  E6D0                    6283                  ror (a0)       
00003BEA  4EB8 3A14               6284                  jsr ROx_FLAGS
00003BEE  E6D0                    6285                  ror (a0)       
00003BF0  4EB8 3A14               6286                  jsr ROx_FLAGS
00003BF4  E6D0                    6287                  ror (a0)       
00003BF6  4EB8 3A14               6288                  jsr ROx_FLAGS                
00003BFA  E6D0                    6289                  ror (a0)       
00003BFC  4EB8 3A14               6290                  jsr ROx_FLAGS               
00003C00  E6D0                    6291                  ror (a0)       
00003C02  4EB8 3A14               6292                  jsr ROx_FLAGS
00003C06  E6D0                    6293                  ror (a0)       
00003C08  4EB8 3A14               6294                  jsr ROx_FLAGS
00003C0C  3010                    6295                  move.w (a0),d0
00003C0E  0C80 800163FC           6296                  cmpi.l #$800163FC,d0     
Line 6297 ERROR: Invalid syntax
00003C14                          6297                  bne ROX_FAIL;                 
00003C14  0C85 0000001B           6298                  cmpi.l #$0000001B,d5     
Line 6299 ERROR: Invalid syntax
00003C1A                          6299                  bne ROX_FAIL;                 
00003C1A                          6300  
00003C1A  307C FF00               6301                  movea #TESTSTATUS,a0
00003C1E  117C 0001 0039          6302                  move.b #$1,$39(a0)
00003C24  4E75                    6303                  rts
00003C26                          6304        
00003C26                          6305  ROX_FAIL:
00003C26  307C FF00               6306      movea #TESTSTATUS,a0
00003C2A  117C 0002 0039          6307      move.b #$2,$39(a0)
00003C30  4E75                    6308      rts
00003C32                          6309                  
00003C32                          6310  ;-----------------------------------------------------------
00003C32                          6311  ;-----------------------------------------------------------
00003C32                          6312  ; OPCODE : ROXx
00003C32                          6313  ;-----------------------------------------------------------
00003C32                          6314  ;-----------------------------------------------------------
00003C32                          6315  
00003C32                          6316      ; Subroutine to check and accumulate the flags 
00003C32  40C3                    6317  ROXx_FLAGS:     move SR,d3      
00003C34  0283 0000000F           6318                  andi.l #$0F,d3            ; Isolate flags 
00003C3A  DA83                    6319                  add.l d3,d5               ; Copy flag results into accumulator
00003C3C  4E75                    6320                  rts
00003C3E                          6321      
00003C3E                          6322  op_ROXx:   
00003C3E                          6323             
00003C3E                          6324      ; Shift a Register LEFT and RIGHT with shift_count ## IN A REGISTER ##
00003C3E                          6325      
00003C3E                          6326         ; BYTE LEFT
00003C3E  203C 80018FF1           6327                  move.l #$80018FF1,d0   
00003C44  7A00                    6328                  move.l #$00000000,d5  
00003C46  7C11                    6329                  move.l #$00000011,d6  
00003C48                          6330  ROXx_LOOP1:
00003C48  ED30                    6331                  roxl.b d6,d0       
00003C4A  4EB8 3C32               6332                  jsr ROXx_FLAGS
00003C4E  51CE FFF8               6333                  dbf d6,ROXx_LOOP1
00003C52  0C80 80018FD0           6334                  cmpi.l #$80018FD0,d0     
Line 6335 ERROR: Invalid syntax
00003C58                          6335                  bne ROXX_FAIL;                 
00003C58  0C85 00000042           6336                  cmpi.l #$00000042,d5     
Line 6337 ERROR: Invalid syntax
00003C5E                          6337                  bne ROXX_FAIL;      
00003C5E                          6338      
00003C5E                          6339         ; BYTE RIGHT
00003C5E  203C 80018FF1           6340                  move.l #$80018FF1,d0   
00003C64  7C12                    6341                  move.l #$00000012,d6  
00003C66                          6342  ROXx_LOOP2:
00003C66  EC30                    6343                  roxr.b d6,d0       
00003C68  4EB8 3C32               6344                  jsr ROXx_FLAGS
00003C6C  51CE FFF8               6345                  dbf d6,ROXx_LOOP2
00003C70  0C80 80018F51           6346                  cmpi.l #$80018F51,d0     
Line 6347 ERROR: Invalid syntax
00003C76                          6347                  bne ROXX_FAIL;                 
00003C76  0C85 0000009C           6348                  cmpi.l #$0000009C,d5     
Line 6349 ERROR: Invalid syntax
00003C7C                          6349                  bne ROXX_FAIL;      
00003C7C                          6350  
00003C7C                          6351      
00003C7C                          6352         ; WORD LEFT
00003C7C  203C 80018FF1           6353                  move.l #$80018FF1,d0   
00003C82  7C13                    6354                  move.l #$00000013,d6  
00003C84                          6355  ROXx_LOOP3:
00003C84  ED70                    6356                  roxl.w d6,d0       
00003C86  4EB8 3C32               6357                  jsr ROXx_FLAGS
00003C8A  51CE FFF8               6358                  dbf d6,ROXx_LOOP3
00003C8E  0C80 80013980           6359                  cmpi.l #$80013980,d0     
Line 6360 ERROR: Invalid syntax
00003C94                          6360                  bne ROXX_FAIL;                 
00003C94  0C85 000000C9           6361                  cmpi.l #$000000C9,d5     
Line 6362 ERROR: Invalid syntax
00003C9A                          6362                  bne ROXX_FAIL;      
00003C9A                          6363      
00003C9A                          6364         ; WORD RIGHT
00003C9A  203C 80018FF1           6365                  move.l #$80018FF1,d0   
00003CA0  7C1E                    6366                  move.l #$0000001E,d6  
00003CA2                          6367  ROXx_LOOP4:
00003CA2  EC70                    6368                  roxr.w d6,d0       
00003CA4  4EB8 3C32               6369                  jsr ROXx_FLAGS
00003CA8  51CE FFF8               6370                  dbf d6,ROXx_LOOP4
00003CAC  0C80 80010A1D           6371                  cmpi.l #$80010A1D,d0     
Line 6372 ERROR: Invalid syntax
00003CB2                          6372                  bne ROXX_FAIL;                 
00003CB2  0C85 0000014D           6373                  cmpi.l #$0000014D,d5     
Line 6374 ERROR: Invalid syntax
00003CB8                          6374                  bne ROXX_FAIL;      
00003CB8                          6375  
00003CB8                          6376      
00003CB8                          6377         ; LONG LEFT
00003CB8  203C 80018FF1           6378                  move.l #$80018FF1,d0   
00003CBE  7C15                    6379                  move.l #$00000015,d6  
00003CC0                          6380  ROXx_LOOP5:
00003CC0  EDB0                    6381                  roxl.l d6,d0       
00003CC2  4EB8 3C32               6382                  jsr ROXx_FLAGS
00003CC6  51CE FFF8               6383                  dbf d6,ROXx_LOOP5
00003CCA  0C80 800185D0           6384                  cmpi.l #$800185D0,d0     
Line 6385 ERROR: Invalid syntax
00003CD0                          6385                  bne ROXX_FAIL;                 
00003CD0  0C85 000001A1           6386                  cmpi.l #$000001A1,d5     
Line 6387 ERROR: Invalid syntax
00003CD6                          6387                  bne ROXX_FAIL;      
00003CD6                          6388      
00003CD6                          6389         ; LONG RIGHT
00003CD6  203C 80018FF1           6390                  move.l #$80018FF1,d0   
00003CDC  7C16                    6391                  move.l #$00000016,d6  
00003CDE                          6392  ROXx_LOOP6:
00003CDE  ECB0                    6393                  roxr.l d6,d0       
00003CE0  4EB8 3C32               6394                  jsr ROXx_FLAGS
00003CE4  51CE FFF8               6395                  dbf d6,ROXx_LOOP6
00003CE8  0C80 082D8200           6396                  cmpi.l #$082D8200,d0     
Line 6397 ERROR: Invalid syntax
00003CEE                          6397                  bne ROXX_FAIL;                 
00003CEE  0C85 000001DE           6398                  cmpi.l #$000001DE,d5     
Line 6399 ERROR: Invalid syntax
00003CF4                          6399                  bne ROXX_FAIL;      
00003CF4                          6400  
00003CF4                          6401              
00003CF4                          6402      ; Shift a Register LEFT and RIGHT with shift_count ## IN THE OPCODE ##
00003CF4                          6403      
00003CF4  203C 80018FF1           6404                  move.l #$80018FF1,d0   
00003CFA  7A00                    6405                  move.l #$00000000,d5   
00003CFC                          6406  
00003CFC                          6407         ; BYTE LEFT
00003CFC  E310                    6408                  roxl.b #1,d0       
00003CFE  4EB8 3C32               6409                  jsr ROXx_FLAGS
00003D02  EB10                    6410                  roxl.b #5,d0      
00003D04  4EB8 3C32               6411                  jsr ROXx_FLAGS
00003D08  EF10                    6412                  roxl.b #7,d0   
00003D0A  4EB8 3C32               6413                  jsr ROXx_FLAGS
00003D0E  E110                    6414                  roxl.b #8,d0   
00003D10  4EB8 3C32               6415                  jsr ROXx_FLAGS
00003D14  0C80 80018F09           6416                  cmpi.l #$80018F09,d0     
Line 6417 ERROR: Invalid syntax
00003D1A                          6417                  bne ROXX_FAIL;                 
00003D1A  0C85 0000000B           6418                  cmpi.l #$0000000B,d5     
Line 6419 ERROR: Invalid syntax
00003D20                          6419                  bne ROXX_FAIL;                 
00003D20                          6420       
00003D20                          6421         ; BYTE RIGHT
00003D20  E210                    6422                  roxr.b #1,d0       
00003D22  4EB8 3C32               6423                  jsr ROXx_FLAGS
00003D26  EA10                    6424                  roxr.b #5,d0      
00003D28  4EB8 3C32               6425                  jsr ROXx_FLAGS
00003D2C  EE10                    6426                  roxr.b #7,d0   
00003D2E  4EB8 3C32               6427                  jsr ROXx_FLAGS
00003D32  E010                    6428                  roxr.b #8,d0   
00003D34  4EB8 3C32               6429                  jsr ROXx_FLAGS
00003D38  0C80 80018F00           6430                  cmpi.l #$80018F00,d0     
Line 6431 ERROR: Invalid syntax
00003D3E                          6431                  bne ROXX_FAIL;                 
00003D3E  0C85 00000015           6432                  cmpi.l #$00000015,d5     
Line 6433 ERROR: Invalid syntax
00003D44                          6433                  bne ROXX_FAIL;                 
00003D44                          6434       
00003D44                          6435         ; WORD LEFT
00003D44  E350                    6436                  roxl.w #1,d0       
00003D46  4EB8 3C32               6437                  jsr ROXx_FLAGS
00003D4A  EB50                    6438                  roxl.w #5,d0      
00003D4C  4EB8 3C32               6439                  jsr ROXx_FLAGS
00003D50  EF50                    6440                  roxl.w #7,d0   
00003D52  4EB8 3C32               6441                  jsr ROXx_FLAGS
00003D56  E150                    6442                  roxl.w #8,d0   
00003D58  4EB8 3C32               6443                  jsr ROXx_FLAGS
00003D5C  0C80 8001B000           6444                  cmpi.l #$8001B000,d0     
Line 6445 ERROR: Invalid syntax
00003D62                          6445                  bne ROXX_FAIL;                 
00003D62  0C85 00000027           6446                  cmpi.l #$00000027,d5     
Line 6447 ERROR: Invalid syntax
00003D68                          6447                  bne ROXX_FAIL;                 
00003D68                          6448                    
00003D68                          6449         ; WORD RIGHT
00003D68  E250                    6450                  roxr.w #1,d0       
00003D6A  4EB8 3C32               6451                  jsr ROXx_FLAGS
00003D6E  EA50                    6452                  roxr.w #5,d0      
00003D70  4EB8 3C32               6453                  jsr ROXx_FLAGS
00003D74  EE50                    6454                  roxr.w #7,d0   
00003D76  4EB8 3C32               6455                  jsr ROXx_FLAGS
00003D7A  E050                    6456                  roxr.w #8,d0   
00003D7C  4EB8 3C32               6457                  jsr ROXx_FLAGS
00003D80  0C80 80010A00           6458                  cmpi.l #$80010A00,d0     
Line 6459 ERROR: Invalid syntax
00003D86                          6459                  bne ROXX_FAIL;                 
00003D86  0C85 00000028           6460                  cmpi.l #$00000028,d5     
Line 6461 ERROR: Invalid syntax
00003D8C                          6461                  bne ROXX_FAIL;                 
00003D8C                          6462                 
00003D8C                          6463         ; LONG LEFT
00003D8C  E390                    6464                  roxl.l #1,d0       
00003D8E  4EB8 3C32               6465                  jsr ROXx_FLAGS
00003D92  EB90                    6466                  roxl.l #5,d0      
00003D94  4EB8 3C32               6467                  jsr ROXx_FLAGS
00003D98  EF90                    6468                  roxl.l #7,d0   
00003D9A  4EB8 3C32               6469                  jsr ROXx_FLAGS
00003D9E  E190                    6470                  roxl.l #8,d0   
00003DA0  4EB8 3C32               6471                  jsr ROXx_FLAGS
00003DA4  0C80 40000010           6472                  cmpi.l #$40000010,d0     
Line 6473 ERROR: Invalid syntax
00003DAA                          6473                  bne ROXX_FAIL;                 
00003DAA  0C85 0000002A           6474                  cmpi.l #$0000002A,d5     
Line 6475 ERROR: Invalid syntax
00003DB0                          6475                  bne ROXX_FAIL;                 
00003DB0                          6476                                  
00003DB0                          6477         ; LONG RIGHT
00003DB0  E290                    6478                  roxr.l #1,d0       
00003DB2  4EB8 3C32               6479                  jsr ROXx_FLAGS
00003DB6  EA90                    6480                  roxr.l #5,d0      
00003DB8  4EB8 3C32               6481                  jsr ROXx_FLAGS
00003DBC  EE90                    6482                  roxr.l #7,d0   
00003DBE  4EB8 3C32               6483                  jsr ROXx_FLAGS
00003DC2  E090                    6484                  roxr.l #8,d0   
00003DC4  4EB8 3C32               6485                  jsr ROXx_FLAGS
00003DC8  0C80 00010200           6486                  cmpi.l #$00010200,d0     
Line 6487 ERROR: Invalid syntax
00003DCE                          6487                  bne ROXX_FAIL;                 
00003DCE  0C85 00000032           6488                  cmpi.l #$00000032,d5     
Line 6489 ERROR: Invalid syntax
00003DD4                          6489                  bne ROXX_FAIL;                 
00003DD4                          6490     
00003DD4                          6491              
00003DD4                          6492      ; Shift a Memory location LEFT and RIGHT with shift_count of 1 - WORD only
00003DD4                          6493      
00003DD4  7A00                    6494                  move.l #$00000000,d5   
00003DD6  207C 00000100           6495                  move.l #$00000100,a0 
00003DDC  30BC 8FF1               6496                  move.w #$8FF1,(a0)
00003DE0                          6497                  
00003DE0                          6498         ; WORD LEFT
00003DE0  E5D0                    6499                  roxl (a0)       
00003DE2  4EB8 3C32               6500                  jsr ROXx_FLAGS
00003DE6  E5D0                    6501                  roxl (a0)       
00003DE8  4EB8 3C32               6502                  jsr ROXx_FLAGS
00003DEC  E5D0                    6503                  roxl (a0)       
00003DEE  4EB8 3C32               6504                  jsr ROXx_FLAGS
00003DF2  E5D0                    6505                  roxl (a0)       
00003DF4  4EB8 3C32               6506                  jsr ROXx_FLAGS
00003DF8  3010                    6507                  move.w (a0),d0
00003DFA  0C80 0001FF10           6508                  cmpi.l #$0001FF10,d0     
Line 6509 ERROR: Invalid syntax
00003E00                          6509                  bne ROXX_FAIL;                 
00003E00  0C85 00000009           6510                  cmpi.l #$00000009,d5     
Line 6511 ERROR: Invalid syntax
00003E06                          6511                  bne ROXX_FAIL;                 
00003E06                          6512                    
00003E06                          6513         ; WORD RIGHT
00003E06  E4D0                    6514                  roxr (a0)       
00003E08  4EB8 3C32               6515                  jsr ROXx_FLAGS
00003E0C  E4D0                    6516                  roxr (a0)       
00003E0E  4EB8 3C32               6517                  jsr ROXx_FLAGS
00003E12  E4D0                    6518                  roxr (a0)       
00003E14  4EB8 3C32               6519                  jsr ROXx_FLAGS                
00003E18  E4D0                    6520                  roxr (a0)       
00003E1A  4EB8 3C32               6521                  jsr ROXx_FLAGS               
00003E1E  E4D0                    6522                  roxr (a0)       
00003E20  4EB8 3C32               6523                  jsr ROXx_FLAGS
00003E24  E4D0                    6524                  roxr (a0)       
00003E26  4EB8 3C32               6525                  jsr ROXx_FLAGS
00003E2A  3010                    6526                  move.w (a0),d0
00003E2C  0C80 000103FC           6527                  cmpi.l #$000103FC,d0     
Line 6528 ERROR: Invalid syntax
00003E32                          6528                  bne ROXX_FAIL;                 
00003E32  0C85 0000000A           6529                  cmpi.l #$0000000A,d5     
Line 6530 ERROR: Invalid syntax
00003E38                          6530                  bne ROXX_FAIL;                 
00003E38                          6531  
00003E38  307C FF00               6532                  movea #TESTSTATUS,a0
00003E3C  117C 0001 003A          6533                  move.b #$1,$3a(a0)
00003E42  4E75                    6534                  rts        
00003E44                          6535  
00003E44                          6536  ROXX_FAIL:
00003E44  307C FF00               6537      movea #TESTSTATUS,a0
00003E48  117C 0002 003A          6538      move.b #$2,$3a(a0)
00003E4E  4E75                    6539      rts
00003E50                          6540   
00003E50                          6541                  
00003E50                          6542  ;-----------------------------------------------------------
00003E50                          6543  ;-----------------------------------------------------------
00003E50                          6544  ; OPCODE : SHIFTS
00003E50                          6545  ;-----------------------------------------------------------
00003E50                          6546  ;-----------------------------------------------------------
00003E50                          6547  
00003E50                          6548      ; Subroutine to check and accumulate the flags 
00003E50  40C3                    6549  SHIFTS_FLAGS:   move SR,d3      
00003E52  0283 0000000F           6550                  andi.l #$0F,d3            ; Isolate flags 
00003E58  DA83                    6551                  add.l d3,d5               ; Copy flag results into accumulator
00003E5A  4E75                    6552                  rts
00003E5C                          6553      
00003E5C                          6554  op_SHIFTS:   
00003E5C                          6555             
00003E5C                          6556      ; Shift a Register LEFT and RIGHT with shift_count ## IN A REGISTER ##
00003E5C                          6557      
00003E5C                          6558         ; BYTE LEFT
00003E5C  203C 80018F81           6559                  move.l #$80018F81,d0   
00003E62  7A00                    6560                  move.l #$00000000,d5  
00003E64  7C02                    6561                  move.l #$00000002,d6  
00003E66                          6562  SHIFTS_LOOP1:
00003E66  ED20                    6563                  asl.b d6,d0       
00003E68  4EB8 3E50               6564                  jsr SHIFTS_FLAGS
00003E6C  51CE FFF8               6565                  dbf d6,SHIFTS_LOOP1
00003E70  0C80 80018F08           6566                  cmpi.l #$80018F08,d0     
Line 6567 ERROR: Invalid syntax
00003E76                          6567                  bne SHIFT_FAIL;                 
00003E76  0C85 00000002           6568                  cmpi.l #$00000002,d5     
Line 6569 ERROR: Invalid syntax
00003E7C                          6569                  bne SHIFT_FAIL;      
00003E7C                          6570      
00003E7C                          6571         ; BYTE RIGHT
00003E7C  203C 80018F81           6572                  move.l #$80018F81,d0   
00003E82  7C02                    6573                  move.l #$00000002,d6  
00003E84                          6574  SHIFTS_LOOP2:
00003E84  EC20                    6575                  asr.b d6,d0       
00003E86  4EB8 3E50               6576                  jsr SHIFTS_FLAGS
00003E8A  51CE FFF8               6577                  dbf d6,SHIFTS_LOOP2
00003E8E  0C80 80018FF0           6578                  cmpi.l #$80018FF0,d0     
Line 6579 ERROR: Invalid syntax
00003E94                          6579                  bne SHIFT_FAIL;                 
00003E94  0C85 0000001A           6580                  cmpi.l #$0000001A,d5     
Line 6581 ERROR: Invalid syntax
00003E9A                          6581                  bne SHIFT_FAIL;      
00003E9A                          6582  
00003E9A                          6583      
00003E9A                          6584         ; WORD LEFT
00003E9A  203C 80018FF1           6585                  move.l #$80018FF1,d0   
00003EA0  7C02                    6586                  move.l #$00000002,d6  
00003EA2                          6587  SHIFTS_LOOP3:
00003EA2  ED60                    6588                  asl.w d6,d0       
00003EA4  4EB8 3E50               6589                  jsr SHIFTS_FLAGS
00003EA8  51CE FFF8               6590                  dbf d6,SHIFTS_LOOP3
00003EAC  0C80 80017F88           6591                  cmpi.l #$80017F88,d0     
Line 6592 ERROR: Invalid syntax
00003EB2                          6592                  bne SHIFT_FAIL;                 
00003EB2  0C85 0000001C           6593                  cmpi.l #$0000001C,d5     
Line 6594 ERROR: Invalid syntax
00003EB8                          6594                  bne SHIFT_FAIL;      
00003EB8                          6595      
00003EB8                          6596         ; WORD RIGHT
00003EB8  203C 80018FF1           6597                  move.l #$80018FF1,d0   
00003EBE  7C02                    6598                  move.l #$00000002,d6  
00003EC0                          6599  SHIFTS_LOOP4:
00003EC0  EC60                    6600                  asr.w d6,d0       
00003EC2  4EB8 3E50               6601                  jsr SHIFTS_FLAGS
00003EC6  51CE FFF8               6602                  dbf d6,SHIFTS_LOOP4
00003ECA  0C80 8001F1FE           6603                  cmpi.l #$8001F1FE,d0     
Line 6604 ERROR: Invalid syntax
00003ED0                          6604                  bne SHIFT_FAIL;                 
00003ED0  0C85 00000034           6605                  cmpi.l #$00000034,d5     
Line 6606 ERROR: Invalid syntax
00003ED6                          6606                  bne SHIFT_FAIL;      
00003ED6                          6607  
00003ED6                          6608      
00003ED6                          6609         ; LONG LEFT
00003ED6  203C 80018FF1           6610                  move.l #$80018FF1,d0   
00003EDC  7C02                    6611                  move.l #$00000002,d6  
00003EDE                          6612  SHIFTS_LOOP5:
00003EDE  EDA0                    6613                  asl.l d6,d0       
00003EE0  4EB8 3E50               6614                  jsr SHIFTS_FLAGS
00003EE4  51CE FFF8               6615                  dbf d6,SHIFTS_LOOP5
00003EE8  0C80 000C7F88           6616                  cmpi.l #$000C7F88,d0     
Line 6617 ERROR: Invalid syntax
00003EEE                          6617                  bne SHIFT_FAIL;                 
00003EEE  0C85 00000036           6618                  cmpi.l #$00000036,d5     
Line 6619 ERROR: Invalid syntax
00003EF4                          6619                  bne SHIFT_FAIL;      
00003EF4                          6620      
00003EF4                          6621         ; LONG RIGHT
00003EF4  203C 80018FF1           6622                  move.l #$80018FF1,d0   
00003EFA  7C02                    6623                  move.l #$00000002,d6  
00003EFC                          6624  SHIFTS_LOOP6:
00003EFC  ECA0                    6625                  asr.l d6,d0       
00003EFE  4EB8 3E50               6626                  jsr SHIFTS_FLAGS
00003F02  51CE FFF8               6627                  dbf d6,SHIFTS_LOOP6
00003F06  0C80 F00031FE           6628                  cmpi.l #$F00031FE,d0     
Line 6629 ERROR: Invalid syntax
00003F0C                          6629                  bne SHIFT_FAIL;                 
00003F0C  0C85 0000004E           6630                  cmpi.l #$0000004E,d5     
Line 6631 ERROR: Invalid syntax
00003F12                          6631                  bne SHIFT_FAIL;      
00003F12                          6632  
00003F12                          6633              
00003F12                          6634      ; Shift a Register LEFT and RIGHT with shift_count ## IN THE OPCODE ##
00003F12                          6635      
00003F12  203C 80018FF1           6636                  move.l #$80018FF1,d0   
00003F18  7A00                    6637                  move.l #$00000000,d5   
00003F1A                          6638  
00003F1A                          6639         ; BYTE LEFT
00003F1A  E300                    6640                  asl.b #1,d0       
00003F1C  4EB8 3E50               6641                  jsr SHIFTS_FLAGS
00003F20  E500                    6642                  asl.b #2,d0      
00003F22  4EB8 3E50               6643                  jsr SHIFTS_FLAGS
00003F26  E300                    6644                  asl.b #1,d0   
00003F28  4EB8 3E50               6645                  jsr SHIFTS_FLAGS
00003F2C  E700                    6646                  asl.b #3,d0   
00003F2E  4EB8 3E50               6647                  jsr SHIFTS_FLAGS
00003F32  0C80 80018F80           6648                  cmpi.l #$80018F80,d0     
Line 6649 ERROR: Invalid syntax
00003F38                          6649                  bne SHIFT_FAIL;                 
00003F38  0C85 0000001F           6650                  cmpi.l #$0000001F,d5     
Line 6651 ERROR: Invalid syntax
00003F3E                          6651                  bne SHIFT_FAIL;                 
00003F3E                          6652       
00003F3E                          6653         ; BYTE RIGHT
00003F3E  E200                    6654                  asr.b #1,d0       
00003F40  4EB8 3E50               6655                  jsr SHIFTS_FLAGS
00003F44  E400                    6656                  asr.b #2,d0      
00003F46  4EB8 3E50               6657                  jsr SHIFTS_FLAGS
00003F4A  E600                    6658                  asr.b #3,d0   
00003F4C  4EB8 3E50               6659                  jsr SHIFTS_FLAGS
00003F50  E200                    6660                  asr.b #1,d0   
00003F52  4EB8 3E50               6661                  jsr SHIFTS_FLAGS
00003F56  0C80 80018FFF           6662                  cmpi.l #$80018FFF,d0     
Line 6663 ERROR: Invalid syntax
00003F5C                          6663                  bne SHIFT_FAIL;                 
00003F5C  0C85 0000003F           6664                  cmpi.l #$0000003F,d5     
Line 6665 ERROR: Invalid syntax
00003F62                          6665                  bne SHIFT_FAIL;                 
00003F62                          6666       
00003F62                          6667         ; WORD LEFT
00003F62  E340                    6668                  asl.w #1,d0       
00003F64  4EB8 3E50               6669                  jsr SHIFTS_FLAGS
00003F68  E540                    6670                  asl.w #2,d0      
00003F6A  4EB8 3E50               6671                  jsr SHIFTS_FLAGS
00003F6E  E740                    6672                  asl.w #3,d0   
00003F70  4EB8 3E50               6673                  jsr SHIFTS_FLAGS
00003F74  EB40                    6674                  asl.w #5,d0   
00003F76  4EB8 3E50               6675                  jsr SHIFTS_FLAGS
00003F7A  0C80 8001F800           6676                  cmpi.l #$8001F800,d0     
Line 6677 ERROR: Invalid syntax
00003F80                          6677                  bne SHIFT_FAIL;                 
00003F80  0C85 00000056           6678                  cmpi.l #$00000056,d5     
Line 6679 ERROR: Invalid syntax
00003F86                          6679                  bne SHIFT_FAIL;                 
00003F86                          6680                    
00003F86                          6681         ; WORD RIGHT
00003F86  EA40                    6682                  asr.w #5,d0       
00003F88  4EB8 3E50               6683                  jsr SHIFTS_FLAGS
00003F8C  E240                    6684                  asr.w #1,d0      
00003F8E  4EB8 3E50               6685                  jsr SHIFTS_FLAGS
00003F92  E440                    6686                  asr.w #2,d0   
00003F94  4EB8 3E50               6687                  jsr SHIFTS_FLAGS
00003F98  E840                    6688                  asr.w #4,d0   
00003F9A  4EB8 3E50               6689                  jsr SHIFTS_FLAGS
00003F9E  0C80 8001FFFF           6690                  cmpi.l #$8001FFFF,d0     
Line 6691 ERROR: Invalid syntax
00003FA4                          6691                  bne SHIFT_FAIL;                 
00003FA4  0C85 00000077           6692                  cmpi.l #$00000077,d5     
Line 6693 ERROR: Invalid syntax
00003FAA                          6693                  bne SHIFT_FAIL;                 
00003FAA                          6694                 
00003FAA                          6695         ; LONG LEFT
00003FAA  203C 80018FF1           6696                  move.l #$80018FF1,d0   
00003FB0  E380                    6697                  asl.l #1,d0       
00003FB2  4EB8 3E50               6698                  jsr SHIFTS_FLAGS
00003FB6  E580                    6699                  asl.l #2,d0      
00003FB8  4EB8 3E50               6700                  jsr SHIFTS_FLAGS
00003FBC  EF80                    6701                  asl.l #7,d0   
00003FBE  4EB8 3E50               6702                  jsr SHIFTS_FLAGS
00003FC2  E980                    6703                  asl.l #4,d0   
00003FC4  4EB8 3E50               6704                  jsr SHIFTS_FLAGS
00003FC8  0C80 63FC4000           6705                  cmpi.l #$63FC4000,d0     
Line 6706 ERROR: Invalid syntax
00003FCE                          6706                  bne SHIFT_FAIL;                 
00003FCE  0C85 0000007A           6707                  cmpi.l #$0000007A,d5     
Line 6708 ERROR: Invalid syntax
00003FD4                          6708                  bne SHIFT_FAIL;                 
00003FD4                          6709                                  
00003FD4                          6710         ; LONG RIGHT
00003FD4  203C 80018FF1           6711                  move.l #$80018FF1,d0   
00003FDA  E280                    6712                  asr.l #1,d0       
00003FDC  4EB8 3E50               6713                  jsr SHIFTS_FLAGS
00003FE0  EA80                    6714                  asr.l #5,d0      
00003FE2  4EB8 3E50               6715                  jsr SHIFTS_FLAGS
00003FE6  EE80                    6716                  asr.l #7,d0   
00003FE8  4EB8 3E50               6717                  jsr SHIFTS_FLAGS
00003FEC  E080                    6718                  asr.l #8,d0   
00003FEE  4EB8 3E50               6719                  jsr SHIFTS_FLAGS
00003FF2  0C80 FFFFFC00           6720                  cmpi.l #$FFFFFC00,d0     
Line 6721 ERROR: Invalid syntax
00003FF8                          6721                  bne SHIFT_FAIL;                 
00003FF8  0C85 0000009C           6722                  cmpi.l #$0000009C,d5     
Line 6723 ERROR: Invalid syntax
00003FFE                          6723                  bne SHIFT_FAIL;                 
00003FFE                          6724     
00003FFE                          6725              
00003FFE                          6726      ; Shift a Memory location LEFT and RIGHT with shift_count of 1 - WORD only
00003FFE                          6727      
00003FFE  7A00                    6728                  move.l #$00000000,d5   
00004000  207C 00000100           6729                  move.l #$00000100,a0 
00004006  30BC 8FF1               6730                  move.w #$8FF1,(a0)
0000400A                          6731                  
0000400A                          6732         ; WORD LEFT
0000400A  E1D0                    6733                  asl  (a0)       
0000400C  4EB8 3E50               6734                  jsr SHIFTS_FLAGS
00004010  E1D0                    6735                  asl  (a0)       
00004012  4EB8 3E50               6736                  jsr SHIFTS_FLAGS
00004016  E1D0                    6737                  asl  (a0)       
00004018  4EB8 3E50               6738                  jsr SHIFTS_FLAGS
0000401C  E1D0                    6739                  asl  (a0)       
0000401E  4EB8 3E50               6740                  jsr SHIFTS_FLAGS
00004022  3010                    6741                  move.w (a0),d0
00004024  0C80 FFFFFF10           6742                  cmpi.l #$FFFFFF10,d0     
Line 6743 ERROR: Invalid syntax
0000402A                          6743                  bne SHIFT_FAIL;                 
0000402A  0C85 0000000D           6744                  cmpi.l #$0000000D,d5     
Line 6745 ERROR: Invalid syntax
00004030                          6745                  bne SHIFT_FAIL;                 
00004030                          6746                    
00004030                          6747         ; WORD RIGHT
00004030  E0D0                    6748                  asr (a0)       
00004032  4EB8 3E50               6749                  jsr SHIFTS_FLAGS
00004036  E0D0                    6750                  asr (a0)       
00004038  4EB8 3E50               6751                  jsr SHIFTS_FLAGS
0000403C  E0D0                    6752                  asr (a0)       
0000403E  4EB8 3E50               6753                  jsr SHIFTS_FLAGS                
00004042  E0D0                    6754                  asr (a0)       
00004044  4EB8 3E50               6755                  jsr SHIFTS_FLAGS               
00004048  E0D0                    6756                  asr (a0)       
0000404A  4EB8 3E50               6757                  jsr SHIFTS_FLAGS
0000404E  E0D0                    6758                  asr (a0)       
00004050  4EB8 3E50               6759                  jsr SHIFTS_FLAGS
00004054  3010                    6760                  move.w (a0),d0
00004056  0C80 FFFFFFFC           6761                  cmpi.l #$FFFFFFFC,d0     
Line 6762 ERROR: Invalid syntax
0000405C                          6762                  bne SHIFT_FAIL;                 
0000405C  0C85 0000003E           6763                  cmpi.l #$0000003E,d5     
Line 6764 ERROR: Invalid syntax
00004062                          6764                  bne SHIFT_FAIL;                 
00004062                          6765  
00004062  307C FF00               6766                  movea #TESTSTATUS,a0
00004066  117C 0001 003B          6767                  move.b #$1,$3b(a0)
0000406C  4E75                    6768                  rts      
0000406E                          6769          
0000406E                          6770  SHIFT_FAIL:
0000406E  307C FF00               6771      movea #TESTSTATUS,a0
00004072  117C 0002 003B          6772      move.b #$2,$3b(a0)
00004078  4E75                    6773      rts
0000407A                          6774                  
0000407A                          6775  ;-----------------------------------------------------------
0000407A                          6776  ;-----------------------------------------------------------
0000407A                          6777  ; OPCODE : SHIFTS2
0000407A                          6778  ;-----------------------------------------------------------
0000407A                          6779  ;-----------------------------------------------------------
0000407A                          6780  
0000407A                          6781      ; Subroutine to check and accumulate the flags 
0000407A  40C3                    6782  SHIFTS2_FLAGS:  move SR,d3      
0000407C  0283 0000000F           6783                  andi.l #$0F,d3            ; Isolate flags 
00004082  DA83                    6784                  add.l d3,d5               ; Copy flag results into accumulator
00004084  4E75                    6785                  rts
00004086                          6786      
00004086                          6787  op_SHIFTS2:   
00004086                          6788             
00004086                          6789      ; Shift a Register LEFT and RIGHT with shift_count ## IN A REGISTER ##
00004086                          6790      
00004086                          6791         ; BYTE LEFT
00004086  203C 80018F81           6792                  move.l #$80018F81,d0   
0000408C  7A00                    6793                  move.l #$00000000,d5  
0000408E  7C02                    6794                  move.l #$00000002,d6  
00004090                          6795  SHIFTS2_LOOP1:
00004090  ED28                    6796                  lsl.b d6,d0       
00004092  4EB8 407A               6797                  jsr SHIFTS2_FLAGS
00004096  51CE FFF8               6798                  dbf d6,SHIFTS2_LOOP1
0000409A  0C80 80018F08           6799                  cmpi.l #$80018F08,d0     
Line 6800 ERROR: Invalid syntax
000040A0                          6800                  bne LSHIFT_FAIL;                 
000040A0  0C85 00000000           6801                  cmpi.l #$00000000,d5     
Line 6802 ERROR: Invalid syntax
000040A6                          6802                  bne LSHIFT_FAIL;      
000040A6                          6803      
000040A6                          6804         ; BYTE RIGHT
000040A6  203C 80018F81           6805                  move.l #$80018F81,d0   
000040AC  7C02                    6806                  move.l #$00000002,d6  
000040AE                          6807  SHIFTS2_LOOP2:
000040AE  EC28                    6808                  lsr.b d6,d0       
000040B0  4EB8 407A               6809                  jsr SHIFTS2_FLAGS
000040B4  51CE FFF8               6810                  dbf d6,SHIFTS2_LOOP2
000040B8  0C80 80018F10           6811                  cmpi.l #$80018F10,d0     
Line 6812 ERROR: Invalid syntax
000040BE                          6812                  bne LSHIFT_FAIL;                 
000040BE  0C85 00000000           6813                  cmpi.l #$00000000,d5     
Line 6814 ERROR: Invalid syntax
000040C4                          6814                  bne LSHIFT_FAIL;      
000040C4                          6815  
000040C4                          6816      
000040C4                          6817         ; WORD LEFT
000040C4  203C 80018FF1           6818                  move.l #$80018FF1,d0   
000040CA  7C02                    6819                  move.l #$00000002,d6  
000040CC                          6820  SHIFTS2_LOOP3:
000040CC  ED68                    6821                  lsl.w d6,d0       
000040CE  4EB8 407A               6822                  jsr SHIFTS2_FLAGS
000040D2  51CE FFF8               6823                  dbf d6,SHIFTS2_LOOP3
000040D6  0C80 80017F88           6824                  cmpi.l #$80017F88,d0     
Line 6825 ERROR: Invalid syntax
000040DC                          6825                  bne LSHIFT_FAIL;                 
000040DC  0C85 00000000           6826                  cmpi.l #$00000000,d5     
Line 6827 ERROR: Invalid syntax
000040E2                          6827                  bne LSHIFT_FAIL;      
000040E2                          6828      
000040E2                          6829         ; WORD RIGHT
000040E2  203C 80018FF1           6830                  move.l #$80018FF1,d0   
000040E8  7C02                    6831                  move.l #$00000002,d6  
000040EA                          6832  SHIFTS2_LOOP4:
000040EA  EC68                    6833                  lsr.w d6,d0       
000040EC  4EB8 407A               6834                  jsr SHIFTS2_FLAGS
000040F0  51CE FFF8               6835                  dbf d6,SHIFTS2_LOOP4
000040F4  0C80 800111FE           6836                  cmpi.l #$800111FE,d0     
Line 6837 ERROR: Invalid syntax
000040FA                          6837                  bne LSHIFT_FAIL;                 
000040FA  0C85 00000000           6838                  cmpi.l #$00000000,d5     
Line 6839 ERROR: Invalid syntax
00004100                          6839                  bne LSHIFT_FAIL;      
00004100                          6840  
00004100                          6841      
00004100                          6842         ; LONG LEFT
00004100  203C 80018FF1           6843                  move.l #$80018FF1,d0   
00004106  7C02                    6844                  move.l #$00000002,d6  
00004108                          6845  SHIFTS2_LOOP5:
00004108  EDA8                    6846                  lsl.l d6,d0       
0000410A  4EB8 407A               6847                  jsr SHIFTS2_FLAGS
0000410E  51CE FFF8               6848                  dbf d6,SHIFTS2_LOOP5
00004112  0C80 000C7F88           6849                  cmpi.l #$000C7F88,d0     
Line 6850 ERROR: Invalid syntax
00004118                          6850                  bne LSHIFT_FAIL;                 
00004118  0C85 00000000           6851                  cmpi.l #$00000000,d5     
Line 6852 ERROR: Invalid syntax
0000411E                          6852                  bne LSHIFT_FAIL;      
0000411E                          6853      
0000411E                          6854         ; LONG RIGHT
0000411E  203C 80018FF1           6855                  move.l #$80018FF1,d0   
00004124  7C02                    6856                  move.l #$00000002,d6  
00004126                          6857  SHIFTS2_LOOP6:
00004126  ECA8                    6858                  lsr.l d6,d0       
00004128  4EB8 407A               6859                  jsr SHIFTS2_FLAGS
0000412C  51CE FFF8               6860                  dbf d6,SHIFTS2_LOOP6
00004130  0C80 100031FE           6861                  cmpi.l #$100031FE,d0     
Line 6862 ERROR: Invalid syntax
00004136                          6862                  bne LSHIFT_FAIL;                 
00004136  0C85 00000000           6863                  cmpi.l #$00000000,d5     
Line 6864 ERROR: Invalid syntax
0000413C                          6864                  bne LSHIFT_FAIL;      
0000413C                          6865  
0000413C                          6866              
0000413C                          6867      ; Shift a Register LEFT and RIGHT with shift_count ## IN THE OPCODE ##
0000413C                          6868      
0000413C  203C 80018FF1           6869                  move.l #$80018FF1,d0   
00004142  7A00                    6870                  move.l #$00000000,d5   
00004144                          6871  
00004144                          6872         ; BYTE LEFT
00004144  E308                    6873                  lsl.b #1,d0       
00004146  4EB8 407A               6874                  jsr SHIFTS2_FLAGS
0000414A  E508                    6875                  lsl.b #2,d0      
0000414C  4EB8 407A               6876                  jsr SHIFTS2_FLAGS
00004150  E308                    6877                  lsl.b #1,d0   
00004152  4EB8 407A               6878                  jsr SHIFTS2_FLAGS
00004156  E708                    6879                  lsl.b #3,d0   
00004158  4EB8 407A               6880                  jsr SHIFTS2_FLAGS
0000415C  0C80 80018F80           6881                  cmpi.l #$80018F80,d0     
Line 6882 ERROR: Invalid syntax
00004162                          6882                  bne LSHIFT_FAIL;                 
00004162  0C85 0000001B           6883                  cmpi.l #$0000001B,d5     
Line 6884 ERROR: Invalid syntax
00004168                          6884                  bne LSHIFT_FAIL;                 
00004168                          6885       
00004168                          6886         ; BYTE RIGHT
00004168  E208                    6887                  lsr.b #1,d0       
0000416A  4EB8 407A               6888                  jsr SHIFTS2_FLAGS
0000416E  E408                    6889                  lsr.b #2,d0      
00004170  4EB8 407A               6890                  jsr SHIFTS2_FLAGS
00004174  E608                    6891                  lsr.b #3,d0   
00004176  4EB8 407A               6892                  jsr SHIFTS2_FLAGS
0000417A  E208                    6893                  lsr.b #1,d0   
0000417C  4EB8 407A               6894                  jsr SHIFTS2_FLAGS
00004180  0C80 80018F01           6895                  cmpi.l #$80018F01,d0     
Line 6896 ERROR: Invalid syntax
00004186                          6896                  bne LSHIFT_FAIL;                 
00004186  0C85 0000001B           6897                  cmpi.l #$0000001B,d5     
Line 6898 ERROR: Invalid syntax
0000418C                          6898                  bne LSHIFT_FAIL;                 
0000418C                          6899       
0000418C                          6900         ; WORD LEFT
0000418C  E348                    6901                  lsl.w #1,d0       
0000418E  4EB8 407A               6902                  jsr SHIFTS2_FLAGS
00004192  E548                    6903                  lsl.w #2,d0      
00004194  4EB8 407A               6904                  jsr SHIFTS2_FLAGS
00004198  E748                    6905                  lsl.w #3,d0   
0000419A  4EB8 407A               6906                  jsr SHIFTS2_FLAGS
0000419E  EB48                    6907                  lsl.w #5,d0   
000041A0  4EB8 407A               6908                  jsr SHIFTS2_FLAGS
000041A4  0C80 80010800           6909                  cmpi.l #$80010800,d0     
Line 6910 ERROR: Invalid syntax
000041AA                          6910                  bne LSHIFT_FAIL;                 
000041AA  0C85 00000025           6911                  cmpi.l #$00000025,d5     
Line 6912 ERROR: Invalid syntax
000041B0                          6912                  bne LSHIFT_FAIL;                 
000041B0                          6913                    
000041B0                          6914         ; WORD RIGHT
000041B0  EA48                    6915                  lsr.w #5,d0       
000041B2  4EB8 407A               6916                  jsr SHIFTS2_FLAGS
000041B6  E248                    6917                  lsr.w #1,d0      
000041B8  4EB8 407A               6918                  jsr SHIFTS2_FLAGS
000041BC  E448                    6919                  lsr.w #2,d0   
000041BE  4EB8 407A               6920                  jsr SHIFTS2_FLAGS
000041C2  E848                    6921                  lsr.w #4,d0   
000041C4  4EB8 407A               6922                  jsr SHIFTS2_FLAGS
000041C8  0C80 80010000           6923                  cmpi.l #$80010000,d0     
Line 6924 ERROR: Invalid syntax
000041CE                          6924                  bne LSHIFT_FAIL;                 
000041CE  0C85 0000002A           6925                  cmpi.l #$0000002A,d5     
Line 6926 ERROR: Invalid syntax
000041D4                          6926                  bne LSHIFT_FAIL;                 
000041D4                          6927                 
000041D4                          6928         ; LONG LEFT
000041D4  203C 80018FF1           6929                  move.l #$80018FF1,d0   
000041DA  E388                    6930                  lsl.l #1,d0       
000041DC  4EB8 407A               6931                  jsr SHIFTS2_FLAGS
000041E0  E588                    6932                  lsl.l #2,d0      
000041E2  4EB8 407A               6933                  jsr SHIFTS2_FLAGS
000041E6  EF88                    6934                  lsl.l #7,d0   
000041E8  4EB8 407A               6935                  jsr SHIFTS2_FLAGS
000041EC  E988                    6936                  lsl.l #4,d0   
000041EE  4EB8 407A               6937                  jsr SHIFTS2_FLAGS
000041F2  0C80 63FC4000           6938                  cmpi.l #$63FC4000,d0     
Line 6939 ERROR: Invalid syntax
000041F8                          6939                  bne LSHIFT_FAIL;                 
000041F8  0C85 0000002B           6940                  cmpi.l #$0000002B,d5     
Line 6941 ERROR: Invalid syntax
000041FE                          6941                  bne LSHIFT_FAIL;                 
000041FE                          6942                                  
000041FE                          6943         ; LONG RIGHT
000041FE  203C 80018FF1           6944                  move.l #$80018FF1,d0   
00004204  E288                    6945                  lsr.l #1,d0       
00004206  4EB8 407A               6946                  jsr SHIFTS2_FLAGS
0000420A  EA88                    6947                  lsr.l #5,d0      
0000420C  4EB8 407A               6948                  jsr SHIFTS2_FLAGS
00004210  EE88                    6949                  lsr.l #7,d0   
00004212  4EB8 407A               6950                  jsr SHIFTS2_FLAGS
00004216  E088                    6951                  lsr.l #8,d0   
00004218  4EB8 407A               6952                  jsr SHIFTS2_FLAGS
0000421C  0C80 00000400           6953                  cmpi.l #$00000400,d0     
Line 6954 ERROR: Invalid syntax
00004222                          6954                  bne LSHIFT_FAIL;                 
00004222  0C85 0000002D           6955                  cmpi.l #$0000002D,d5     
Line 6956 ERROR: Invalid syntax
00004228                          6956                  bne LSHIFT_FAIL;                 
00004228                          6957     
00004228                          6958              
00004228                          6959      ; Shift a Memory location LEFT and RIGHT with shift_count of 1 - WORD only
00004228                          6960      
00004228  7A00                    6961                  move.l #$00000000,d5   
0000422A  207C 00000100           6962                  move.l #$00000100,a0 
00004230  30BC 8FF1               6963                  move.w #$8FF1,(a0)
00004234                          6964                  
00004234                          6965         ; WORD LEFT
00004234  E3D0                    6966                  lsl  (a0)       
00004236  4EB8 407A               6967                  jsr SHIFTS2_FLAGS
0000423A  E3D0                    6968                  lsl  (a0)       
0000423C  4EB8 407A               6969                  jsr SHIFTS2_FLAGS
00004240  E3D0                    6970                  lsl  (a0)       
00004242  4EB8 407A               6971                  jsr SHIFTS2_FLAGS
00004246  E3D0                    6972                  lsl  (a0)       
00004248  4EB8 407A               6973                  jsr SHIFTS2_FLAGS
0000424C  3010                    6974                  move.w (a0),d0
0000424E  0C80 0000FF10           6975                  cmpi.l #$0000FF10,d0     
Line 6976 ERROR: Invalid syntax
00004254                          6976                  bne LSHIFT_FAIL;                 
00004254  0C85 00000009           6977                  cmpi.l #$00000009,d5     
Line 6978 ERROR: Invalid syntax
0000425A                          6978                  bne LSHIFT_FAIL;                 
0000425A                          6979                    
0000425A                          6980         ; WORD RIGHT
0000425A  E2D0                    6981                  lsr (a0)       
0000425C  4EB8 407A               6982                  jsr SHIFTS2_FLAGS
00004260  E2D0                    6983                  lsr (a0)       
00004262  4EB8 407A               6984                  jsr SHIFTS2_FLAGS
00004266  E2D0                    6985                  lsr (a0)       
00004268  4EB8 407A               6986                  jsr SHIFTS2_FLAGS                
0000426C  E2D0                    6987                  lsr (a0)       
0000426E  4EB8 407A               6988                  jsr SHIFTS2_FLAGS               
00004272  E2D0                    6989                  lsr (a0)       
00004274  4EB8 407A               6990                  jsr SHIFTS2_FLAGS
00004278  E2D0                    6991                  lsr (a0)       
0000427A  4EB8 407A               6992                  jsr SHIFTS2_FLAGS
0000427E  3010                    6993                  move.w (a0),d0
00004280  0C80 000003FC           6994                  cmpi.l #$000003FC,d0     
Line 6995 ERROR: Invalid syntax
00004286                          6995                  bne LSHIFT_FAIL;                 
00004286  0C85 0000000A           6996                  cmpi.l #$0000000A,d5     
Line 6997 ERROR: Invalid syntax
0000428C                          6997                  bne LSHIFT_FAIL;                 
0000428C                          6998  
0000428C  307C FF00               6999                  movea #TESTSTATUS,a0
00004290  117C 0001 003C          7000                  move.b #$1,$3c(a0)
00004296  4E75                    7001                  rts      
00004298                          7002  
00004298                          7003  LSHIFT_FAIL:
00004298  307C FF00               7004      movea #TESTSTATUS,a0
0000429C  117C 0002 003C          7005      move.b #$2,$3c(a0)
000042A2  4E75                    7006      rts
Line 7007 WARNING: END directive missing, starting address not set

1105 errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ABCD_FAIL           29DE
ABCD_INNER1         28F4
ABCD_INNER2         2968
ABCD_NO_C1          2916
ABCD_NO_C2          2920
ABCD_NO_C3          298A
ABCD_NO_C4          2994
ABCD_OUTER1         28F2
ABCD_OUTER2         2966
ADDA_FAIL           3622
ADDA_OUTER1         35EE
ADDQ_FAIL           2DBE
ADDQ_LOOP1          2D1A
ADDQ_LOOP2          2D56
ADDQ_LOOP3          2D88
ADDX_FAIL           37B6
ADDX_LOOP3          374C
ADDX_LOOP4          376C
ADDX_LOOP5          378C
ADDX_OUTER1         36B8
ADD_FAIL            34BE
ADD_I_FAIL          1D18
ADD_OUTER1          33F0
ADD_OUTER2          3462
ALL_DONE            F000
ANDI_TO_CCR_FAIL    6D8
ANDI_TO_SR_FAIL     724
AND_FAIL            316E
AND_OUTER1          30A0
AND_OUTER2          3112
BCC1                2C1E
BCC10               2C5E
BCC11               2C64
BCC12               2C6C
BCC13               2C72
BCC14               2C7A
BCC2                2C26
BCC3                2C2C
BCC4                2C34
BCC5                2C3A
BCC6                2C42
BCC7                2C48
BCC8                2C50
BCC9                2C56
BCC_FAIL            2C86
BCHG_FAIL           1090
BCLR_FAIL           13A6
BOOL_I_FAIL         1A78
BSET_FAIL           184E
BSR_CLOSE1          1A84
BSR_CLOSE2          1ABC
BSR_FAIL            1AC4
BSR_FAR1            568
BSR_FAR2            2C04
BTST_FAIL           BEA
CHK_FAIL            2366
CLR_FAIL            25B8
CMPA_FAIL           32FC
CMPA_OUTER1         32B0
CMPM_FAIL           33C2
CMPM_LOOP1          3358
CMPM_LOOP2          3376
CMPM_LOOP3          3394
CMP_FAIL            3282
CMP_I_FAIL          1C1C
CMP_OUTER1          3226
DBCC_FAIL           2CBE
DBCC_LOOP1          2C9A
DBCC_LOOP2          2CA6
DIVS_FAIL           2F76
DIVS_OUTER1         2F3A
DIVU_FAIL           2F12
DIVU_OUTER1         2ED6
EORI_TO_CCR_FAIL    640
EORI_TO_SR_FAIL     68C
EOR_FAIL            31F8
EOR_OUTER2          319C
EXCEPTION_6         F010
EXCEPTION_7         F020
EXG_FAIL            3A08
EXT_FAIL            2172
LEA1                2226
LEAPEA_FAIL         2242
LINK_FAIL           22F2
LSHIFT_FAIL         4298
MOVE1               1F2E
MOVE2               1EC8
MOVE3               1F98
MOVE4               207E
MOVEM_FAIL          28C2
MOVEP_FAIL          18EC
MOVEQ_FAIL          2EAE
MOVE_FAIL           1FD2
MOVE_FLAGS_FAIL     213E
MOVE_USP_FAIL       231A
MULS_FAIL           399C
MULS_OUTER1         3966
MULU_FAIL           393E
MULU_OUTER1         3908
NBCD_FAIL           2BA2
NBCD_LOOP           2B1E
NBCD_LOOP1          2B62
NBCD_NO_C           2B2C
NBCD_NO_C1          2B78
NBCD_NO_Z           2B32
NBCD_NO_Z1          2B7E
NEGS_FAIL           256E
OP_ABCD             28CE
OP_ADD              33CE
OP_ADDA             35C6
OP_ADDQ             2D06
OP_ADDX             3696
OP_ADD_I            1C28
OP_AND              307E
OP_ANDI_TO_CCR      698
OP_ANDI_TO_SR       6E4
OP_BCC              2C18
OP_BCHG             BF6
OP_BCLR             109C
OP_BOOL_I           18F8
OP_BSET             13B2
OP_BSR              1A8C
OP_BTST             730
OP_BTST0            922
OP_BTST1            930
OP_BTST10           98A
OP_BTST11           994
OP_BTST12           99A
OP_BTST2            93A
OP_BTST20           B5C
OP_BTST21           B68
OP_BTST22           B70
OP_BTST23           B78
OP_BTST24           B80
OP_BTST25           B88
OP_BTST26           B90
OP_BTST27           B98
OP_BTST28           BA0
OP_BTST29           BA8
OP_BTST3            944
OP_BTST30           BB0
OP_BTST31           BB8
OP_BTST32           BBC
OP_BTST4            94E
OP_BTST5            958
OP_BTST6            962
OP_BTST7            96C
OP_BTST8            976
OP_BTST9            980
OP_CHK              2326
OP_CLR              257A
OP_CMP              3204
OP_CMPA             328E
OP_CMPM             3308
OP_CMP_I            1AD0
OP_DBCC             2C92
OP_DIVS             2F1E
OP_DIVU             2EBA
OP_EOR              317A
OP_EORI_TO_CCR      600
OP_EORI_TO_SR       64C
OP_EXG              39A8
OP_EXT              214A
OP_LEAPEA           21A4
OP_LINKS            22CC
OP_MOVE             1E20
OP_MOVEM            25C4
OP_MOVEP            185A
OP_MOVEQ            2E8E
OP_MOVE_USP         22FE
OP_MOVE_XXX_FLAGS   1FDE
OP_MULS             394A
OP_MULU             38EC
OP_NBCD             2B06
OP_NEGS             2372
OP_OR               2F82
OP_ORI_TO_CCR       570
OP_ORI_TO_SR        5B8
OP_ROX              3A20
OP_ROXX             3C3E
OP_RTR              2BE0
OP_SBCD             29EA
OP_SCC              2CCA
OP_SHIFTS           3E5C
OP_SHIFTS2          4086
OP_SUB              34CA
OP_SUBA             362E
OP_SUBQ             2DCA
OP_SUBX             37C0
OP_SUB_I            1D24
OP_SWAP             217E
OP_TAS              224E
OP_TRAPV            2BAE
OP_TST              2286
ORI_TO_CCR_FAIL     5AC
ORI_TO_SR_FAIL      5F4
OR_FAIL             3072
OR_OUTER1           2FA4
OR_OUTER2           3016
ROXX_FAIL           3E44
ROXX_FLAGS          3C32
ROXX_LOOP1          3C48
ROXX_LOOP2          3C66
ROXX_LOOP3          3C84
ROXX_LOOP4          3CA2
ROXX_LOOP5          3CC0
ROXX_LOOP6          3CDE
ROX_FAIL            3C26
ROX_FLAGS           3A14
ROX_LOOP1           3A2A
ROX_LOOP2           3A48
ROX_LOOP3           3A66
ROX_LOOP4           3A84
ROX_LOOP5           3AA2
ROX_LOOP6           3AC0
RTR_DONE            2BEE
RTR_FAIL            2C0C
SBCD_FAIL           2AFA
SBCD_INNER1         2A10
SBCD_INNER2         2A84
SBCD_NO_C1          2A32
SBCD_NO_C2          2A3C
SBCD_NO_C3          2AA6
SBCD_NO_C4          2AB0
SBCD_OUTER1         2A0E
SBCD_OUTER2         2A82
SCC_FAIL            2CFA
SHIFTS2_FLAGS       407A
SHIFTS2_LOOP1       4090
SHIFTS2_LOOP2       40AE
SHIFTS2_LOOP3       40CC
SHIFTS2_LOOP4       40EA
SHIFTS2_LOOP5       4108
SHIFTS2_LOOP6       4126
SHIFTS_FLAGS        3E50
SHIFTS_LOOP1        3E66
SHIFTS_LOOP2        3E84
SHIFTS_LOOP3        3EA2
SHIFTS_LOOP4        3EC0
SHIFTS_LOOP5        3EDE
SHIFTS_LOOP6        3EFC
SHIFT_FAIL          406E
SUBA_FAIL           368A
SUBA_OUTER1         3656
SUBQ_FAIL           2E82
SUBQ_LOOP1          2DE2
SUBQ_LOOP2          2E1A
SUBQ_LOOP3          2E4C
SUBX_FAIL           38E0
SUBX_LOOP3          3876
SUBX_LOOP4          3896
SUBX_LOOP5          38B6
SUBX_OUTER1         37E2
SUB_FAIL            35BA
SUB_I_FAIL          1E14
SUB_OUTER1          34EC
SUB_OUTER2          355E
SWAP_FAIL           2198
TAS_FAIL            227A
TESTSTATUS          FFFFFF00
TRAPV_FAIL          2BD4
TST_FAIL            22C0
